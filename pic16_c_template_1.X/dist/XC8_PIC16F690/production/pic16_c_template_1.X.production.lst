

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jul 15 16:42:26 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0095                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0115                     	;# 
   120  0116                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  011A                     	;# 
   124  011B                     	;# 
   125  011E                     	;# 
   126  011F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  019D                     	;# 
   130  019E                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010F                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0118                     	;# 
   195  0119                     	;# 
   196  011A                     	;# 
   197  011B                     	;# 
   198  011E                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  019D                     	;# 
   203  019E                     	;# 
   204  0000                     	;# 
   205  0001                     	;# 
   206  0002                     	;# 
   207  0003                     	;# 
   208  0004                     	;# 
   209  0005                     	;# 
   210  0006                     	;# 
   211  0007                     	;# 
   212  000A                     	;# 
   213  000B                     	;# 
   214  000C                     	;# 
   215  000D                     	;# 
   216  000E                     	;# 
   217  000E                     	;# 
   218  000F                     	;# 
   219  0010                     	;# 
   220  0011                     	;# 
   221  0012                     	;# 
   222  0013                     	;# 
   223  0014                     	;# 
   224  0015                     	;# 
   225  0015                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001C                     	;# 
   232  001D                     	;# 
   233  001E                     	;# 
   234  001F                     	;# 
   235  0081                     	;# 
   236  0085                     	;# 
   237  0086                     	;# 
   238  0087                     	;# 
   239  008C                     	;# 
   240  008D                     	;# 
   241  008E                     	;# 
   242  008F                     	;# 
   243  0090                     	;# 
   244  0092                     	;# 
   245  0093                     	;# 
   246  0093                     	;# 
   247  0093                     	;# 
   248  0094                     	;# 
   249  0095                     	;# 
   250  0095                     	;# 
   251  0096                     	;# 
   252  0096                     	;# 
   253  0097                     	;# 
   254  0098                     	;# 
   255  0099                     	;# 
   256  009A                     	;# 
   257  009B                     	;# 
   258  009E                     	;# 
   259  009F                     	;# 
   260  010C                     	;# 
   261  010C                     	;# 
   262  010D                     	;# 
   263  010E                     	;# 
   264  010F                     	;# 
   265  0115                     	;# 
   266  0116                     	;# 
   267  0118                     	;# 
   268  0119                     	;# 
   269  011A                     	;# 
   270  011B                     	;# 
   271  011E                     	;# 
   272  011F                     	;# 
   273  018C                     	;# 
   274  018D                     	;# 
   275  019D                     	;# 
   276  019E                     	;# 
   277  0000                     	;# 
   278  0001                     	;# 
   279  0002                     	;# 
   280  0003                     	;# 
   281  0004                     	;# 
   282  0005                     	;# 
   283  0006                     	;# 
   284  0007                     	;# 
   285  000A                     	;# 
   286  000B                     	;# 
   287  000C                     	;# 
   288  000D                     	;# 
   289  000E                     	;# 
   290  000E                     	;# 
   291  000F                     	;# 
   292  0010                     	;# 
   293  0011                     	;# 
   294  0012                     	;# 
   295  0013                     	;# 
   296  0014                     	;# 
   297  0015                     	;# 
   298  0015                     	;# 
   299  0016                     	;# 
   300  0017                     	;# 
   301  0018                     	;# 
   302  0019                     	;# 
   303  001A                     	;# 
   304  001C                     	;# 
   305  001D                     	;# 
   306  001E                     	;# 
   307  001F                     	;# 
   308  0081                     	;# 
   309  0085                     	;# 
   310  0086                     	;# 
   311  0087                     	;# 
   312  008C                     	;# 
   313  008D                     	;# 
   314  008E                     	;# 
   315  008F                     	;# 
   316  0090                     	;# 
   317  0092                     	;# 
   318  0093                     	;# 
   319  0093                     	;# 
   320  0093                     	;# 
   321  0094                     	;# 
   322  0095                     	;# 
   323  0095                     	;# 
   324  0096                     	;# 
   325  0096                     	;# 
   326  0097                     	;# 
   327  0098                     	;# 
   328  0099                     	;# 
   329  009A                     	;# 
   330  009B                     	;# 
   331  009E                     	;# 
   332  009F                     	;# 
   333  010C                     	;# 
   334  010C                     	;# 
   335  010D                     	;# 
   336  010E                     	;# 
   337  010F                     	;# 
   338  0115                     	;# 
   339  0116                     	;# 
   340  0118                     	;# 
   341  0119                     	;# 
   342  011A                     	;# 
   343  011B                     	;# 
   344  011E                     	;# 
   345  011F                     	;# 
   346  018C                     	;# 
   347  018D                     	;# 
   348  019D                     	;# 
   349  019E                     	;# 
   350  0000                     	;# 
   351  0001                     	;# 
   352  0002                     	;# 
   353  0003                     	;# 
   354  0004                     	;# 
   355  0005                     	;# 
   356  0006                     	;# 
   357  0007                     	;# 
   358  000A                     	;# 
   359  000B                     	;# 
   360  000C                     	;# 
   361  000D                     	;# 
   362  000E                     	;# 
   363  000E                     	;# 
   364  000F                     	;# 
   365  0010                     	;# 
   366  0011                     	;# 
   367  0012                     	;# 
   368  0013                     	;# 
   369  0014                     	;# 
   370  0015                     	;# 
   371  0015                     	;# 
   372  0016                     	;# 
   373  0017                     	;# 
   374  0018                     	;# 
   375  0019                     	;# 
   376  001A                     	;# 
   377  001C                     	;# 
   378  001D                     	;# 
   379  001E                     	;# 
   380  001F                     	;# 
   381  0081                     	;# 
   382  0085                     	;# 
   383  0086                     	;# 
   384  0087                     	;# 
   385  008C                     	;# 
   386  008D                     	;# 
   387  008E                     	;# 
   388  008F                     	;# 
   389  0090                     	;# 
   390  0092                     	;# 
   391  0093                     	;# 
   392  0093                     	;# 
   393  0093                     	;# 
   394  0094                     	;# 
   395  0095                     	;# 
   396  0095                     	;# 
   397  0096                     	;# 
   398  0096                     	;# 
   399  0097                     	;# 
   400  0098                     	;# 
   401  0099                     	;# 
   402  009A                     	;# 
   403  009B                     	;# 
   404  009E                     	;# 
   405  009F                     	;# 
   406  010C                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0115                     	;# 
   412  0116                     	;# 
   413  0118                     	;# 
   414  0119                     	;# 
   415  011A                     	;# 
   416  011B                     	;# 
   417  011E                     	;# 
   418  011F                     	;# 
   419  018C                     	;# 
   420  018D                     	;# 
   421  019D                     	;# 
   422  019E                     	;# 
   423  0000                     	;# 
   424  0001                     	;# 
   425  0002                     	;# 
   426  0003                     	;# 
   427  0004                     	;# 
   428  0005                     	;# 
   429  0006                     	;# 
   430  0007                     	;# 
   431  000A                     	;# 
   432  000B                     	;# 
   433  000C                     	;# 
   434  000D                     	;# 
   435  000E                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0014                     	;# 
   443  0015                     	;# 
   444  0015                     	;# 
   445  0016                     	;# 
   446  0017                     	;# 
   447  0018                     	;# 
   448  0019                     	;# 
   449  001A                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0092                     	;# 
   464  0093                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0095                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0096                     	;# 
   472  0097                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009A                     	;# 
   476  009B                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  0115                     	;# 
   485  0116                     	;# 
   486  0118                     	;# 
   487  0119                     	;# 
   488  011A                     	;# 
   489  011B                     	;# 
   490  011E                     	;# 
   491  011F                     	;# 
   492  018C                     	;# 
   493  018D                     	;# 
   494  019D                     	;# 
   495  019E                     	;# 
   496  0000                     	;# 
   497  0001                     	;# 
   498  0002                     	;# 
   499  0003                     	;# 
   500  0004                     	;# 
   501  0005                     	;# 
   502  0006                     	;# 
   503  0007                     	;# 
   504  000A                     	;# 
   505  000B                     	;# 
   506  000C                     	;# 
   507  000D                     	;# 
   508  000E                     	;# 
   509  000E                     	;# 
   510  000F                     	;# 
   511  0010                     	;# 
   512  0011                     	;# 
   513  0012                     	;# 
   514  0013                     	;# 
   515  0014                     	;# 
   516  0015                     	;# 
   517  0015                     	;# 
   518  0016                     	;# 
   519  0017                     	;# 
   520  0018                     	;# 
   521  0019                     	;# 
   522  001A                     	;# 
   523  001C                     	;# 
   524  001D                     	;# 
   525  001E                     	;# 
   526  001F                     	;# 
   527  0081                     	;# 
   528  0085                     	;# 
   529  0086                     	;# 
   530  0087                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  008E                     	;# 
   534  008F                     	;# 
   535  0090                     	;# 
   536  0092                     	;# 
   537  0093                     	;# 
   538  0093                     	;# 
   539  0093                     	;# 
   540  0094                     	;# 
   541  0095                     	;# 
   542  0095                     	;# 
   543  0096                     	;# 
   544  0096                     	;# 
   545  0097                     	;# 
   546  0098                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009E                     	;# 
   551  009F                     	;# 
   552  010C                     	;# 
   553  010C                     	;# 
   554  010D                     	;# 
   555  010E                     	;# 
   556  010F                     	;# 
   557  0115                     	;# 
   558  0116                     	;# 
   559  0118                     	;# 
   560  0119                     	;# 
   561  011A                     	;# 
   562  011B                     	;# 
   563  011E                     	;# 
   564  011F                     	;# 
   565  018C                     	;# 
   566  018D                     	;# 
   567  019D                     	;# 
   568  019E                     	;# 
   569  0000                     	;# 
   570  0001                     	;# 
   571  0002                     	;# 
   572  0003                     	;# 
   573  0004                     	;# 
   574  0005                     	;# 
   575  0006                     	;# 
   576  0007                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  000D                     	;# 
   581  000E                     	;# 
   582  000E                     	;# 
   583  000F                     	;# 
   584  0010                     	;# 
   585  0011                     	;# 
   586  0012                     	;# 
   587  0013                     	;# 
   588  0014                     	;# 
   589  0015                     	;# 
   590  0015                     	;# 
   591  0016                     	;# 
   592  0017                     	;# 
   593  0018                     	;# 
   594  0019                     	;# 
   595  001A                     	;# 
   596  001C                     	;# 
   597  001D                     	;# 
   598  001E                     	;# 
   599  001F                     	;# 
   600  0081                     	;# 
   601  0085                     	;# 
   602  0086                     	;# 
   603  0087                     	;# 
   604  008C                     	;# 
   605  008D                     	;# 
   606  008E                     	;# 
   607  008F                     	;# 
   608  0090                     	;# 
   609  0092                     	;# 
   610  0093                     	;# 
   611  0093                     	;# 
   612  0093                     	;# 
   613  0094                     	;# 
   614  0095                     	;# 
   615  0095                     	;# 
   616  0096                     	;# 
   617  0096                     	;# 
   618  0097                     	;# 
   619  0098                     	;# 
   620  0099                     	;# 
   621  009A                     	;# 
   622  009B                     	;# 
   623  009E                     	;# 
   624  009F                     	;# 
   625  010C                     	;# 
   626  010C                     	;# 
   627  010D                     	;# 
   628  010E                     	;# 
   629  010F                     	;# 
   630  0115                     	;# 
   631  0116                     	;# 
   632  0118                     	;# 
   633  0119                     	;# 
   634  011A                     	;# 
   635  011B                     	;# 
   636  011E                     	;# 
   637  011F                     	;# 
   638  018C                     	;# 
   639  018D                     	;# 
   640  019D                     	;# 
   641  019E                     	;# 
   642                           
   643                           	psect	idataBANK0
   644  0002                     __pidataBANK0:	
   645                           
   646                           ;initializer for _glog_level
   647  0002  3401               	retlw	1
   648                           
   649                           ;initializer for _gtype_of_game
   650  0003  3401               	retlw	1
   651  000E                     _TMR1	set	14
   652  000B                     _INTCONbits	set	11
   653  000C                     _PIR1bits	set	12
   654  0005                     _PORTA	set	5
   655  0006                     _PORTB	set	6
   656  0007                     _PORTC	set	7
   657  001A                     _RCREG	set	26
   658  0018                     _RCSTAbits	set	24
   659  0010                     _T1CONbits	set	16
   660  0012                     _T2CONbits	set	18
   661  0001                     _TMR0	set	1
   662  0019                     _TXREG	set	25
   663  0028                     _RA0	set	40
   664  002A                     _RA2	set	42
   665  005B                     _RABIE	set	91
   666  0058                     _RABIF	set	88
   667  0034                     _RB4	set	52
   668  0036                     _RB6	set	54
   669  0038                     _RC0	set	56
   670  003A                     _RC2	set	58
   671  003B                     _RC3	set	59
   672  003E                     _RC6	set	62
   673  0065                     _RCIF	set	101
   674  0060                     _TMR1IF	set	96
   675  0061                     _TMR2IF	set	97
   676  0092                     _TMR2ON	set	146
   677  0064                     _TXIF	set	100
   678  009B                     _BAUDCTLbits	set	155
   679  0081                     _OPTION_REGbits	set	129
   680  008F                     _OSCCONbits	set	143
   681  008C                     _PIE1bits	set	140
   682  0092                     _PR2	set	146
   683  0099                     _SPBRG	set	153
   684  009A                     _SPBRGH	set	154
   685  0085                     _TRISA	set	133
   686  0086                     _TRISB	set	134
   687  0086                     _TRISBbits	set	134
   688  0087                     _TRISC	set	135
   689  0098                     _TXSTAbits	set	152
   690  04B0                     _IOCA0	set	1200
   691  011E                     _ANSEL	set	286
   692  011F                     _ANSELH	set	287
   693                           
   694                           	psect	strings
   695  0800                     __pstrings:	
   696  0800                     stringtab:	
   697  0800                     __stringtab:	
   698  0800                     stringcode:	
   699                           ;	String table - string pointers are 1 byte each
   700                           
   701  0800                     stringdir:	
   702  0800  3008               	movlw	high stringdir
   703  0801  008A               	movwf	10
   704  0802  0804               	movf	4,w
   705  0803  0A84               	incf	4,f
   706  0804  0782               	addwf	2,f
   707  0805                     __stringbase:	
   708  0805  3400               	retlw	0
   709  0806                     __end_of__stringtab:	
   710  0806                     __stringdata:	
   711  0806                     STR_1:	
   712  0806  344A               	retlw	74	;'J'
   713  0807  346F               	retlw	111	;'o'
   714  0808  3475               	retlw	117	;'u'
   715  0809  3465               	retlw	101	;'e'
   716  080A  3475               	retlw	117	;'u'
   717  080B  3472               	retlw	114	;'r'
   718  080C  3420               	retlw	32	;' '
   719  080D  3400               	retlw	0
   720  080E                     __end_of__stringdata:	
   721                           
   722                           ; #config settings
   723  0000                     
   724                           	psect	cinit
   725  0013                     start_initialization:	
   726  0013                     __initialization:	
   727                           
   728                           ; Clear objects allocated to BANK0
   729  0013  1383               	bcf	3,7	;select IRP bank0
   730  0014  3047               	movlw	low __pbssBANK0
   731  0015  0084               	movwf	4
   732  0016  304F               	movlw	low (__pbssBANK0+8)
   733  0017  118A  27F7  118A   	fcall	clear_ram0
   734                           
   735                           ; Clear objects allocated to BANK1
   736  001A  1683               	bsf	3,5	;RP0=1, select bank1
   737  001B  1303               	bcf	3,6	;RP1=0, select bank1
   738  001C  01D1               	clrf	__pbssBANK1& (0+127)
   739                           
   740                           ; Clear objects allocated to BANK2
   741  001D  1783               	bsf	3,7	;select IRP bank2
   742  001E  3020               	movlw	low __pbssBANK2
   743  001F  0084               	movwf	4
   744  0020  3048               	movlw	low (__pbssBANK2+40)
   745  0021  118A  27F7  118A   	fcall	clear_ram0
   746                           
   747                           ; Initialize objects allocated to BANK0
   748  0024  1283               	bcf	3,5	;RP0=0, select bank0
   749  0025  1303               	bcf	3,6	;RP1=0, select bank0
   750  0026  118A  2002  118A   	fcall	__pidataBANK0	;fetch initializer
   751  0029  00CF               	movwf	__pdataBANK0& (0+127)
   752  002A  118A  2003         	fcall	__pidataBANK0+1	;fetch initializer
   753  002C  00D0               	movwf	(__pdataBANK0+1)& (0+127)
   754  002D                     end_of_initialization:	
   755                           ;End of C runtime variable initialization code
   756                           
   757  002D                     __end_of__initialization:	
   758  002D  0183               	clrf	3
   759  002E  158A  2FBF         	ljmp	_main	;jump to C main() function
   760                           
   761                           	psect	bssBANK0
   762  0047                     __pbssBANK0:	
   763  0047                     _elapsed_time:	
   764  0047                     	ds	2
   765  0049                     _ggame_time:	
   766  0049                     	ds	2
   767  004B                     _timer1_tick_nbr:	
   768  004B                     	ds	2
   769  004D                     _timer2_tick_nbr:	
   770  004D                     	ds	2
   771                           
   772                           	psect	dataBANK0
   773  004F                     __pdataBANK0:	
   774  004F                     _glog_level:	
   775  004F                     	ds	1
   776  0050                     _gtype_of_game:	
   777  0050                     	ds	1
   778                           
   779                           	psect	bssBANK1
   780  00D1                     __pbssBANK1:	
   781  00D1                     _gcurrent_player:	
   782  00D1                     	ds	1
   783                           
   784                           	psect	bssBANK2
   785  0120                     __pbssBANK2:	
   786  0120                     _player_array:	
   787  0120                     	ds	40
   788                           
   789                           	psect	clrtext
   790  07F7                     clear_ram0:	
   791                           ;	Called with FSR containing the base address, and
   792                           ;	W with the last address+1
   793                           
   794  07F7  0064               	clrwdt	;clear the watchdog before getting into this loop
   795  07F8                     clrloop0:	
   796  07F8  0180               	clrf	0	;clear RAM location pointed to by FSR
   797  07F9  0A84               	incf	4,f	;increment pointer
   798  07FA  0604               	xorwf	4,w	;XOR with final address
   799  07FB  1903               	btfsc	3,2	;have we reached the end yet?
   800  07FC  3400               	retlw	0	;all done for this memory range, return
   801  07FD  0604               	xorwf	4,w	;XOR again to restore value
   802  07FE  2FF8               	goto	clrloop0	;do the next byte
   803                           
   804                           	psect	cstackBANK1
   805  00A0                     __pcstackBANK1:	
   806  00A0                     ??_init_timer_0:	
   807  00A0                     ??_init_timer_2:	
   808                           ; 0 bytes @ 0x0
   809                           
   810  00A0                     ??_initUart:	
   811                           ; 0 bytes @ 0x0
   812                           
   813  00A0                     ??_init_interrupt:	
   814                           ; 0 bytes @ 0x0
   815                           
   816  00A0                     ??_ConfigureOscillator:	
   817                           ; 0 bytes @ 0x0
   818                           
   819  00A0                     ??_Lcd4_Port:	
   820                           ; 0 bytes @ 0x0
   821                           
   822  00A0                     ?_strcpy:	
   823                           ; 0 bytes @ 0x0
   824                           
   825  00A0                     ?_strcat:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  00A0                     ?___awmod:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  00A0                     ?___lwdiv:	
   832                           ; 2 bytes @ 0x0
   833                           
   834  00A0                     ?___lwmod:	
   835                           ; 2 bytes @ 0x0
   836                           
   837  00A0                     Lcd4_Port@a:	
   838                           ; 2 bytes @ 0x0
   839                           
   840  00A0                     strcat@from:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  00A0                     strcpy@from:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  00A0                     ___awmod@divisor:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  00A0                     ___lwdiv@divisor:	
   850                           ; 2 bytes @ 0x0
   851                           
   852  00A0                     ___lwmod@divisor:	
   853                           ; 2 bytes @ 0x0
   854                           
   855                           
   856                           ; 2 bytes @ 0x0
   857  00A0                     	ds	1
   858  00A1                     ??_strcpy:	
   859  00A1                     ??_strcat:	
   860                           ; 0 bytes @ 0x1
   861                           
   862  00A1                     ??_Lcd4_Cmd:	
   863                           ; 0 bytes @ 0x1
   864                           
   865  00A1                     ??_Lcd4_Write_Char:	
   866                           ; 0 bytes @ 0x1
   867                           
   868                           
   869                           ; 0 bytes @ 0x1
   870  00A1                     	ds	1
   871  00A2                     strcat@to:	
   872  00A2                     strcpy@to:	
   873                           ; 1 bytes @ 0x2
   874                           
   875  00A2                     ___awmod@dividend:	
   876                           ; 1 bytes @ 0x2
   877                           
   878  00A2                     ___lwdiv@dividend:	
   879                           ; 2 bytes @ 0x2
   880                           
   881  00A2                     ___lwmod@dividend:	
   882                           ; 2 bytes @ 0x2
   883                           
   884                           
   885                           ; 2 bytes @ 0x2
   886  00A2                     	ds	1
   887  00A3                     Lcd4_Cmd@a:	
   888  00A3                     Lcd4_Write_Char@temp:	
   889                           ; 1 bytes @ 0x3
   890                           
   891  00A3                     strcat@cp:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  00A3                     strcpy@cp:	
   895                           ; 1 bytes @ 0x3
   896                           
   897                           
   898                           ; 1 bytes @ 0x3
   899  00A3                     	ds	1
   900  00A4                     ?_Lcd4_Set_Cursor:	
   901  00A4                     ??_Lcd4_Init:	
   902                           ; 0 bytes @ 0x4
   903                           
   904  00A4                     ??_Lcd4_Clear:	
   905                           ; 0 bytes @ 0x4
   906                           
   907  00A4                     ??___awmod:	
   908                           ; 0 bytes @ 0x4
   909                           
   910  00A4                     ??___lwdiv:	
   911                           ; 0 bytes @ 0x4
   912                           
   913  00A4                     ??___lwmod:	
   914                           ; 0 bytes @ 0x4
   915                           
   916  00A4                     Lcd4_Set_Cursor@pixel_nb:	
   917                           ; 0 bytes @ 0x4
   918                           
   919  00A4                     Lcd4_Write_Char@y:	
   920                           ; 1 bytes @ 0x4
   921                           
   922                           
   923                           ; 1 bytes @ 0x4
   924  00A4                     	ds	1
   925  00A5                     ??_Lcd4_Set_Cursor:	
   926  00A5                     Lcd4_Write_Char@a:	
   927                           ; 0 bytes @ 0x5
   928                           
   929  00A5                     ___awmod@counter:	
   930                           ; 1 bytes @ 0x5
   931                           
   932  00A5                     ___lwdiv@counter:	
   933                           ; 1 bytes @ 0x5
   934                           
   935  00A5                     ___lwmod@counter:	
   936                           ; 1 bytes @ 0x5
   937                           
   938                           
   939                           ; 1 bytes @ 0x5
   940  00A5                     	ds	1
   941  00A6                     ??_Lcd4_Write_String:	
   942  00A6                     ??_system_init:	
   943                           ; 0 bytes @ 0x6
   944                           
   945  00A6                     ___awmod@sign:	
   946                           ; 0 bytes @ 0x6
   947                           
   948  00A6                     ___lwdiv@quotient:	
   949                           ; 1 bytes @ 0x6
   950                           
   951                           
   952                           ; 2 bytes @ 0x6
   953  00A6                     	ds	1
   954  00A7                     Lcd4_Write_String@i:	
   955                           
   956                           ; 2 bytes @ 0x7
   957  00A7                     	ds	1
   958  00A8                     ?_utoa:	
   959  00A8                     utoa@val:	
   960                           ; 1 bytes @ 0x8
   961                           
   962                           
   963                           ; 2 bytes @ 0x8
   964  00A8                     	ds	1
   965  00A9                     Lcd4_Set_Cursor@ligne:	
   966  00A9                     Lcd4_Write_String@a:	
   967                           ; 1 bytes @ 0x9
   968                           
   969                           
   970                           ; 1 bytes @ 0x9
   971  00A9                     	ds	1
   972  00AA                     Lcd4_Set_Cursor@lCmdMsb:	
   973  00AA                     utoa@base:	
   974                           ; 1 bytes @ 0xA
   975                           
   976                           
   977                           ; 2 bytes @ 0xA
   978  00AA                     	ds	1
   979  00AB                     Lcd4_Set_Cursor@lCmdLsb:	
   980                           
   981                           ; 1 bytes @ 0xB
   982  00AB                     	ds	1
   983  00AC                     ??_utoa:	
   984                           
   985                           ; 0 bytes @ 0xC
   986  00AC                     	ds	1
   987  00AD                     utoa@v:	
   988                           
   989                           ; 2 bytes @ 0xD
   990  00AD                     	ds	2
   991  00AF                     utoa@c:	
   992                           
   993                           ; 1 bytes @ 0xF
   994  00AF                     	ds	1
   995  00B0                     utoa@buf:	
   996                           
   997                           ; 1 bytes @ 0x10
   998  00B0                     	ds	1
   999  00B1                     ??_display_player_nbr:	
  1000                           
  1001                           ; 0 bytes @ 0x11
  1002  00B1                     	ds	2
  1003  00B3                     display_player_nbr@string:	
  1004                           
  1005                           ; 16 bytes @ 0x13
  1006  00B3                     	ds	16
  1007  00C3                     display_player_nbr@player_number:	
  1008                           
  1009                           ; 1 bytes @ 0x23
  1010  00C3                     	ds	1
  1011  00C4                     display_player_nbr@string_player_number:	
  1012                           
  1013                           ; 2 bytes @ 0x24
  1014  00C4                     	ds	2
  1015  00C6                     ?_initiate_game:	
  1016  00C6                     initiate_game@type_of_game:	
  1017                           ; 2 bytes @ 0x26
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0x26
  1021  00C6                     	ds	1
  1022  00C7                     initiate_game@game_time:	
  1023                           
  1024                           ; 2 bytes @ 0x27
  1025  00C7                     	ds	2
  1026  00C9                     ??_initiate_game:	
  1027                           
  1028                           ; 0 bytes @ 0x29
  1029  00C9                     	ds	5
  1030  00CE                     initiate_game@player_nb:	
  1031                           
  1032                           ; 1 bytes @ 0x2E
  1033  00CE                     	ds	1
  1034  00CF                     initiate_game@i:	
  1035                           
  1036                           ; 2 bytes @ 0x2F
  1037  00CF                     	ds	2
  1038  00D1                     ??_main:	
  1039                           
  1040                           	psect	cstackCOMMON
  1041  0070                     __pcstackCOMMON:	
  1042                           ; 0 bytes @ 0x31
  1043                           
  1044  0070                     ?_display_player_nbr:	
  1045  0070                     ?_Lcd4_Write_String:	
  1046                           ; 0 bytes @ 0x0
  1047                           
  1048  0070                     ?_uart_putc:	
  1049                           ; 0 bytes @ 0x0
  1050                           
  1051  0070                     ??_uart_putc:	
  1052                           ; 0 bytes @ 0x0
  1053                           
  1054  0070                     ??_uart_getc:	
  1055                           ; 0 bytes @ 0x0
  1056                           
  1057  0070                     ?_system_init:	
  1058                           ; 0 bytes @ 0x0
  1059                           
  1060  0070                     ?_init_timer_0:	
  1061                           ; 0 bytes @ 0x0
  1062                           
  1063  0070                     ?_init_timer_2:	
  1064                           ; 0 bytes @ 0x0
  1065                           
  1066  0070                     ?_initUart:	
  1067                           ; 0 bytes @ 0x0
  1068                           
  1069  0070                     ?_Lcd4_Init:	
  1070                           ; 0 bytes @ 0x0
  1071                           
  1072  0070                     ?_game_phase:	
  1073                           ; 0 bytes @ 0x0
  1074                           
  1075  0070                     ?_switch_player:	
  1076                           ; 0 bytes @ 0x0
  1077                           
  1078  0070                     ?_init_interrupt:	
  1079                           ; 0 bytes @ 0x0
  1080                           
  1081  0070                     ?_isr:	
  1082                           ; 0 bytes @ 0x0
  1083                           
  1084  0070                     ?_main:	
  1085                           ; 0 bytes @ 0x0
  1086                           
  1087  0070                     ?_ConfigureOscillator:	
  1088                           ; 0 bytes @ 0x0
  1089                           
  1090  0070                     ?_Lcd4_Port:	
  1091                           ; 0 bytes @ 0x0
  1092                           
  1093  0070                     ?_Lcd4_Cmd:	
  1094                           ; 0 bytes @ 0x0
  1095                           
  1096  0070                     ?_Lcd4_Write_Char:	
  1097                           ; 0 bytes @ 0x0
  1098                           
  1099  0070                     ?i1_display_player_nbr:	
  1100                           ; 0 bytes @ 0x0
  1101                           
  1102  0070                     ?i1_Lcd4_Port:	
  1103                           ; 0 bytes @ 0x0
  1104                           
  1105  0070                     ??i1_Lcd4_Port:	
  1106                           ; 0 bytes @ 0x0
  1107                           
  1108  0070                     ?i1_Lcd4_Cmd:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?i1_Lcd4_Write_Char:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?i1_Lcd4_Write_String:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_uart_getc:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?i1_strcat:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0070                     ?i1_strcpy:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0070                     ?_Lcd4_Clear:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0070                     ?i1___awmod:	
  1130                           ; 2 bytes @ 0x0
  1131                           
  1132  0070                     ?i1___lwdiv:	
  1133                           ; 2 bytes @ 0x0
  1134                           
  1135  0070                     ?i1___lwmod:	
  1136                           ; 2 bytes @ 0x0
  1137                           
  1138  0070                     uart_putc@data:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141  0070                     i1Lcd4_Port@a:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0070                     i1strcat@from:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0070                     i1strcpy@from:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0070                     i1___awmod@divisor:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0070                     i1___lwdiv@divisor:	
  1154                           ; 2 bytes @ 0x0
  1155                           
  1156  0070                     i1___lwmod@divisor:	
  1157                           ; 2 bytes @ 0x0
  1158                           
  1159                           
  1160                           ; 2 bytes @ 0x0
  1161  0070                     	ds	1
  1162  0071                     ??i1_Lcd4_Cmd:	
  1163  0071                     ??i1_Lcd4_Write_Char:	
  1164                           ; 0 bytes @ 0x1
  1165                           
  1166  0071                     ??i1_strcat:	
  1167                           ; 0 bytes @ 0x1
  1168                           
  1169  0071                     ??i1_strcpy:	
  1170                           ; 0 bytes @ 0x1
  1171                           
  1172                           
  1173                           ; 0 bytes @ 0x1
  1174  0071                     	ds	1
  1175  0072                     i1strcat@to:	
  1176  0072                     i1strcpy@to:	
  1177                           ; 1 bytes @ 0x2
  1178                           
  1179  0072                     i1___awmod@dividend:	
  1180                           ; 1 bytes @ 0x2
  1181                           
  1182  0072                     i1___lwdiv@dividend:	
  1183                           ; 2 bytes @ 0x2
  1184                           
  1185  0072                     i1___lwmod@dividend:	
  1186                           ; 2 bytes @ 0x2
  1187                           
  1188                           
  1189                           ; 2 bytes @ 0x2
  1190  0072                     	ds	1
  1191  0073                     i1Lcd4_Cmd@a:	
  1192  0073                     i1Lcd4_Write_Char@temp:	
  1193                           ; 1 bytes @ 0x3
  1194                           
  1195  0073                     i1strcat@cp:	
  1196                           ; 1 bytes @ 0x3
  1197                           
  1198  0073                     i1strcpy@cp:	
  1199                           ; 1 bytes @ 0x3
  1200                           
  1201                           
  1202                           ; 1 bytes @ 0x3
  1203  0073                     	ds	1
  1204  0074                     ?i1_Lcd4_Set_Cursor:	
  1205  0074                     ??i1___awmod:	
  1206                           ; 0 bytes @ 0x4
  1207                           
  1208  0074                     ??i1___lwdiv:	
  1209                           ; 0 bytes @ 0x4
  1210                           
  1211  0074                     ??i1___lwmod:	
  1212                           ; 0 bytes @ 0x4
  1213                           
  1214  0074                     i1Lcd4_Set_Cursor@pixel_nb:	
  1215                           ; 0 bytes @ 0x4
  1216                           
  1217  0074                     i1Lcd4_Write_Char@y:	
  1218                           ; 1 bytes @ 0x4
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0x4
  1222  0074                     	ds	1
  1223  0075                     ??i1_Lcd4_Set_Cursor:	
  1224  0075                     i1Lcd4_Write_Char@a:	
  1225                           ; 0 bytes @ 0x5
  1226                           
  1227  0075                     i1___awmod@counter:	
  1228                           ; 1 bytes @ 0x5
  1229                           
  1230  0075                     i1___lwmod@counter:	
  1231                           ; 1 bytes @ 0x5
  1232                           
  1233  0075                     i1___lwdiv@quotient:	
  1234                           ; 1 bytes @ 0x5
  1235                           
  1236                           
  1237                           ; 2 bytes @ 0x5
  1238  0075                     	ds	1
  1239  0076                     ??i1_Lcd4_Write_String:	
  1240  0076                     i1___awmod@sign:	
  1241                           ; 0 bytes @ 0x6
  1242                           
  1243                           
  1244                           ; 1 bytes @ 0x6
  1245  0076                     	ds	1
  1246  0077                     ?___awdiv:	
  1247  0077                     i1Lcd4_Write_String@a:	
  1248                           ; 2 bytes @ 0x7
  1249                           
  1250  0077                     i1___lwdiv@counter:	
  1251                           ; 1 bytes @ 0x7
  1252                           
  1253  0077                     ___awdiv@divisor:	
  1254                           ; 1 bytes @ 0x7
  1255                           
  1256                           
  1257                           ; 2 bytes @ 0x7
  1258  0077                     	ds	1
  1259  0078                     ?i1_utoa:	
  1260  0078                     i1Lcd4_Write_String@i:	
  1261                           ; 1 bytes @ 0x8
  1262                           
  1263  0078                     i1utoa@val:	
  1264                           ; 2 bytes @ 0x8
  1265                           
  1266                           
  1267                           ; 2 bytes @ 0x8
  1268  0078                     	ds	1
  1269  0079                     i1Lcd4_Set_Cursor@ligne:	
  1270  0079                     ___awdiv@dividend:	
  1271                           ; 1 bytes @ 0x9
  1272                           
  1273                           
  1274                           ; 2 bytes @ 0x9
  1275  0079                     	ds	1
  1276  007A                     i1Lcd4_Set_Cursor@lCmdMsb:	
  1277  007A                     i1utoa@base:	
  1278                           ; 1 bytes @ 0xA
  1279                           
  1280                           
  1281                           ; 2 bytes @ 0xA
  1282  007A                     	ds	1
  1283  007B                     ??___awdiv:	
  1284  007B                     i1Lcd4_Set_Cursor@lCmdLsb:	
  1285                           ; 0 bytes @ 0xB
  1286                           
  1287                           
  1288                           ; 1 bytes @ 0xB
  1289  007B                     	ds	1
  1290  007C                     ??i1_utoa:	
  1291                           
  1292                           ; 0 bytes @ 0xC
  1293  007C                     	ds	1
  1294  007D                     ??_time_shapping:	
  1295  007D                     ??_switch_player:	
  1296                           ; 0 bytes @ 0xD
  1297                           
  1298                           
  1299                           ; 0 bytes @ 0xD
  1300  007D                     	ds	1
  1301                           
  1302                           	psect	cstackBANK0
  1303  0020                     __pcstackBANK0:	
  1304  0020                     ___awdiv@counter:	
  1305  0020                     i1utoa@v:	
  1306                           ; 1 bytes @ 0x0
  1307                           
  1308                           
  1309                           ; 2 bytes @ 0x0
  1310  0020                     	ds	1
  1311  0021                     ___awdiv@sign:	
  1312                           
  1313                           ; 1 bytes @ 0x1
  1314  0021                     	ds	1
  1315  0022                     i1utoa@c:	
  1316  0022                     ___awdiv@quotient:	
  1317                           ; 1 bytes @ 0x2
  1318                           
  1319                           
  1320                           ; 2 bytes @ 0x2
  1321  0022                     	ds	1
  1322  0023                     i1utoa@buf:	
  1323                           
  1324                           ; 1 bytes @ 0x3
  1325  0023                     	ds	1
  1326  0024                     ?_time_shapping:	
  1327  0024                     ??i1_display_player_nbr:	
  1328                           ; 0 bytes @ 0x4
  1329                           
  1330  0024                     time_shapping@time:	
  1331                           ; 0 bytes @ 0x4
  1332                           
  1333                           
  1334                           ; 2 bytes @ 0x4
  1335  0024                     	ds	2
  1336  0026                     time_shapping@secondes:	
  1337  0026                     i1display_player_nbr@string:	
  1338                           ; 2 bytes @ 0x6
  1339                           
  1340                           
  1341                           ; 16 bytes @ 0x6
  1342  0026                     	ds	2
  1343  0028                     time_shapping@minutes:	
  1344                           
  1345                           ; 2 bytes @ 0x8
  1346  0028                     	ds	2
  1347  002A                     time_shapping@hours:	
  1348                           
  1349                           ; 2 bytes @ 0xA
  1350  002A                     	ds	2
  1351  002C                     time_shapping@secondes_buf:	
  1352                           
  1353                           ; 2 bytes @ 0xC
  1354  002C                     	ds	2
  1355  002E                     time_shapping@minutes_buf:	
  1356                           
  1357                           ; 2 bytes @ 0xE
  1358  002E                     	ds	2
  1359  0030                     time_shapping@hours_buf:	
  1360                           
  1361                           ; 2 bytes @ 0x10
  1362  0030                     	ds	2
  1363  0032                     time_shapping@buffer:	
  1364                           
  1365                           ; 1 bytes @ 0x12
  1366  0032                     	ds	1
  1367  0033                     ??_game_phase:	
  1368                           
  1369                           ; 0 bytes @ 0x13
  1370  0033                     	ds	2
  1371  0035                     game_phase@time_str:	
  1372                           
  1373                           ; 9 bytes @ 0x15
  1374  0035                     	ds	1
  1375  0036                     i1display_player_nbr@string_player_number:	
  1376                           
  1377                           ; 2 bytes @ 0x16
  1378  0036                     	ds	2
  1379  0038                     i1display_player_nbr@player_number:	
  1380                           
  1381                           ; 1 bytes @ 0x18
  1382  0038                     	ds	6
  1383  003E                     game_phase@remaining_time:	
  1384                           
  1385                           ; 2 bytes @ 0x1E
  1386  003E                     	ds	2
  1387  0040                     ??_isr:	
  1388                           
  1389                           ; 0 bytes @ 0x20
  1390  0040                     	ds	7
  1391                           
  1392                           	psect	maintext
  1393  0FBF                     __pmaintext:	
  1394 ;;
  1395 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1396 ;;
  1397 ;; *************** function _main *****************
  1398 ;; Defined at:
  1399 ;;		line 31 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 17F/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1413 ;;      Params:         0       0       0       0
  1414 ;;      Locals:         0       0       0       0
  1415 ;;      Temps:          0       0       0       0
  1416 ;;      Totals:         0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels required when called:   11
  1419 ;; This function calls:
  1420 ;;		_initiate_game
  1421 ;;		_system_init
  1422 ;; This function is called by:
  1423 ;;		Startup code after reset
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _main
  1429  0FBF                     _main:	
  1430                           
  1431                           ;main.c: 33: system_init();
  1432                           
  1433                           ;incstack = 0
  1434 ;; hardware stack exceeded
  1435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1436  0FBF  118A  2629  158A   	fcall	_system_init
  1437                           
  1438                           ;main.c: 34: initiate_game(2,TIME_PER_GAME,900U);
  1439  0FC2  1683               	bsf	3,5	;RP0=1, select bank1
  1440  0FC3  1303               	bcf	3,6	;RP1=0, select bank1
  1441  0FC4  01C6               	clrf	initiate_game@type_of_game^(0+128)
  1442  0FC5  3084               	movlw	132
  1443  0FC6  00C7               	movwf	initiate_game@game_time^(0+128)
  1444  0FC7  3003               	movlw	3
  1445  0FC8  00C8               	movwf	(initiate_game@game_time^(0+128)+1)
  1446  0FC9  3002               	movlw	2
  1447  0FCA  118A  210C  158A   	fcall	_initiate_game
  1448  0FCD                     l98:	
  1449                           ;main.c: 36: while(1)
  1450                           
  1451                           
  1452                           ;main.c: 37: {
  1453                           ;main.c: 38: ;
  1454  0FCD  2FCD               	goto	l98
  1455  0FCE                     __end_of_main:	
  1456                           
  1457                           	psect	text1
  1458  0629                     __ptext1:	
  1459 ;; *************** function _system_init *****************
  1460 ;; Defined at:
  1461 ;;		line 48 in file "system.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1475 ;;      Params:         0       0       0       0
  1476 ;;      Locals:         0       0       0       0
  1477 ;;      Temps:          0       0       3       0
  1478 ;;      Totals:         0       0       3       0
  1479 ;;Total ram usage:        3 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:   10
  1482 ;; This function calls:
  1483 ;;		_ConfigureOscillator
  1484 ;;		_Lcd4_Init
  1485 ;;		_initUart
  1486 ;;		_init_interrupt
  1487 ;;		_init_timer_0
  1488 ;;		_init_timer_2
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           
  1495                           ;psect for function _system_init
  1496  0629                     _system_init:	
  1497                           
  1498                           ;system.c: 51: RABIE = 0x1;
  1499                           
  1500                           ;incstack = 0
  1501 ;; hardware stack exceeded
  1502                           ; Regs used in _system_init: [wreg+status,2+status,0+pclath+cstack]
  1503  0629  158B               	bsf	11,3	;volatile
  1504                           
  1505                           ;system.c: 52: TRISA = 0x1;
  1506  062A  3001               	movlw	1
  1507  062B  1683               	bsf	3,5	;RP0=1, select bank1
  1508  062C  1303               	bcf	3,6	;RP1=0, select bank1
  1509  062D  0085               	movwf	5	;volatile
  1510                           
  1511                           ;system.c: 54: IOCA0 = 1;
  1512  062E  1416               	bsf	22,0	;volatile
  1513                           
  1514                           ;system.c: 55: TRISB = 0x0;
  1515  062F  0186               	clrf	6	;volatile
  1516                           
  1517                           ;system.c: 56: TRISC = 0x0;
  1518  0630  0187               	clrf	7	;volatile
  1519                           
  1520                           ;system.c: 59: PORTA = 0x00;
  1521  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0633  0185               	clrf	5	;volatile
  1524                           
  1525                           ;system.c: 60: PORTB = 0x00;
  1526  0634  0186               	clrf	6	;volatile
  1527                           
  1528                           ;system.c: 61: PORTC = 0x00;
  1529  0635  0187               	clrf	7	;volatile
  1530                           
  1531                           ;system.c: 64: ConfigureOscillator();
  1532  0636  158A  2796  118A   	fcall	_ConfigureOscillator
  1533                           
  1534                           ;system.c: 65: init_interrupt();
  1535  0639  158A  2784  118A   	fcall	_init_interrupt
  1536                           
  1537                           ;system.c: 66: init_timer_0();
  1538  063C  158A  2787  118A   	fcall	_init_timer_0
  1539                           
  1540                           ;system.c: 68: init_timer_2();
  1541  063F  158A  27B0  118A   	fcall	_init_timer_2
  1542                           
  1543                           ;system.c: 69: initUart();
  1544  0642  118A  2744  118A   	fcall	_initUart
  1545                           
  1546                           ;system.c: 71: _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1547  0645  3006               	movlw	6
  1548  0646  1683               	bsf	3,5	;RP0=1, select bank1
  1549  0647  1303               	bcf	3,6	;RP1=0, select bank1
  1550  0648  00A8               	movwf	(??_system_init^(0+128)+2)
  1551  0649  3013               	movlw	19
  1552  064A  00A7               	movwf	(??_system_init^(0+128)+1)
  1553  064B  30B1               	movlw	177
  1554  064C  00A6               	movwf	??_system_init^(0+128)
  1555  064D                     u2647:	
  1556  064D  0BA6               	decfsz	??_system_init^(0+128),f
  1557  064E  2E4D               	goto	u2647
  1558  064F  0BA7               	decfsz	(??_system_init^(0+128)+1),f
  1559  0650  2E4D               	goto	u2647
  1560  0651  0BA8               	decfsz	(??_system_init^(0+128)+2),f
  1561  0652  2E4D               	goto	u2647
  1562  0653  2E54               	nop2
  1563                           
  1564                           ;system.c: 72: Lcd4_Init();
  1565  0654  118A  25CA         	fcall	_Lcd4_Init
  1566  0656  0008               	return
  1567  0657                     __end_of_system_init:	
  1568                           
  1569                           	psect	text2
  1570  0FB0                     __ptext2:	
  1571 ;; *************** function _init_timer_2 *****************
  1572 ;; Defined at:
  1573 ;;		line 57 in file "timer.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;		None               void
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1587 ;;      Params:         0       0       0       0
  1588 ;;      Locals:         0       0       0       0
  1589 ;;      Temps:          0       0       0       0
  1590 ;;      Totals:         0       0       0       0
  1591 ;;Total ram usage:        0 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    6
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_system_init
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _init_timer_2
  1603  0FB0                     _init_timer_2:	
  1604                           
  1605                           ;timer.c: 58: TMR2ON = 1;
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _init_timer_2: [wreg+status,2+status,0]
  1609  0FB0  1283               	bcf	3,5	;RP0=0, select bank0
  1610  0FB1  1303               	bcf	3,6	;RP1=0, select bank0
  1611  0FB2  1512               	bsf	18,2	;volatile
  1612                           
  1613                           ;timer.c: 62: T2CONbits.T2CKPS=3;
  1614  0FB3  3003               	movlw	3
  1615  0FB4  0492               	iorwf	18,f	;volatile
  1616                           
  1617                           ;timer.c: 65: T2CONbits.TOUTPS = 9;
  1618  0FB5  0812               	movf	18,w	;volatile
  1619  0FB6  3987               	andlw	-121
  1620  0FB7  3848               	iorlw	72
  1621  0FB8  0092               	movwf	18	;volatile
  1622                           
  1623                           ;timer.c: 68: PR2 = 8000000UL/4/16/1000;
  1624  0FB9  307D               	movlw	125
  1625  0FBA  1683               	bsf	3,5	;RP0=1, select bank1
  1626  0FBB  1303               	bcf	3,6	;RP1=0, select bank1
  1627  0FBC  0092               	movwf	18	;volatile
  1628                           
  1629                           ;timer.c: 71: PIE1bits.TMR2IE = 1;
  1630  0FBD  148C               	bsf	12,1	;volatile
  1631  0FBE  0008               	return
  1632  0FBF                     __end_of_init_timer_2:	
  1633                           
  1634                           	psect	text3
  1635  0F87                     __ptext3:	
  1636 ;; *************** function _init_timer_0 *****************
  1637 ;; Defined at:
  1638 ;;		line 10 in file "timer.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;		None               void
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1652 ;;      Params:         0       0       0       0
  1653 ;;      Locals:         0       0       0       0
  1654 ;;      Temps:          0       0       0       0
  1655 ;;      Totals:         0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used:    1
  1658 ;; Hardware stack levels required when called:    6
  1659 ;; This function calls:
  1660 ;;		Nothing
  1661 ;; This function is called by:
  1662 ;;		_system_init
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _init_timer_0
  1668  0F87                     _init_timer_0:	
  1669                           
  1670                           ;timer.c: 12: OPTION_REGbits.T0CS = 0;
  1671                           
  1672                           ;incstack = 0
  1673                           ; Regs used in _init_timer_0: [wreg+status,2+status,0]
  1674  0F87  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0F88  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0F89  1281               	bcf	1,5	;volatile
  1677                           
  1678                           ;timer.c: 14: OPTION_REGbits.PSA = 0;
  1679  0F8A  1181               	bcf	1,3	;volatile
  1680                           
  1681                           ;timer.c: 16: OPTION_REGbits.PS = 0x7;
  1682  0F8B  3007               	movlw	7
  1683  0F8C  0481               	iorwf	1,f	;volatile
  1684  0F8D  0008               	return
  1685  0F8E                     __end_of_init_timer_0:	
  1686                           
  1687                           	psect	text4
  1688  0F84                     __ptext4:	
  1689 ;; *************** function _init_interrupt *****************
  1690 ;; Defined at:
  1691 ;;		line 37 in file "interrupts.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;		None               void
  1698 ;; Registers used:
  1699 ;;		None
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1705 ;;      Params:         0       0       0       0
  1706 ;;      Locals:         0       0       0       0
  1707 ;;      Temps:          0       0       0       0
  1708 ;;      Totals:         0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    6
  1712 ;; This function calls:
  1713 ;;		Nothing
  1714 ;; This function is called by:
  1715 ;;		_system_init
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           
  1720                           ;psect for function _init_interrupt
  1721  0F84                     _init_interrupt:	
  1722                           
  1723                           ;interrupts.c: 39: INTCONbits.GIE = 1;
  1724                           
  1725                           ;incstack = 0
  1726                           ; Regs used in _init_interrupt: []
  1727  0F84  178B               	bsf	11,7	;volatile
  1728                           
  1729                           ;interrupts.c: 40: INTCONbits.PEIE =1;
  1730  0F85  170B               	bsf	11,6	;volatile
  1731  0F86  0008               	return
  1732  0F87                     __end_of_init_interrupt:	
  1733                           
  1734                           	psect	text5
  1735  0744                     __ptext5:	
  1736 ;; *************** function _initUart *****************
  1737 ;; Defined at:
  1738 ;;		line 25 in file "UART.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;		None               void
  1745 ;; Registers used:
  1746 ;;		wreg, status,2
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1752 ;;      Params:         0       0       0       0
  1753 ;;      Locals:         0       0       0       0
  1754 ;;      Temps:          0       0       0       0
  1755 ;;      Totals:         0       0       0       0
  1756 ;;Total ram usage:        0 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    6
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_system_init
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           
  1767                           ;psect for function _initUart
  1768  0744                     _initUart:	
  1769                           
  1770                           ;UART.c: 28: PIE1bits.RCIE =1;
  1771                           
  1772                           ;incstack = 0
  1773                           ; Regs used in _initUart: [wreg+status,2]
  1774  0744  1683               	bsf	3,5	;RP0=1, select bank1
  1775  0745  1303               	bcf	3,6	;RP1=0, select bank1
  1776  0746  168C               	bsf	12,5	;volatile
  1777                           
  1778                           ;UART.c: 30: TXSTAbits.TXEN = 0;
  1779  0747  1298               	bcf	24,5	;volatile
  1780                           
  1781                           ;UART.c: 34: SPBRG = (8000000UL/9600/64)-1;
  1782  0748  300C               	movlw	12
  1783  0749  0099               	movwf	25	;volatile
  1784                           
  1785                           ;UART.c: 36: SPBRGH = 0x00;
  1786  074A  019A               	clrf	26	;volatile
  1787                           
  1788                           ;UART.c: 38: ANSEL =0;
  1789  074B  1283               	bcf	3,5	;RP0=0, select bank2
  1790  074C  1703               	bsf	3,6	;RP1=1, select bank2
  1791  074D  019E               	clrf	30	;volatile
  1792                           
  1793                           ;UART.c: 39: ANSELH= 0;
  1794  074E  019F               	clrf	31	;volatile
  1795                           
  1796                           ;UART.c: 42: TRISBbits.TRISB5 = 1;
  1797  074F  1683               	bsf	3,5	;RP0=1, select bank1
  1798  0750  1303               	bcf	3,6	;RP1=0, select bank1
  1799  0751  1686               	bsf	6,5	;volatile
  1800                           
  1801                           ;UART.c: 43: TRISBbits.TRISB7 = 0;
  1802  0752  1386               	bcf	6,7	;volatile
  1803                           
  1804                           ;UART.c: 48: TXSTAbits.TX9 = 0;
  1805  0753  1318               	bcf	24,6	;volatile
  1806                           
  1807                           ;UART.c: 51: TXSTAbits.SYNC = 0;
  1808  0754  1218               	bcf	24,4	;volatile
  1809                           
  1810                           ;UART.c: 52: TXREG = 0;
  1811  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0757  0199               	clrf	25	;volatile
  1814                           
  1815                           ;UART.c: 55: TXSTAbits.BRGH = 0;
  1816  0758  1683               	bsf	3,5	;RP0=1, select bank1
  1817  0759  1303               	bcf	3,6	;RP1=0, select bank1
  1818  075A  1118               	bcf	24,2	;volatile
  1819                           
  1820                           ;UART.c: 56: BAUDCTLbits.BRG16 = 0;
  1821  075B  119B               	bcf	27,3	;volatile
  1822                           
  1823                           ;UART.c: 58: BAUDCTLbits.ABDEN = 0;
  1824  075C  101B               	bcf	27,0	;volatile
  1825                           
  1826                           ;UART.c: 63: TXSTAbits.TXEN = 1;
  1827  075D  1698               	bsf	24,5	;volatile
  1828                           
  1829                           ;UART.c: 64: RCSTAbits.CREN = 1;
  1830  075E  1283               	bcf	3,5	;RP0=0, select bank0
  1831  075F  1303               	bcf	3,6	;RP1=0, select bank0
  1832  0760  1618               	bsf	24,4	;volatile
  1833                           
  1834                           ;UART.c: 65: RCSTAbits.SPEN = 1;
  1835  0761  1798               	bsf	24,7	;volatile
  1836  0762  0008               	return
  1837  0763                     __end_of_initUart:	
  1838                           
  1839                           	psect	text6
  1840  05CA                     __ptext6:	
  1841 ;; *************** function _Lcd4_Init *****************
  1842 ;; Defined at:
  1843 ;;		line 57 in file "LCD_screen.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;		None               void
  1850 ;; Registers used:
  1851 ;;		wreg, status,2, status,0, pclath, cstack
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1857 ;;      Params:         0       0       0       0
  1858 ;;      Locals:         0       0       0       0
  1859 ;;      Temps:          0       0       2       0
  1860 ;;      Totals:         0       0       2       0
  1861 ;;Total ram usage:        2 bytes
  1862 ;; Hardware stack levels used:    1
  1863 ;; Hardware stack levels required when called:    9
  1864 ;; This function calls:
  1865 ;;		_Lcd4_Clear
  1866 ;;		_Lcd4_Cmd
  1867 ;; This function is called by:
  1868 ;;		_system_init
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _Lcd4_Init
  1874  05CA                     _Lcd4_Init:	
  1875                           
  1876                           ;LCD_screen.c: 60: RA2 = 0;
  1877                           
  1878                           ;incstack = 0
  1879 ;; hardware stack exceeded
  1880                           ; Regs used in _Lcd4_Init: [wreg+status,2+status,0+pclath+cstack]
  1881  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1882  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1883  05CC  1105               	bcf	5,2	;volatile
  1884                           
  1885                           ;LCD_screen.c: 62: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1886  05CD  301A               	movlw	26
  1887  05CE  1683               	bsf	3,5	;RP0=1, select bank1
  1888  05CF  1303               	bcf	3,6	;RP1=0, select bank1
  1889  05D0  00A5               	movwf	(??_Lcd4_Init^(0+128)+1)
  1890  05D1  30F8               	movlw	248
  1891  05D2  00A4               	movwf	??_Lcd4_Init^(0+128)
  1892  05D3                     u2657:	
  1893  05D3  0BA4               	decfsz	??_Lcd4_Init^(0+128),f
  1894  05D4  2DD3               	goto	u2657
  1895  05D5  0BA5               	decfsz	(??_Lcd4_Init^(0+128)+1),f
  1896  05D6  2DD3               	goto	u2657
  1897  05D7  0000               	nop
  1898                           
  1899                           ;LCD_screen.c: 63: Lcd4_Cmd(0x02);
  1900  05D8  3002               	movlw	2
  1901  05D9  118A  27A0  118A   	fcall	_Lcd4_Cmd
  1902                           
  1903                           ;LCD_screen.c: 66: Lcd4_Cmd(0x02);
  1904  05DC  3002               	movlw	2
  1905  05DD  118A  27A0  118A   	fcall	_Lcd4_Cmd
  1906                           
  1907                           ;LCD_screen.c: 67: Lcd4_Cmd(0x0C);
  1908  05E0  300C               	movlw	12
  1909  05E1  118A  27A0  118A   	fcall	_Lcd4_Cmd
  1910                           
  1911                           ;LCD_screen.c: 70: Lcd4_Cmd(0x00);
  1912  05E4  3000               	movlw	0
  1913  05E5  118A  27A0  118A   	fcall	_Lcd4_Cmd
  1914                           
  1915                           ;LCD_screen.c: 71: Lcd4_Cmd(0x0F);
  1916  05E8  300F               	movlw	15
  1917  05E9  118A  27A0  118A   	fcall	_Lcd4_Cmd
  1918                           
  1919                           ;LCD_screen.c: 74: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1920  05EC  301A               	movlw	26
  1921  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  1922  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  1923  05EF  00A5               	movwf	(??_Lcd4_Init^(0+128)+1)
  1924  05F0  30F8               	movlw	248
  1925  05F1  00A4               	movwf	??_Lcd4_Init^(0+128)
  1926  05F2                     u2667:	
  1927  05F2  0BA4               	decfsz	??_Lcd4_Init^(0+128),f
  1928  05F3  2DF2               	goto	u2667
  1929  05F4  0BA5               	decfsz	(??_Lcd4_Init^(0+128)+1),f
  1930  05F5  2DF2               	goto	u2667
  1931  05F6  0000               	nop
  1932                           
  1933                           ;LCD_screen.c: 77: Lcd4_Clear();
  1934  05F7  158A  279E         	fcall	_Lcd4_Clear
  1935  05F9  0008               	return
  1936  05FA                     __end_of_Lcd4_Init:	
  1937                           
  1938                           	psect	text7
  1939  0F9E                     __ptext7:	
  1940 ;; *************** function _Lcd4_Clear *****************
  1941 ;; Defined at:
  1942 ;;		line 42 in file "LCD_screen.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;		None
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2  274[COMMON] int 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0, pclath, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1956 ;;      Params:         0       0       0       0
  1957 ;;      Locals:         0       0       0       0
  1958 ;;      Temps:          0       0       0       0
  1959 ;;      Totals:         0       0       0       0
  1960 ;;Total ram usage:        0 bytes
  1961 ;; Hardware stack levels used:    1
  1962 ;; Hardware stack levels required when called:    8
  1963 ;; This function calls:
  1964 ;;		_Lcd4_Cmd
  1965 ;; This function is called by:
  1966 ;;		_Lcd4_Init
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _Lcd4_Clear
  1972  0F9E                     _Lcd4_Clear:	
  1973                           
  1974                           ;LCD_screen.c: 44: Lcd4_Cmd(0);
  1975                           
  1976                           ;incstack = 0
  1977 ;; hardware stack exceeded
  1978                           ; Regs used in _Lcd4_Clear: [wreg+status,2+status,0+pclath+cstack]
  1979  0F9E  3000               	movlw	0
  1980  0F9F  118A  27A0  158A   	fcall	_Lcd4_Cmd
  1981                           
  1982                           ;LCD_screen.c: 45: Lcd4_Cmd(1);
  1983  0FA2  3001               	movlw	1
  1984  0FA3  118A  27A0         	fcall	_Lcd4_Cmd
  1985  0FA5  0008               	return
  1986  0FA6                     __end_of_Lcd4_Clear:	
  1987                           
  1988                           	psect	text8
  1989  0F96                     __ptext8:	
  1990 ;; *************** function _ConfigureOscillator *****************
  1991 ;; Defined at:
  1992 ;;		line 32 in file "system.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;		None               void
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2006 ;;      Params:         0       0       0       0
  2007 ;;      Locals:         0       0       0       0
  2008 ;;      Temps:          0       0       0       0
  2009 ;;      Totals:         0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used:    1
  2012 ;; Hardware stack levels required when called:    6
  2013 ;; This function calls:
  2014 ;;		Nothing
  2015 ;; This function is called by:
  2016 ;;		_system_init
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           
  2021                           ;psect for function _ConfigureOscillator
  2022  0F96                     _ConfigureOscillator:	
  2023                           
  2024                           ;system.c: 36: OSCCONbits.SCS=0x1;
  2025                           
  2026                           ;incstack = 0
  2027                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  2028  0F96  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0F97  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0F98  140F               	bsf	15,0	;volatile
  2031                           
  2032                           ;system.c: 37: OSCCONbits.IRCF=0x7;
  2033  0F99  3070               	movlw	112
  2034  0F9A  048F               	iorwf	15,f	;volatile
  2035  0F9B                     l144:	
  2036                           ;system.c: 41: {
  2037                           ;system.c: 42: ;
  2038                           
  2039                           ;system.c: 40: while(OSCCONbits.HTS==0)
  2040                           
  2041  0F9B  190F               	btfsc	15,2	;volatile
  2042  0F9C  0008               	return
  2043  0F9D  2F9B               	goto	l144
  2044  0F9E                     __end_of_ConfigureOscillator:	
  2045                           
  2046                           	psect	text9
  2047  010C                     __ptext9:	
  2048 ;; *************** function _initiate_game *****************
  2049 ;; Defined at:
  2050 ;;		line 9 in file "game_timer/src/game_timer.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  player_nb       1    wreg     unsigned char 
  2053 ;;  type_of_game    1   38[BANK1 ] enum E271
  2054 ;;  game_time       2   39[BANK1 ] unsigned int 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  player_nb       1   46[BANK1 ] unsigned char 
  2057 ;;  i               2   47[BANK1 ] int 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  2   38[BANK1 ] int 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2067 ;;      Params:         0       0       3       0
  2068 ;;      Locals:         0       0       3       0
  2069 ;;      Temps:          0       0       5       0
  2070 ;;      Totals:         0       0      11       0
  2071 ;;Total ram usage:       11 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:   10
  2074 ;; This function calls:
  2075 ;;		___awmod
  2076 ;;		_display_player_nbr
  2077 ;; This function is called by:
  2078 ;;		_main
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _initiate_game
  2084  010C                     _initiate_game:	
  2085                           
  2086                           ;incstack = 0
  2087 ;; hardware stack exceeded
  2088                           ; Regs used in _initiate_game: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2089                           ;initiate_game@player_nb stored from wreg
  2090  010C  1683               	bsf	3,5	;RP0=1, select bank1
  2091  010D  1303               	bcf	3,6	;RP1=0, select bank1
  2092  010E  00CE               	movwf	initiate_game@player_nb^(0+128)
  2093                           
  2094                           ;game_timer.c: 13: extern game_type_t gtype_of_game;
  2095                           ;game_timer.c: 14: extern unsigned int ggame_time;
  2096                           ;game_timer.c: 15: extern player * gcurrent_player;
  2097                           ;game_timer.c: 17: extern player player_array[10];
  2098                           ;game_timer.c: 20: for (int i =0;i<player_nb;i++)
  2099  010F  01CF               	clrf	initiate_game@i^(0+128)
  2100  0110  01D0               	clrf	(initiate_game@i+1)^(0+128)
  2101  0111                     l2556:	
  2102  0111  0850               	movf	(initiate_game@i+1)^(0+128),w
  2103  0112  3A80               	xorlw	128
  2104  0113  00C9               	movwf	??_initiate_game^(0+128)
  2105  0114  3080               	movlw	128
  2106  0115  0249               	subwf	??_initiate_game^(0+128),w
  2107  0116  1D03               	skipz
  2108  0117  291A               	goto	u2635
  2109  0118  084E               	movf	initiate_game@player_nb^(0+128),w
  2110  0119  024F               	subwf	initiate_game@i^(0+128),w
  2111  011A                     u2635:	
  2112  011A  1803               	btfsc	3,0
  2113  011B  2976               	goto	l2558
  2114                           
  2115                           ;game_timer.c: 21: {
  2116                           ;game_timer.c: 22: player_array[i].played_time = 0;
  2117  011C  1683               	bsf	3,5	;RP0=1, select bank1
  2118  011D  1303               	bcf	3,6	;RP1=0, select bank1
  2119  011E  084F               	movf	initiate_game@i^(0+128),w
  2120  011F  00C9               	movwf	??_initiate_game^(0+128)
  2121  0120  3001               	movlw	1
  2122  0121                     u2595:	
  2123  0121  1003               	clrc
  2124  0122  0DC9               	rlf	??_initiate_game^(0+128),f
  2125  0123  3EFF               	addlw	-1
  2126  0124  1D03               	skipz
  2127  0125  2921               	goto	u2595
  2128  0126  1003               	clrc
  2129  0127  0D49               	rlf	??_initiate_game^(0+128),w
  2130  0128  3E01               	addlw	1
  2131  0129  3E20               	addlw	_player_array& (0+255)
  2132  012A  0084               	movwf	4
  2133  012B  1783               	bsf	3,7	;select IRP bank2
  2134  012C  0180               	clrf	0
  2135  012D  0A84               	incf	4,f
  2136  012E  0180               	clrf	0
  2137                           
  2138                           ;game_timer.c: 23: player_array[i].player_number = i;
  2139  012F  084F               	movf	initiate_game@i^(0+128),w
  2140  0130  00C9               	movwf	??_initiate_game^(0+128)
  2141  0131  084F               	movf	initiate_game@i^(0+128),w
  2142  0132  00CA               	movwf	(??_initiate_game+1)^(0+128)
  2143  0133  3001               	movlw	1
  2144  0134                     u2605:	
  2145  0134  1003               	clrc
  2146  0135  0DCA               	rlf	(??_initiate_game+1)^(0+128),f
  2147  0136  3EFF               	addlw	-1
  2148  0137  1D03               	skipz
  2149  0138  2934               	goto	u2605
  2150  0139  1003               	clrc
  2151  013A  0D4A               	rlf	(??_initiate_game+1)^(0+128),w
  2152  013B  3E20               	addlw	_player_array& (0+255)
  2153  013C  0084               	movwf	4
  2154  013D  0849               	movf	??_initiate_game^(0+128),w
  2155  013E  0080               	movwf	0
  2156                           
  2157                           ;game_timer.c: 24: player_array[i].next_player = &player_array[(i+1)%player_nb];
  2158  013F  084E               	movf	initiate_game@player_nb^(0+128),w
  2159  0140  00C9               	movwf	??_initiate_game^(0+128)
  2160  0141  01CA               	clrf	(??_initiate_game^(0+128)+1)
  2161  0142  0849               	movf	??_initiate_game^(0+128),w
  2162  0143  00A0               	movwf	___awmod@divisor^(0+128)
  2163  0144  084A               	movf	(??_initiate_game+1)^(0+128),w
  2164  0145  00A1               	movwf	(___awmod@divisor+1)^(0+128)
  2165  0146  084F               	movf	initiate_game@i^(0+128),w
  2166  0147  3E01               	addlw	1
  2167  0148  00A2               	movwf	___awmod@dividend^(0+128)
  2168  0149  0850               	movf	(initiate_game@i+1)^(0+128),w
  2169  014A  1803               	skipnc
  2170  014B  3E01               	addlw	1
  2171  014C  3E00               	addlw	0
  2172  014D  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2173  014E  118A  2393  118A   	fcall	___awmod
  2174  0151  1683               	bsf	3,5	;RP0=1, select bank1
  2175  0152  1303               	bcf	3,6	;RP1=0, select bank1
  2176  0153  0820               	movf	?___awmod^(0+128),w
  2177  0154  00CB               	movwf	(??_initiate_game+2)^(0+128)
  2178  0155  3001               	movlw	1
  2179  0156                     u2615:	
  2180  0156  1003               	clrc
  2181  0157  0DCB               	rlf	(??_initiate_game+2)^(0+128),f
  2182  0158  3EFF               	addlw	-1
  2183  0159  1D03               	skipz
  2184  015A  2956               	goto	u2615
  2185  015B  1003               	clrc
  2186  015C  0D4B               	rlf	(??_initiate_game+2)^(0+128),w
  2187  015D  3E20               	addlw	_player_array& (0+255)
  2188  015E  00CC               	movwf	(??_initiate_game+3)^(0+128)
  2189  015F  084F               	movf	initiate_game@i^(0+128),w
  2190  0160  00CD               	movwf	(??_initiate_game+4)^(0+128)
  2191  0161  3001               	movlw	1
  2192  0162                     u2625:	
  2193  0162  1003               	clrc
  2194  0163  0DCD               	rlf	(??_initiate_game+4)^(0+128),f
  2195  0164  3EFF               	addlw	-1
  2196  0165  1D03               	skipz
  2197  0166  2962               	goto	u2625
  2198  0167  1003               	clrc
  2199  0168  0D4D               	rlf	(??_initiate_game+4)^(0+128),w
  2200  0169  3E03               	addlw	3
  2201  016A  3E20               	addlw	_player_array& (0+255)
  2202  016B  0084               	movwf	4
  2203  016C  084C               	movf	(??_initiate_game+3)^(0+128),w
  2204  016D  1783               	bsf	3,7	;select IRP bank2
  2205  016E  0080               	movwf	0
  2206  016F  3001               	movlw	1
  2207  0170  07CF               	addwf	initiate_game@i^(0+128),f
  2208  0171  1803               	skipnc
  2209  0172  0AD0               	incf	(initiate_game@i+1)^(0+128),f
  2210  0173  3000               	movlw	0
  2211  0174  07D0               	addwf	(initiate_game@i+1)^(0+128),f
  2212  0175  2911               	goto	l2556
  2213  0176                     l2558:	
  2214                           
  2215                           ;game_timer.c: 25: }
  2216                           ;game_timer.c: 27: gcurrent_player = &player_array[0];
  2217  0176  3020               	movlw	_player_array& (0+255)
  2218  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0179  00C9               	movwf	??_initiate_game^(0+128)
  2221  017A  0849               	movf	??_initiate_game^(0+128),w
  2222  017B  00D1               	movwf	_gcurrent_player^(0+128)
  2223                           
  2224                           ;game_timer.c: 28: display_player_nbr(gcurrent_player->player_number);
  2225  017C  0851               	movf	_gcurrent_player^(0+128),w
  2226  017D  0084               	movwf	4
  2227  017E  1783               	bsf	3,7	;select IRP bank2
  2228  017F  0800               	movf	0,w
  2229  0180  118A  2599         	fcall	_display_player_nbr
  2230                           
  2231                           ;game_timer.c: 30: gtype_of_game = type_of_game;
  2232  0182  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0183  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0184  0846               	movf	initiate_game@type_of_game^(0+128),w
  2235  0185  00C9               	movwf	??_initiate_game^(0+128)
  2236  0186  0849               	movf	??_initiate_game^(0+128),w
  2237  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0189  00D0               	movwf	_gtype_of_game
  2240                           
  2241                           ;game_timer.c: 31: ggame_time = game_time;
  2242  018A  1683               	bsf	3,5	;RP0=1, select bank1
  2243  018B  1303               	bcf	3,6	;RP1=0, select bank1
  2244  018C  0848               	movf	(initiate_game@game_time+1)^(0+128),w
  2245  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2246  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2247  018F  01CA               	clrf	_ggame_time+1
  2248  0190  07CA               	addwf	_ggame_time+1,f
  2249  0191  1683               	bsf	3,5	;RP0=1, select bank1
  2250  0192  1303               	bcf	3,6	;RP1=0, select bank1
  2251  0193  0847               	movf	initiate_game@game_time^(0+128),w
  2252  0194  1283               	bcf	3,5	;RP0=0, select bank0
  2253  0195  1303               	bcf	3,6	;RP1=0, select bank0
  2254  0196  01C9               	clrf	_ggame_time
  2255  0197  07C9               	addwf	_ggame_time,f
  2256  0198  0008               	return
  2257  0199                     __end_of_initiate_game:	
  2258                           ;game_timer.c: 33: return OK;
  2259                           ;	Return value of _initiate_game is never used
  2260                           
  2261                           
  2262                           	psect	text10
  2263  0599                     __ptext10:	
  2264 ;; *************** function _display_player_nbr *****************
  2265 ;; Defined at:
  2266 ;;		line 61 in file "game_timer/src/game_timer.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  player_numbe    1    wreg     unsigned char 
  2269 ;; Auto vars:     Size  Location     Type
  2270 ;;  player_numbe    1   35[BANK1 ] unsigned char 
  2271 ;;  string         16   19[BANK1 ] unsigned char [16]
  2272 ;;  string_playe    2   36[BANK1 ] unsigned char [2]
  2273 ;; Return value:  Size  Location     Type
  2274 ;;		None               void
  2275 ;; Registers used:
  2276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2282 ;;      Params:         0       0       0       0
  2283 ;;      Locals:         0       0      19       0
  2284 ;;      Temps:          0       0       2       0
  2285 ;;      Totals:         0       0      21       0
  2286 ;;Total ram usage:       21 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    9
  2289 ;; This function calls:
  2290 ;;		_Lcd4_Set_Cursor
  2291 ;;		_Lcd4_Write_String
  2292 ;;		_strcat
  2293 ;;		_strcpy
  2294 ;;		_utoa
  2295 ;; This function is called by:
  2296 ;;		_initiate_game
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function _display_player_nbr
  2302  0599                     _display_player_nbr:	
  2303                           
  2304                           ;incstack = 0
  2305 ;; hardware stack exceeded
  2306                           ; Regs used in _display_player_nbr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2307                           ;display_player_nbr@player_number stored from wreg
  2308  0599  1683               	bsf	3,5	;RP0=1, select bank1
  2309  059A  1303               	bcf	3,6	;RP1=0, select bank1
  2310  059B  00C3               	movwf	display_player_nbr@player_number^(0+128)
  2311                           
  2312                           ;game_timer.c: 63: char string[16];
  2313                           ;game_timer.c: 64: char string_player_number [2];
  2314                           ;game_timer.c: 65: strcpy(string, "Joueur ");
  2315  059C  3001               	movlw	(STR_1-__stringbase)& (0+255)
  2316  059D  00B1               	movwf	??_display_player_nbr^(0+128)
  2317  059E  0831               	movf	??_display_player_nbr^(0+128),w
  2318  059F  00A0               	movwf	strcpy@from^(0+128)
  2319  05A0  30B3               	movlw	display_player_nbr@string& (0+255)
  2320  05A1  118A  2782  118A   	fcall	_strcpy
  2321                           
  2322                           ;game_timer.c: 66: utoa(string_player_number,player_number,10);
  2323  05A4  1683               	bsf	3,5	;RP0=1, select bank1
  2324  05A5  1303               	bcf	3,6	;RP1=0, select bank1
  2325  05A6  0843               	movf	display_player_nbr@player_number^(0+128),w
  2326  05A7  00B1               	movwf	??_display_player_nbr^(0+128)
  2327  05A8  01B2               	clrf	(??_display_player_nbr^(0+128)+1)
  2328  05A9  0831               	movf	??_display_player_nbr^(0+128),w
  2329  05AA  00A8               	movwf	utoa@val^(0+128)
  2330  05AB  0832               	movf	(??_display_player_nbr+1)^(0+128),w
  2331  05AC  00A9               	movwf	(utoa@val+1)^(0+128)
  2332  05AD  300A               	movlw	10
  2333  05AE  00AA               	movwf	utoa@base^(0+128)
  2334  05AF  3000               	movlw	0
  2335  05B0  00AB               	movwf	(utoa@base^(0+128)+1)
  2336  05B1  30C4               	movlw	display_player_nbr@string_player_number& (0+255)
  2337  05B2  118A  2199  118A   	fcall	_utoa
  2338                           
  2339                           ;game_timer.c: 67: strcat (string, string_player_number);
  2340  05B5  30C4               	movlw	display_player_nbr@string_player_number& (0+255)
  2341  05B6  1683               	bsf	3,5	;RP0=1, select bank1
  2342  05B7  1303               	bcf	3,6	;RP1=0, select bank1
  2343  05B8  00B1               	movwf	??_display_player_nbr^(0+128)
  2344  05B9  0831               	movf	??_display_player_nbr^(0+128),w
  2345  05BA  00A0               	movwf	strcat@from^(0+128)
  2346  05BB  30B3               	movlw	display_player_nbr@string& (0+255)
  2347  05BC  118A  26D9  118A   	fcall	_strcat
  2348                           
  2349                           ;game_timer.c: 69: Lcd4_Set_Cursor(1,0);
  2350  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  2351  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  2352  05C1  01A4               	clrf	Lcd4_Set_Cursor@pixel_nb^(0+128)
  2353  05C2  3001               	movlw	1
  2354  05C3  118A  2685  118A   	fcall	_Lcd4_Set_Cursor
  2355                           
  2356                           ;game_timer.c: 70: Lcd4_Write_String(string);
  2357  05C6  30B3               	movlw	display_player_nbr@string& (0+255)
  2358  05C7  118A  2723         	fcall	_Lcd4_Write_String
  2359  05C9  0008               	return
  2360  05CA                     __end_of_display_player_nbr:	
  2361                           
  2362                           	psect	text11
  2363  0199                     __ptext11:	
  2364 ;; *************** function _utoa *****************
  2365 ;; Defined at:
  2366 ;;		line 17 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\itoa.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  buf             1    wreg     PTR unsigned char 
  2369 ;;		 -> time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapping@secondes_buf(2), display_player_nbr@stri
      +ng_player_number(2), 
  2370 ;;  val             2    8[BANK1 ] unsigned int 
  2371 ;;  base            2   10[BANK1 ] int 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  buf             1   16[BANK1 ] PTR unsigned char 
  2374 ;;		 -> time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapping@secondes_buf(2), display_player_nbr@stri
      +ng_player_number(2), 
  2375 ;;  v               2   13[BANK1 ] unsigned int 
  2376 ;;  c               1   15[BANK1 ] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      PTR unsigned char 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2386 ;;      Params:         0       0       4       0
  2387 ;;      Locals:         0       0       4       0
  2388 ;;      Temps:          0       0       1       0
  2389 ;;      Totals:         0       0       9       0
  2390 ;;Total ram usage:        9 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    7
  2393 ;; This function calls:
  2394 ;;		___lwdiv
  2395 ;;		___lwmod
  2396 ;; This function is called by:
  2397 ;;		_display_player_nbr
  2398 ;; This function uses a non-reentrant model
  2399 ;;
  2400                           
  2401                           
  2402                           ;psect for function _utoa
  2403  0199                     _utoa:	
  2404                           
  2405                           ;incstack = 0
  2406 ;; hardware stack exceeded
  2407                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2408                           ;utoa@buf stored from wreg
  2409  0199  1683               	bsf	3,5	;RP0=1, select bank1
  2410  019A  1303               	bcf	3,6	;RP1=0, select bank1
  2411  019B  00B0               	movwf	utoa@buf^(0+128)
  2412  019C  0829               	movf	(utoa@val+1)^(0+128),w
  2413  019D  01AE               	clrf	(utoa@v+1)^(0+128)
  2414  019E  07AE               	addwf	(utoa@v+1)^(0+128),f
  2415  019F  0828               	movf	utoa@val^(0+128),w
  2416  01A0  01AD               	clrf	utoa@v^(0+128)
  2417  01A1  07AD               	addwf	utoa@v^(0+128),f
  2418  01A2                     l2398:	
  2419  01A2  082B               	movf	(utoa@base+1)^(0+128),w
  2420  01A3  01A1               	clrf	(___lwdiv@divisor+1)^(0+128)
  2421  01A4  07A1               	addwf	(___lwdiv@divisor+1)^(0+128),f
  2422  01A5  082A               	movf	utoa@base^(0+128),w
  2423  01A6  01A0               	clrf	___lwdiv@divisor^(0+128)
  2424  01A7  07A0               	addwf	___lwdiv@divisor^(0+128),f
  2425  01A8  082E               	movf	(utoa@v+1)^(0+128),w
  2426  01A9  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  2427  01AA  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2428  01AB  082D               	movf	utoa@v^(0+128),w
  2429  01AC  01A2               	clrf	___lwdiv@dividend^(0+128)
  2430  01AD  07A2               	addwf	___lwdiv@dividend^(0+128),f
  2431  01AE  118A  247E  118A   	fcall	___lwdiv
  2432  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  2433  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  2434  01B3  0821               	movf	(?___lwdiv+1)^(0+128),w
  2435  01B4  01AE               	clrf	(utoa@v+1)^(0+128)
  2436  01B5  07AE               	addwf	(utoa@v+1)^(0+128),f
  2437  01B6  0820               	movf	?___lwdiv^(0+128),w
  2438  01B7  01AD               	clrf	utoa@v^(0+128)
  2439  01B8  07AD               	addwf	utoa@v^(0+128),f
  2440  01B9  3001               	movlw	1
  2441  01BA  00AC               	movwf	??_utoa^(0+128)
  2442  01BB  082C               	movf	??_utoa^(0+128),w
  2443  01BC  07B0               	addwf	utoa@buf^(0+128),f
  2444  01BD  082E               	movf	(utoa@v+1)^(0+128),w
  2445  01BE  042D               	iorwf	utoa@v^(0+128),w
  2446  01BF  1D03               	skipz
  2447  01C0  29A2               	goto	l2398
  2448  01C1  0830               	movf	utoa@buf^(0+128),w
  2449  01C2  0084               	movwf	4
  2450  01C3  1383               	bcf	3,7	;select IRP bank0
  2451  01C4  0180               	clrf	0
  2452  01C5  3001               	movlw	1
  2453  01C6  02B0               	subwf	utoa@buf^(0+128),f
  2454  01C7                     l2408:	
  2455  01C7  082B               	movf	(utoa@base+1)^(0+128),w
  2456  01C8  01A1               	clrf	(___lwmod@divisor+1)^(0+128)
  2457  01C9  07A1               	addwf	(___lwmod@divisor+1)^(0+128),f
  2458  01CA  082A               	movf	utoa@base^(0+128),w
  2459  01CB  01A0               	clrf	___lwmod@divisor^(0+128)
  2460  01CC  07A0               	addwf	___lwmod@divisor^(0+128),f
  2461  01CD  0829               	movf	(utoa@val+1)^(0+128),w
  2462  01CE  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  2463  01CF  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  2464  01D0  0828               	movf	utoa@val^(0+128),w
  2465  01D1  01A2               	clrf	___lwmod@dividend^(0+128)
  2466  01D2  07A2               	addwf	___lwmod@dividend^(0+128),f
  2467  01D3  118A  24FC  118A   	fcall	___lwmod
  2468  01D6  1683               	bsf	3,5	;RP0=1, select bank1
  2469  01D7  1303               	bcf	3,6	;RP1=0, select bank1
  2470  01D8  0820               	movf	?___lwmod^(0+128),w
  2471  01D9  00AC               	movwf	??_utoa^(0+128)
  2472  01DA  082C               	movf	??_utoa^(0+128),w
  2473  01DB  00AF               	movwf	utoa@c^(0+128)
  2474  01DC  082B               	movf	(utoa@base+1)^(0+128),w
  2475  01DD  01A1               	clrf	(___lwdiv@divisor+1)^(0+128)
  2476  01DE  07A1               	addwf	(___lwdiv@divisor+1)^(0+128),f
  2477  01DF  082A               	movf	utoa@base^(0+128),w
  2478  01E0  01A0               	clrf	___lwdiv@divisor^(0+128)
  2479  01E1  07A0               	addwf	___lwdiv@divisor^(0+128),f
  2480  01E2  0829               	movf	(utoa@val+1)^(0+128),w
  2481  01E3  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  2482  01E4  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2483  01E5  0828               	movf	utoa@val^(0+128),w
  2484  01E6  01A2               	clrf	___lwdiv@dividend^(0+128)
  2485  01E7  07A2               	addwf	___lwdiv@dividend^(0+128),f
  2486  01E8  118A  247E  118A   	fcall	___lwdiv
  2487  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  2488  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  2489  01ED  0821               	movf	(?___lwdiv+1)^(0+128),w
  2490  01EE  01A9               	clrf	(utoa@val+1)^(0+128)
  2491  01EF  07A9               	addwf	(utoa@val+1)^(0+128),f
  2492  01F0  0820               	movf	?___lwdiv^(0+128),w
  2493  01F1  01A8               	clrf	utoa@val^(0+128)
  2494  01F2  07A8               	addwf	utoa@val^(0+128),f
  2495  01F3  300A               	movlw	10
  2496  01F4  022F               	subwf	utoa@c^(0+128),w
  2497  01F5  1C03               	skipc
  2498  01F6  29FB               	goto	l672
  2499  01F7  3007               	movlw	7
  2500  01F8  00AC               	movwf	??_utoa^(0+128)
  2501  01F9  082C               	movf	??_utoa^(0+128),w
  2502  01FA  07AF               	addwf	utoa@c^(0+128),f
  2503  01FB                     l672:	
  2504  01FB  3030               	movlw	48
  2505  01FC  00AC               	movwf	??_utoa^(0+128)
  2506  01FD  082C               	movf	??_utoa^(0+128),w
  2507  01FE  07AF               	addwf	utoa@c^(0+128),f
  2508  01FF  082F               	movf	utoa@c^(0+128),w
  2509  0200  00AC               	movwf	??_utoa^(0+128)
  2510  0201  0830               	movf	utoa@buf^(0+128),w
  2511  0202  0084               	movwf	4
  2512  0203  082C               	movf	??_utoa^(0+128),w
  2513  0204  1383               	bcf	3,7	;select IRP bank0
  2514  0205  0080               	movwf	0
  2515  0206  3001               	movlw	1
  2516  0207  02B0               	subwf	utoa@buf^(0+128),f
  2517  0208  0829               	movf	(utoa@val+1)^(0+128),w
  2518  0209  0428               	iorwf	utoa@val^(0+128),w
  2519  020A  1D03               	skipz
  2520  020B  29C7               	goto	l2408
  2521                           
  2522                           ;	Return value of _utoa is never used
  2523  020C  3001               	movlw	1
  2524  020D  00AC               	movwf	??_utoa^(0+128)
  2525  020E  082C               	movf	??_utoa^(0+128),w
  2526  020F  07B0               	addwf	utoa@buf^(0+128),f
  2527  0210  0008               	return
  2528  0211                     __end_of_utoa:	
  2529                           
  2530                           	psect	text12
  2531  04FC                     __ptext12:	
  2532 ;; *************** function ___lwmod *****************
  2533 ;; Defined at:
  2534 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\lwmod.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  divisor         2    0[BANK1 ] unsigned int 
  2537 ;;  dividend        2    2[BANK1 ] unsigned int 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  counter         1    5[BANK1 ] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  2    0[BANK1 ] unsigned int 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2549 ;;      Params:         0       0       4       0
  2550 ;;      Locals:         0       0       1       0
  2551 ;;      Temps:          0       0       1       0
  2552 ;;      Totals:         0       0       6       0
  2553 ;;Total ram usage:        6 bytes
  2554 ;; Hardware stack levels used:    1
  2555 ;; Hardware stack levels required when called:    6
  2556 ;; This function calls:
  2557 ;;		Nothing
  2558 ;; This function is called by:
  2559 ;;		_utoa
  2560 ;; This function uses a non-reentrant model
  2561 ;;
  2562                           
  2563                           
  2564                           ;psect for function ___lwmod
  2565  04FC                     ___lwmod:	
  2566                           
  2567                           ;incstack = 0
  2568 ;; hardware stack exceeded
  2569                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2570  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2571  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2572  04FE  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2573  04FF  0420               	iorwf	___lwmod@divisor^(0+128),w
  2574  0500  1903               	skipnz
  2575  0501  2D2B               	goto	l2370
  2576  0502  01A5               	clrf	___lwmod@counter^(0+128)
  2577  0503  0AA5               	incf	___lwmod@counter^(0+128),f
  2578  0504                     l2360:	
  2579  0504  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2580  0505  2D12               	goto	l2362
  2581  0506  3001               	movlw	1
  2582  0507                     u2355:	
  2583  0507  1003               	clrc
  2584  0508  0DA0               	rlf	___lwmod@divisor^(0+128),f
  2585  0509  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  2586  050A  3EFF               	addlw	-1
  2587  050B  1D03               	skipz
  2588  050C  2D07               	goto	u2355
  2589  050D  3001               	movlw	1
  2590  050E  00A4               	movwf	??___lwmod^(0+128)
  2591  050F  0824               	movf	??___lwmod^(0+128),w
  2592  0510  07A5               	addwf	___lwmod@counter^(0+128),f
  2593  0511  2D04               	goto	l2360
  2594  0512                     l2362:	
  2595  0512  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2596  0513  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  2597  0514  1D03               	skipz
  2598  0515  2D18               	goto	u2375
  2599  0516  0820               	movf	___lwmod@divisor^(0+128),w
  2600  0517  0222               	subwf	___lwmod@dividend^(0+128),w
  2601  0518                     u2375:	
  2602  0518  1C03               	skipc
  2603  0519  2D20               	goto	l2366
  2604  051A  0820               	movf	___lwmod@divisor^(0+128),w
  2605  051B  02A2               	subwf	___lwmod@dividend^(0+128),f
  2606  051C  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2607  051D  1C03               	skipc
  2608  051E  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  2609  051F  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  2610  0520                     l2366:	
  2611  0520  3001               	movlw	1
  2612  0521                     u2385:	
  2613  0521  1003               	clrc
  2614  0522  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  2615  0523  0CA0               	rrf	___lwmod@divisor^(0+128),f
  2616  0524  3EFF               	addlw	-1
  2617  0525  1D03               	skipz
  2618  0526  2D21               	goto	u2385
  2619  0527  3001               	movlw	1
  2620  0528  02A5               	subwf	___lwmod@counter^(0+128),f
  2621  0529  1D03               	btfss	3,2
  2622  052A  2D12               	goto	l2362
  2623  052B                     l2370:	
  2624  052B  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2625  052C  01A1               	clrf	(?___lwmod+1)^(0+128)
  2626  052D  07A1               	addwf	(?___lwmod+1)^(0+128),f
  2627  052E  0822               	movf	___lwmod@dividend^(0+128),w
  2628  052F  01A0               	clrf	?___lwmod^(0+128)
  2629  0530  07A0               	addwf	?___lwmod^(0+128),f
  2630  0531  0008               	return
  2631  0532                     __end_of___lwmod:	
  2632                           
  2633                           	psect	text13
  2634  047E                     __ptext13:	
  2635 ;; *************** function ___lwdiv *****************
  2636 ;; Defined at:
  2637 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  divisor         2    0[BANK1 ] unsigned int 
  2640 ;;  dividend        2    2[BANK1 ] unsigned int 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  quotient        2    6[BANK1 ] unsigned int 
  2643 ;;  counter         1    5[BANK1 ] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    0[BANK1 ] unsigned int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2653 ;;      Params:         0       0       4       0
  2654 ;;      Locals:         0       0       3       0
  2655 ;;      Temps:          0       0       1       0
  2656 ;;      Totals:         0       0       8       0
  2657 ;;Total ram usage:        8 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    6
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_utoa
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           
  2668                           ;psect for function ___lwdiv
  2669  047E                     ___lwdiv:	
  2670                           
  2671                           ;incstack = 0
  2672 ;; hardware stack exceeded
  2673                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2674  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2675  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2676  0480  01A6               	clrf	___lwdiv@quotient^(0+128)
  2677  0481  01A7               	clrf	(___lwdiv@quotient+1)^(0+128)
  2678  0482  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2679  0483  0420               	iorwf	___lwdiv@divisor^(0+128),w
  2680  0484  1903               	skipnz
  2681  0485  2CB7               	goto	l2348
  2682  0486  01A5               	clrf	___lwdiv@counter^(0+128)
  2683  0487  0AA5               	incf	___lwdiv@counter^(0+128),f
  2684  0488                     l2336:	
  2685  0488  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2686  0489  2C96               	goto	l2338
  2687  048A  3001               	movlw	1
  2688  048B                     u2285:	
  2689  048B  1003               	clrc
  2690  048C  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  2691  048D  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2692  048E  3EFF               	addlw	-1
  2693  048F  1D03               	skipz
  2694  0490  2C8B               	goto	u2285
  2695  0491  3001               	movlw	1
  2696  0492  00A4               	movwf	??___lwdiv^(0+128)
  2697  0493  0824               	movf	??___lwdiv^(0+128),w
  2698  0494  07A5               	addwf	___lwdiv@counter^(0+128),f
  2699  0495  2C88               	goto	l2336
  2700  0496                     l2338:	
  2701  0496  3001               	movlw	1
  2702  0497                     u2305:	
  2703  0497  1003               	clrc
  2704  0498  0DA6               	rlf	___lwdiv@quotient^(0+128),f
  2705  0499  0DA7               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2706  049A  3EFF               	addlw	-1
  2707  049B  1D03               	skipz
  2708  049C  2C97               	goto	u2305
  2709  049D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2710  049E  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2711  049F  1D03               	skipz
  2712  04A0  2CA3               	goto	u2315
  2713  04A1  0820               	movf	___lwdiv@divisor^(0+128),w
  2714  04A2  0222               	subwf	___lwdiv@dividend^(0+128),w
  2715  04A3                     u2315:	
  2716  04A3  1C03               	skipc
  2717  04A4  2CAC               	goto	l2344
  2718  04A5  0820               	movf	___lwdiv@divisor^(0+128),w
  2719  04A6  02A2               	subwf	___lwdiv@dividend^(0+128),f
  2720  04A7  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2721  04A8  1C03               	skipc
  2722  04A9  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  2723  04AA  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2724  04AB  1426               	bsf	___lwdiv@quotient^(0+128),0
  2725  04AC                     l2344:	
  2726  04AC  3001               	movlw	1
  2727  04AD                     u2325:	
  2728  04AD  1003               	clrc
  2729  04AE  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2730  04AF  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  2731  04B0  3EFF               	addlw	-1
  2732  04B1  1D03               	skipz
  2733  04B2  2CAD               	goto	u2325
  2734  04B3  3001               	movlw	1
  2735  04B4  02A5               	subwf	___lwdiv@counter^(0+128),f
  2736  04B5  1D03               	btfss	3,2
  2737  04B6  2C96               	goto	l2338
  2738  04B7                     l2348:	
  2739  04B7  0827               	movf	(___lwdiv@quotient+1)^(0+128),w
  2740  04B8  01A1               	clrf	(?___lwdiv+1)^(0+128)
  2741  04B9  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  2742  04BA  0826               	movf	___lwdiv@quotient^(0+128),w
  2743  04BB  01A0               	clrf	?___lwdiv^(0+128)
  2744  04BC  07A0               	addwf	?___lwdiv^(0+128),f
  2745  04BD  0008               	return
  2746  04BE                     __end_of___lwdiv:	
  2747                           
  2748                           	psect	text14
  2749  0782                     __ptext14:	
  2750 ;; *************** function _strcpy *****************
  2751 ;; Defined at:
  2752 ;;		line 8 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\strcpy.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  to              1    wreg     PTR unsigned char 
  2755 ;;		 -> display_player_nbr@string(16), 
  2756 ;;  from            1    0[BANK1 ] PTR const unsigned char 
  2757 ;;		 -> STR_1(8), 
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  to              1    2[BANK1 ] PTR unsigned char 
  2760 ;;		 -> display_player_nbr@string(16), 
  2761 ;;  cp              1    3[BANK1 ] PTR unsigned char 
  2762 ;;		 -> display_player_nbr@string(16), 
  2763 ;; Return value:  Size  Location     Type
  2764 ;;                  1    wreg      PTR unsigned char 
  2765 ;; Registers used:
  2766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2767 ;; Tracked objects:
  2768 ;;		On entry : 0/0
  2769 ;;		On exit  : 0/0
  2770 ;;		Unchanged: 0/0
  2771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2772 ;;      Params:         0       0       1       0
  2773 ;;      Locals:         0       0       2       0
  2774 ;;      Temps:          0       0       1       0
  2775 ;;      Totals:         0       0       4       0
  2776 ;;Total ram usage:        4 bytes
  2777 ;; Hardware stack levels used:    1
  2778 ;; Hardware stack levels required when called:    6
  2779 ;; This function calls:
  2780 ;;		Nothing
  2781 ;; This function is called by:
  2782 ;;		_display_player_nbr
  2783 ;; This function uses a non-reentrant model
  2784 ;;
  2785                           
  2786                           
  2787                           ;psect for function _strcpy
  2788  0782                     _strcpy:	
  2789                           
  2790                           ;incstack = 0
  2791 ;; hardware stack exceeded
  2792                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2793                           ;strcpy@to stored from wreg
  2794  0782  1683               	bsf	3,5	;RP0=1, select bank1
  2795  0783  1303               	bcf	3,6	;RP1=0, select bank1
  2796  0784  00A2               	movwf	strcpy@to^(0+128)
  2797  0785  0822               	movf	strcpy@to^(0+128),w
  2798  0786  00A1               	movwf	??_strcpy^(0+128)
  2799  0787  0821               	movf	??_strcpy^(0+128),w
  2800  0788  00A3               	movwf	strcpy@cp^(0+128)
  2801  0789                     l2394:	
  2802  0789  0820               	movf	strcpy@from^(0+128),w
  2803  078A  0084               	movwf	4
  2804  078B  158A  2000  118A   	fcall	stringdir
  2805  078E  00A1               	movwf	??_strcpy^(0+128)
  2806  078F  0823               	movf	strcpy@cp^(0+128),w
  2807  0790  0084               	movwf	4
  2808  0791  0821               	movf	??_strcpy^(0+128),w
  2809  0792  1383               	bcf	3,7	;select IRP bank0
  2810  0793  0080               	movwf	0
  2811  0794  0880               	movf	0,f
  2812  0795  1903               	btfsc	3,2
  2813  0796  0008               	return
  2814  0797  3001               	movlw	1
  2815  0798  00A1               	movwf	??_strcpy^(0+128)
  2816  0799  0821               	movf	??_strcpy^(0+128),w
  2817  079A  07A3               	addwf	strcpy@cp^(0+128),f
  2818  079B  3001               	movlw	1
  2819  079C  00A1               	movwf	??_strcpy^(0+128)
  2820  079D  0821               	movf	??_strcpy^(0+128),w
  2821  079E  07A0               	addwf	strcpy@from^(0+128),f
  2822  079F  2F89               	goto	l2394
  2823  07A0                     __end_of_strcpy:	
  2824                           ;	Return value of _strcpy is never used
  2825                           
  2826                           
  2827                           	psect	text15
  2828  06D9                     __ptext15:	
  2829 ;; *************** function _strcat *****************
  2830 ;; Defined at:
  2831 ;;		line 8 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\strcat.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  to              1    wreg     PTR unsigned char 
  2834 ;;		 -> display_player_nbr@string(16), 
  2835 ;;  from            1    0[BANK1 ] PTR const unsigned char 
  2836 ;;		 -> display_player_nbr@string_player_number(2), 
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;  to              1    2[BANK1 ] PTR unsigned char 
  2839 ;;		 -> display_player_nbr@string(16), 
  2840 ;;  cp              1    3[BANK1 ] PTR unsigned char 
  2841 ;;		 -> display_player_nbr@string(16), 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      PTR unsigned char 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2851 ;;      Params:         0       0       1       0
  2852 ;;      Locals:         0       0       2       0
  2853 ;;      Temps:          0       0       1       0
  2854 ;;      Totals:         0       0       4       0
  2855 ;;Total ram usage:        4 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    6
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_display_player_nbr
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _strcat
  2867  06D9                     _strcat:	
  2868                           
  2869                           ;incstack = 0
  2870 ;; hardware stack exceeded
  2871                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  2872                           ;strcat@to stored from wreg
  2873  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  2874  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  2875  06DB  00A2               	movwf	strcat@to^(0+128)
  2876  06DC  0822               	movf	strcat@to^(0+128),w
  2877  06DD  00A1               	movwf	??_strcat^(0+128)
  2878  06DE  0821               	movf	??_strcat^(0+128),w
  2879  06DF  00A3               	movwf	strcat@cp^(0+128)
  2880  06E0                     l2430:	
  2881  06E0  0823               	movf	strcat@cp^(0+128),w
  2882  06E1  0084               	movwf	4
  2883  06E2  1383               	bcf	3,7	;select IRP bank0
  2884  06E3  0880               	movf	0,f
  2885  06E4  1903               	btfsc	3,2
  2886  06E5  2EF3               	goto	l2434
  2887  06E6  3001               	movlw	1
  2888  06E7  00A1               	movwf	??_strcat^(0+128)
  2889  06E8  0821               	movf	??_strcat^(0+128),w
  2890  06E9  07A3               	addwf	strcat@cp^(0+128),f
  2891  06EA  2EE0               	goto	l2430
  2892  06EB                     l2432:	
  2893  06EB  3001               	movlw	1
  2894  06EC  00A1               	movwf	??_strcat^(0+128)
  2895  06ED  0821               	movf	??_strcat^(0+128),w
  2896  06EE  07A3               	addwf	strcat@cp^(0+128),f
  2897  06EF  3001               	movlw	1
  2898  06F0  00A1               	movwf	??_strcat^(0+128)
  2899  06F1  0821               	movf	??_strcat^(0+128),w
  2900  06F2  07A0               	addwf	strcat@from^(0+128),f
  2901  06F3                     l2434:	
  2902  06F3  0820               	movf	strcat@from^(0+128),w
  2903  06F4  0084               	movwf	4
  2904  06F5  0800               	movf	0,w
  2905  06F6  00A1               	movwf	??_strcat^(0+128)
  2906  06F7  0823               	movf	strcat@cp^(0+128),w
  2907  06F8  0084               	movwf	4
  2908  06F9  0821               	movf	??_strcat^(0+128),w
  2909  06FA  0080               	movwf	0
  2910  06FB  0880               	movf	0,f
  2911  06FC  1903               	btfsc	3,2
  2912                           
  2913                           ;	Return value of _strcat is never used
  2914  06FD  0008               	return
  2915  06FE  2EEB               	goto	l2432
  2916  06FF                     __end_of_strcat:	
  2917                           
  2918                           	psect	text16
  2919  0723                     __ptext16:	
  2920 ;; *************** function _Lcd4_Write_String *****************
  2921 ;; Defined at:
  2922 ;;		line 101 in file "LCD_screen.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  a               1    wreg     PTR unsigned char 
  2925 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  a               1    9[BANK1 ] PTR unsigned char 
  2928 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), 
  2929 ;;  i               2    7[BANK1 ] int 
  2930 ;; Return value:  Size  Location     Type
  2931 ;;		None               void
  2932 ;; Registers used:
  2933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2934 ;; Tracked objects:
  2935 ;;		On entry : 0/0
  2936 ;;		On exit  : 0/0
  2937 ;;		Unchanged: 0/0
  2938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2939 ;;      Params:         0       0       0       0
  2940 ;;      Locals:         0       0       3       0
  2941 ;;      Temps:          0       0       1       0
  2942 ;;      Totals:         0       0       4       0
  2943 ;;Total ram usage:        4 bytes
  2944 ;; Hardware stack levels used:    1
  2945 ;; Hardware stack levels required when called:    8
  2946 ;; This function calls:
  2947 ;;		_Lcd4_Write_Char
  2948 ;; This function is called by:
  2949 ;;		_display_player_nbr
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           
  2954                           ;psect for function _Lcd4_Write_String
  2955  0723                     _Lcd4_Write_String:	
  2956                           
  2957                           ;incstack = 0
  2958 ;; hardware stack exceeded
  2959                           ; Regs used in _Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2960                           ;Lcd4_Write_String@a stored from wreg
  2961  0723  1683               	bsf	3,5	;RP0=1, select bank1
  2962  0724  1303               	bcf	3,6	;RP1=0, select bank1
  2963  0725  00A9               	movwf	Lcd4_Write_String@a^(0+128)
  2964                           
  2965                           ;LCD_screen.c: 103: int i;
  2966                           ;LCD_screen.c: 104: for(i=0;a[i]!='\0';i++)
  2967  0726  01A7               	clrf	Lcd4_Write_String@i^(0+128)
  2968  0727  01A8               	clrf	(Lcd4_Write_String@i+1)^(0+128)
  2969  0728                     l2388:	
  2970  0728  0827               	movf	Lcd4_Write_String@i^(0+128),w
  2971  0729  0729               	addwf	Lcd4_Write_String@a^(0+128),w
  2972  072A  00A6               	movwf	??_Lcd4_Write_String^(0+128)
  2973  072B  0826               	movf	??_Lcd4_Write_String^(0+128),w
  2974  072C  0084               	movwf	4
  2975  072D  1383               	bcf	3,7	;select IRP bank0
  2976  072E  0880               	movf	0,f
  2977  072F  1903               	btfsc	3,2
  2978  0730  0008               	return
  2979                           
  2980                           ;LCD_screen.c: 105: Lcd4_Write_Char(a[i]);
  2981  0731  0827               	movf	Lcd4_Write_String@i^(0+128),w
  2982  0732  0729               	addwf	Lcd4_Write_String@a^(0+128),w
  2983  0733  00A6               	movwf	??_Lcd4_Write_String^(0+128)
  2984  0734  0826               	movf	??_Lcd4_Write_String^(0+128),w
  2985  0735  0084               	movwf	4
  2986  0736  1383               	bcf	3,7	;select IRP bank0
  2987  0737  0800               	movf	0,w
  2988  0738  118A  2289  118A   	fcall	_Lcd4_Write_Char
  2989  073B  3001               	movlw	1
  2990  073C  1683               	bsf	3,5	;RP0=1, select bank1
  2991  073D  1303               	bcf	3,6	;RP1=0, select bank1
  2992  073E  07A7               	addwf	Lcd4_Write_String@i^(0+128),f
  2993  073F  1803               	skipnc
  2994  0740  0AA8               	incf	(Lcd4_Write_String@i+1)^(0+128),f
  2995  0741  3000               	movlw	0
  2996  0742  07A8               	addwf	(Lcd4_Write_String@i+1)^(0+128),f
  2997  0743  2F28               	goto	l2388
  2998  0744                     __end_of_Lcd4_Write_String:	
  2999                           
  3000                           	psect	text17
  3001  0289                     __ptext17:	
  3002 ;; *************** function _Lcd4_Write_Char *****************
  3003 ;; Defined at:
  3004 ;;		line 83 in file "LCD_screen.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  a               1    wreg     unsigned char 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  a               1    5[BANK1 ] unsigned char 
  3009 ;;  y               1    4[BANK1 ] unsigned char 
  3010 ;;  temp            1    3[BANK1 ] unsigned char 
  3011 ;; Return value:  Size  Location     Type
  3012 ;;		None               void
  3013 ;; Registers used:
  3014 ;;		wreg, status,2, status,0, pclath, cstack
  3015 ;; Tracked objects:
  3016 ;;		On entry : 0/0
  3017 ;;		On exit  : 0/0
  3018 ;;		Unchanged: 0/0
  3019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3020 ;;      Params:         0       0       0       0
  3021 ;;      Locals:         0       0       3       0
  3022 ;;      Temps:          0       0       2       0
  3023 ;;      Totals:         0       0       5       0
  3024 ;;Total ram usage:        5 bytes
  3025 ;; Hardware stack levels used:    1
  3026 ;; Hardware stack levels required when called:    7
  3027 ;; This function calls:
  3028 ;;		_Lcd4_Port
  3029 ;; This function is called by:
  3030 ;;		_Lcd4_Write_String
  3031 ;; This function uses a non-reentrant model
  3032 ;;
  3033                           
  3034                           
  3035                           ;psect for function _Lcd4_Write_Char
  3036  0289                     _Lcd4_Write_Char:	
  3037                           
  3038                           ;incstack = 0
  3039 ;; hardware stack exceeded
  3040                           ; Regs used in _Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3041                           ;Lcd4_Write_Char@a stored from wreg
  3042  0289  1683               	bsf	3,5	;RP0=1, select bank1
  3043  028A  1303               	bcf	3,6	;RP1=0, select bank1
  3044  028B  00A5               	movwf	Lcd4_Write_Char@a^(0+128)
  3045                           
  3046                           ;LCD_screen.c: 85: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  3047  028C  301A               	movlw	26
  3048  028D  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3049  028E  30F8               	movlw	248
  3050  028F  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3051  0290                     u2677:	
  3052  0290  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3053  0291  2A90               	goto	u2677
  3054  0292  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3055  0293  2A90               	goto	u2677
  3056  0294  0000               	nop
  3057                           
  3058                           ;LCD_screen.c: 86: char temp,y;
  3059                           ;LCD_screen.c: 87: temp = a&0x0F;
  3060  0295  1683               	bsf	3,5	;RP0=1, select bank1
  3061  0296  1303               	bcf	3,6	;RP1=0, select bank1
  3062  0297  0825               	movf	Lcd4_Write_Char@a^(0+128),w
  3063  0298  390F               	andlw	15
  3064  0299  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3065  029A  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3066  029B  00A3               	movwf	Lcd4_Write_Char@temp^(0+128)
  3067                           
  3068                           ;LCD_screen.c: 88: y = a&0xF0;
  3069  029C  0825               	movf	Lcd4_Write_Char@a^(0+128),w
  3070  029D  39F0               	andlw	240
  3071  029E  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3072  029F  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3073  02A0  00A4               	movwf	Lcd4_Write_Char@y^(0+128)
  3074                           
  3075                           ;LCD_screen.c: 89: RA2 = 1;
  3076  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3077  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3078  02A3  1505               	bsf	5,2	;volatile
  3079                           
  3080                           ;LCD_screen.c: 90: Lcd4_Port(y>>4);
  3081  02A4  1683               	bsf	3,5	;RP0=1, select bank1
  3082  02A5  1303               	bcf	3,6	;RP1=0, select bank1
  3083  02A6  0824               	movf	Lcd4_Write_Char@y^(0+128),w
  3084  02A7  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3085  02A8  3004               	movlw	4
  3086  02A9                     u2265:	
  3087  02A9  1003               	clrc
  3088  02AA  0CA1               	rrf	??_Lcd4_Write_Char^(0+128),f
  3089  02AB  3EFF               	addlw	-1
  3090  02AC  1D03               	skipz
  3091  02AD  2AA9               	goto	u2265
  3092  02AE  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3093  02AF  118A  2657  118A   	fcall	_Lcd4_Port
  3094                           
  3095                           ;LCD_screen.c: 91: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3096  02B2  300D               	movlw	13
  3097  02B3  1683               	bsf	3,5	;RP0=1, select bank1
  3098  02B4  1303               	bcf	3,6	;RP1=0, select bank1
  3099  02B5  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3100  02B6  30FB               	movlw	251
  3101  02B7  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3102  02B8                     u2687:	
  3103  02B8  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3104  02B9  2AB8               	goto	u2687
  3105  02BA  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3106  02BB  2AB8               	goto	u2687
  3107  02BC  2ABD               	nop2
  3108                           
  3109                           ;LCD_screen.c: 92: RC0 = 1;
  3110  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  3111  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  3112  02BF  1407               	bsf	7,0	;volatile
  3113                           
  3114                           ;LCD_screen.c: 93: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3115  02C0  300D               	movlw	13
  3116  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  3117  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  3118  02C3  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3119  02C4  30FB               	movlw	251
  3120  02C5  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3121  02C6                     u2697:	
  3122  02C6  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3123  02C7  2AC6               	goto	u2697
  3124  02C8  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3125  02C9  2AC6               	goto	u2697
  3126  02CA  2ACB               	nop2
  3127                           
  3128                           ;LCD_screen.c: 94: RC0 = 0;
  3129  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3130  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  3131  02CD  1007               	bcf	7,0	;volatile
  3132                           
  3133                           ;LCD_screen.c: 95: Lcd4_Port(temp);
  3134  02CE  1683               	bsf	3,5	;RP0=1, select bank1
  3135  02CF  1303               	bcf	3,6	;RP1=0, select bank1
  3136  02D0  0823               	movf	Lcd4_Write_Char@temp^(0+128),w
  3137  02D1  118A  2657  118A   	fcall	_Lcd4_Port
  3138                           
  3139                           ;LCD_screen.c: 96: RC0 = 1;
  3140  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  3141  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  3142  02D6  1407               	bsf	7,0	;volatile
  3143                           
  3144                           ;LCD_screen.c: 97: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3145  02D7  300D               	movlw	13
  3146  02D8  1683               	bsf	3,5	;RP0=1, select bank1
  3147  02D9  1303               	bcf	3,6	;RP1=0, select bank1
  3148  02DA  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3149  02DB  30FB               	movlw	251
  3150  02DC  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3151  02DD                     u2707:	
  3152  02DD  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3153  02DE  2ADD               	goto	u2707
  3154  02DF  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3155  02E0  2ADD               	goto	u2707
  3156  02E1  2AE2               	nop2
  3157                           
  3158                           ;LCD_screen.c: 98: RC0 = 0;
  3159  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  3160  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  3161  02E4  1007               	bcf	7,0	;volatile
  3162  02E5  0008               	return
  3163  02E6                     __end_of_Lcd4_Write_Char:	
  3164                           
  3165                           	psect	text18
  3166  0685                     __ptext18:	
  3167 ;; *************** function _Lcd4_Set_Cursor *****************
  3168 ;; Defined at:
  3169 ;;		line 48 in file "LCD_screen.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  ligne           1    wreg     unsigned char 
  3172 ;;  pixel_nb        1    4[BANK1 ] unsigned char 
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;  ligne           1    9[BANK1 ] unsigned char 
  3175 ;;  lCmdLsb         1   11[BANK1 ] unsigned char 
  3176 ;;  lCmdMsb         1   10[BANK1 ] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;		None               void
  3179 ;; Registers used:
  3180 ;;		wreg, status,2, status,0, pclath, cstack
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3186 ;;      Params:         0       0       1       0
  3187 ;;      Locals:         0       0       3       0
  3188 ;;      Temps:          0       0       4       0
  3189 ;;      Totals:         0       0       8       0
  3190 ;;Total ram usage:        8 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:    8
  3193 ;; This function calls:
  3194 ;;		_Lcd4_Cmd
  3195 ;; This function is called by:
  3196 ;;		_display_player_nbr
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function _Lcd4_Set_Cursor
  3202  0685                     _Lcd4_Set_Cursor:	
  3203                           
  3204                           ;incstack = 0
  3205 ;; hardware stack exceeded
  3206                           ; Regs used in _Lcd4_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3207                           ;Lcd4_Set_Cursor@ligne stored from wreg
  3208  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3209  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3210  0687  00A9               	movwf	Lcd4_Set_Cursor@ligne^(0+128)
  3211                           
  3212                           ;LCD_screen.c: 50: char lCmdMsb,lCmdLsb;
  3213                           ;LCD_screen.c: 51: lCmdMsb = 0x08 | (ligne <<2) | ( ((pixel_nb)& (0x30)) >> 4);
  3214  0688  0824               	movf	Lcd4_Set_Cursor@pixel_nb^(0+128),w
  3215  0689  00A5               	movwf	??_Lcd4_Set_Cursor^(0+128)
  3216  068A  3004               	movlw	4
  3217  068B                     u2405:	
  3218  068B  1003               	clrc
  3219  068C  0CA5               	rrf	??_Lcd4_Set_Cursor^(0+128),f
  3220  068D  3EFF               	addlw	-1
  3221  068E  1D03               	skipz
  3222  068F  2E8B               	goto	u2405
  3223  0690  3003               	movlw	3
  3224  0691  0525               	andwf	??_Lcd4_Set_Cursor^(0+128),w
  3225  0692  00A6               	movwf	(??_Lcd4_Set_Cursor+1)^(0+128)
  3226  0693  0829               	movf	Lcd4_Set_Cursor@ligne^(0+128),w
  3227  0694  00A7               	movwf	(??_Lcd4_Set_Cursor+2)^(0+128)
  3228  0695  3001               	movlw	1
  3229  0696                     u2415:	
  3230  0696  1003               	clrc
  3231  0697  0DA7               	rlf	(??_Lcd4_Set_Cursor+2)^(0+128),f
  3232  0698  3EFF               	addlw	-1
  3233  0699  1D03               	skipz
  3234  069A  2E96               	goto	u2415
  3235  069B  1003               	clrc
  3236  069C  0D27               	rlf	(??_Lcd4_Set_Cursor+2)^(0+128),w
  3237  069D  0426               	iorwf	(??_Lcd4_Set_Cursor+1)^(0+128),w
  3238  069E  3808               	iorlw	8
  3239  069F  00A8               	movwf	(??_Lcd4_Set_Cursor+3)^(0+128)
  3240  06A0  0828               	movf	(??_Lcd4_Set_Cursor+3)^(0+128),w
  3241  06A1  00AA               	movwf	Lcd4_Set_Cursor@lCmdMsb^(0+128)
  3242                           
  3243                           ;LCD_screen.c: 52: lCmdLsb = pixel_nb & 0x0F;
  3244  06A2  0824               	movf	Lcd4_Set_Cursor@pixel_nb^(0+128),w
  3245  06A3  390F               	andlw	15
  3246  06A4  00A5               	movwf	??_Lcd4_Set_Cursor^(0+128)
  3247  06A5  0825               	movf	??_Lcd4_Set_Cursor^(0+128),w
  3248  06A6  00AB               	movwf	Lcd4_Set_Cursor@lCmdLsb^(0+128)
  3249                           
  3250                           ;LCD_screen.c: 53: Lcd4_Cmd(lCmdMsb);
  3251  06A7  082A               	movf	Lcd4_Set_Cursor@lCmdMsb^(0+128),w
  3252  06A8  118A  27A0  118A   	fcall	_Lcd4_Cmd
  3253                           
  3254                           ;LCD_screen.c: 54: Lcd4_Cmd(lCmdLsb);
  3255  06AB  1683               	bsf	3,5	;RP0=1, select bank1
  3256  06AC  1303               	bcf	3,6	;RP1=0, select bank1
  3257  06AD  082B               	movf	Lcd4_Set_Cursor@lCmdLsb^(0+128),w
  3258  06AE  118A  27A0         	fcall	_Lcd4_Cmd
  3259  06B0  0008               	return
  3260  06B1                     __end_of_Lcd4_Set_Cursor:	
  3261                           
  3262                           	psect	text19
  3263  07A0                     __ptext19:	
  3264 ;; *************** function _Lcd4_Cmd *****************
  3265 ;; Defined at:
  3266 ;;		line 33 in file "LCD_screen.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;  a               1    wreg     unsigned char 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  a               1    3[BANK1 ] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;		None               void
  3273 ;; Registers used:
  3274 ;;		wreg, status,2, status,0, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3280 ;;      Params:         0       0       0       0
  3281 ;;      Locals:         0       0       1       0
  3282 ;;      Temps:          0       0       2       0
  3283 ;;      Totals:         0       0       3       0
  3284 ;;Total ram usage:        3 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    7
  3287 ;; This function calls:
  3288 ;;		_Lcd4_Port
  3289 ;; This function is called by:
  3290 ;;		_Lcd4_Clear
  3291 ;;		_Lcd4_Set_Cursor
  3292 ;;		_Lcd4_Init
  3293 ;;		_Lcd4_Shift_Right
  3294 ;;		_Lcd4_Shift_Left
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _Lcd4_Cmd
  3300  07A0                     _Lcd4_Cmd:	
  3301                           
  3302                           ;incstack = 0
  3303 ;; hardware stack exceeded
  3304                           ; Regs used in _Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3305                           ;Lcd4_Cmd@a stored from wreg
  3306  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3307  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3308  07A2  00A3               	movwf	Lcd4_Cmd@a^(0+128)
  3309                           
  3310                           ;LCD_screen.c: 35: RA2 = 0;
  3311  07A3  1283               	bcf	3,5	;RP0=0, select bank0
  3312  07A4  1303               	bcf	3,6	;RP1=0, select bank0
  3313  07A5  1105               	bcf	5,2	;volatile
  3314                           
  3315                           ;LCD_screen.c: 36: Lcd4_Port(a);
  3316  07A6  1683               	bsf	3,5	;RP0=1, select bank1
  3317  07A7  1303               	bcf	3,6	;RP1=0, select bank1
  3318  07A8  0823               	movf	Lcd4_Cmd@a^(0+128),w
  3319  07A9  118A  2657  118A   	fcall	_Lcd4_Port
  3320                           
  3321                           ;LCD_screen.c: 37: RC0 = 1;
  3322  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3323  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3324  07AE  1407               	bsf	7,0	;volatile
  3325                           
  3326                           ;LCD_screen.c: 38: _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3327  07AF  300B               	movlw	11
  3328  07B0  1683               	bsf	3,5	;RP0=1, select bank1
  3329  07B1  1303               	bcf	3,6	;RP1=0, select bank1
  3330  07B2  00A2               	movwf	(??_Lcd4_Cmd^(0+128)+1)
  3331  07B3  3062               	movlw	98
  3332  07B4  00A1               	movwf	??_Lcd4_Cmd^(0+128)
  3333  07B5                     u2717:	
  3334  07B5  0BA1               	decfsz	??_Lcd4_Cmd^(0+128),f
  3335  07B6  2FB5               	goto	u2717
  3336  07B7  0BA2               	decfsz	(??_Lcd4_Cmd^(0+128)+1),f
  3337  07B8  2FB5               	goto	u2717
  3338  07B9  0000               	nop
  3339                           
  3340                           ;LCD_screen.c: 39: RC0 = 0;
  3341  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  3342  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  3343  07BC  1007               	bcf	7,0	;volatile
  3344  07BD  0008               	return
  3345  07BE                     __end_of_Lcd4_Cmd:	
  3346                           
  3347                           	psect	text20
  3348  0657                     __ptext20:	
  3349 ;; *************** function _Lcd4_Port *****************
  3350 ;; Defined at:
  3351 ;;		line 11 in file "LCD_screen.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  a               1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  a               1    0[BANK1 ] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;		None               void
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3365 ;;      Params:         0       0       0       0
  3366 ;;      Locals:         0       0       1       0
  3367 ;;      Temps:          0       0       0       0
  3368 ;;      Totals:         0       0       1       0
  3369 ;;Total ram usage:        1 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    6
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_Lcd4_Cmd
  3376 ;;		_Lcd4_Write_Char
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _Lcd4_Port
  3382  0657                     _Lcd4_Port:	
  3383                           
  3384                           ;incstack = 0
  3385 ;; hardware stack exceeded
  3386                           ; Regs used in _Lcd4_Port: [wreg]
  3387                           ;Lcd4_Port@a stored from wreg
  3388  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0659  00A0               	movwf	Lcd4_Port@a^(0+128)
  3391                           
  3392                           ;LCD_screen.c: 13: if(a & 1)
  3393  065A  1C20               	btfss	Lcd4_Port@a^(0+128),0
  3394  065B  2E60               	goto	l261
  3395                           
  3396                           ;LCD_screen.c: 14: RC3 = 1;
  3397  065C  1283               	bcf	3,5	;RP0=0, select bank0
  3398  065D  1303               	bcf	3,6	;RP1=0, select bank0
  3399  065E  1587               	bsf	7,3	;volatile
  3400  065F  2E63               	goto	l262
  3401  0660                     l261:	
  3402                           
  3403                           ;LCD_screen.c: 15: else
  3404                           ;LCD_screen.c: 16: RC3 = 0;
  3405  0660  1283               	bcf	3,5	;RP0=0, select bank0
  3406  0661  1303               	bcf	3,6	;RP1=0, select bank0
  3407  0662  1187               	bcf	7,3	;volatile
  3408  0663                     l262:	
  3409                           
  3410                           ;LCD_screen.c: 18: if(a & 2)
  3411  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3412  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3413  0665  1CA0               	btfss	Lcd4_Port@a^(0+128),1
  3414  0666  2E6B               	goto	l263
  3415                           
  3416                           ;LCD_screen.c: 19: RB4 = 1;
  3417  0667  1283               	bcf	3,5	;RP0=0, select bank0
  3418  0668  1303               	bcf	3,6	;RP1=0, select bank0
  3419  0669  1606               	bsf	6,4	;volatile
  3420  066A  2E6E               	goto	l264
  3421  066B                     l263:	
  3422                           
  3423                           ;LCD_screen.c: 20: else
  3424                           ;LCD_screen.c: 21: RB4 = 0;
  3425  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3426  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3427  066D  1206               	bcf	6,4	;volatile
  3428  066E                     l264:	
  3429                           
  3430                           ;LCD_screen.c: 23: if(a & 4)
  3431  066E  1683               	bsf	3,5	;RP0=1, select bank1
  3432  066F  1303               	bcf	3,6	;RP1=0, select bank1
  3433  0670  1D20               	btfss	Lcd4_Port@a^(0+128),2
  3434  0671  2E76               	goto	l265
  3435                           
  3436                           ;LCD_screen.c: 24: RC6 = 1;
  3437  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0674  1707               	bsf	7,6	;volatile
  3440  0675  2E79               	goto	l266
  3441  0676                     l265:	
  3442                           
  3443                           ;LCD_screen.c: 25: else
  3444                           ;LCD_screen.c: 26: RC6 = 0;
  3445  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3446  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3447  0678  1307               	bcf	7,6	;volatile
  3448  0679                     l266:	
  3449                           
  3450                           ;LCD_screen.c: 28: if(a & 8)
  3451  0679  1683               	bsf	3,5	;RP0=1, select bank1
  3452  067A  1303               	bcf	3,6	;RP1=0, select bank1
  3453  067B  1DA0               	btfss	Lcd4_Port@a^(0+128),3
  3454  067C  2E81               	goto	l267
  3455                           
  3456                           ;LCD_screen.c: 29: RB6 = 1;
  3457  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3458  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3459  067F  1706               	bsf	6,6	;volatile
  3460  0680  0008               	return
  3461  0681                     l267:	
  3462                           
  3463                           ;LCD_screen.c: 30: else
  3464                           ;LCD_screen.c: 31: RB6 = 0;
  3465  0681  1283               	bcf	3,5	;RP0=0, select bank0
  3466  0682  1303               	bcf	3,6	;RP1=0, select bank0
  3467  0683  1306               	bcf	6,6	;volatile
  3468  0684  0008               	return
  3469  0685                     __end_of_Lcd4_Port:	
  3470                           
  3471                           	psect	text21
  3472  0393                     __ptext21:	
  3473 ;; *************** function ___awmod *****************
  3474 ;; Defined at:
  3475 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\awmod.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;  divisor         2    0[BANK1 ] int 
  3478 ;;  dividend        2    2[BANK1 ] int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;  sign            1    6[BANK1 ] unsigned char 
  3481 ;;  counter         1    5[BANK1 ] unsigned char 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  2    0[BANK1 ] int 
  3484 ;; Registers used:
  3485 ;;		wreg, status,2, status,0
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3491 ;;      Params:         0       0       4       0
  3492 ;;      Locals:         0       0       2       0
  3493 ;;      Temps:          0       0       1       0
  3494 ;;      Totals:         0       0       7       0
  3495 ;;Total ram usage:        7 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    6
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_initiate_game
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           
  3506                           ;psect for function ___awmod
  3507  0393                     ___awmod:	
  3508                           
  3509                           ;incstack = 0
  3510                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3511  0393  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0394  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0395  01A6               	clrf	___awmod@sign^(0+128)
  3514  0396  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3515  0397  2B9F               	goto	l2518
  3516  0398  09A2               	comf	___awmod@dividend^(0+128),f
  3517  0399  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3518  039A  0AA2               	incf	___awmod@dividend^(0+128),f
  3519  039B  1903               	skipnz
  3520  039C  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3521  039D  01A6               	clrf	___awmod@sign^(0+128)
  3522  039E  0AA6               	incf	___awmod@sign^(0+128),f
  3523  039F                     l2518:	
  3524  039F  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3525  03A0  2BA6               	goto	l2522
  3526  03A1  09A0               	comf	___awmod@divisor^(0+128),f
  3527  03A2  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3528  03A3  0AA0               	incf	___awmod@divisor^(0+128),f
  3529  03A4  1903               	skipnz
  3530  03A5  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3531  03A6                     l2522:	
  3532  03A6  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3533  03A7  0420               	iorwf	___awmod@divisor^(0+128),w
  3534  03A8  1903               	skipnz
  3535  03A9  2BD3               	goto	l2540
  3536  03AA  01A5               	clrf	___awmod@counter^(0+128)
  3537  03AB  0AA5               	incf	___awmod@counter^(0+128),f
  3538  03AC                     l2530:	
  3539  03AC  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
  3540  03AD  2BBA               	goto	l2532
  3541  03AE  3001               	movlw	1
  3542  03AF                     u2535:	
  3543  03AF  1003               	clrc
  3544  03B0  0DA0               	rlf	___awmod@divisor^(0+128),f
  3545  03B1  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3546  03B2  3EFF               	addlw	-1
  3547  03B3  1D03               	skipz
  3548  03B4  2BAF               	goto	u2535
  3549  03B5  3001               	movlw	1
  3550  03B6  00A4               	movwf	??___awmod^(0+128)
  3551  03B7  0824               	movf	??___awmod^(0+128),w
  3552  03B8  07A5               	addwf	___awmod@counter^(0+128),f
  3553  03B9  2BAC               	goto	l2530
  3554  03BA                     l2532:	
  3555  03BA  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3556  03BB  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  3557  03BC  1D03               	skipz
  3558  03BD  2BC0               	goto	u2555
  3559  03BE  0820               	movf	___awmod@divisor^(0+128),w
  3560  03BF  0222               	subwf	___awmod@dividend^(0+128),w
  3561  03C0                     u2555:	
  3562  03C0  1C03               	skipc
  3563  03C1  2BC8               	goto	l2536
  3564  03C2  0820               	movf	___awmod@divisor^(0+128),w
  3565  03C3  02A2               	subwf	___awmod@dividend^(0+128),f
  3566  03C4  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3567  03C5  1C03               	skipc
  3568  03C6  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  3569  03C7  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  3570  03C8                     l2536:	
  3571  03C8  3001               	movlw	1
  3572  03C9                     u2565:	
  3573  03C9  1003               	clrc
  3574  03CA  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  3575  03CB  0CA0               	rrf	___awmod@divisor^(0+128),f
  3576  03CC  3EFF               	addlw	-1
  3577  03CD  1D03               	skipz
  3578  03CE  2BC9               	goto	u2565
  3579  03CF  3001               	movlw	1
  3580  03D0  02A5               	subwf	___awmod@counter^(0+128),f
  3581  03D1  1D03               	btfss	3,2
  3582  03D2  2BBA               	goto	l2532
  3583  03D3                     l2540:	
  3584  03D3  0826               	movf	___awmod@sign^(0+128),w
  3585  03D4  1903               	btfsc	3,2
  3586  03D5  2BDB               	goto	l2544
  3587  03D6  09A2               	comf	___awmod@dividend^(0+128),f
  3588  03D7  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3589  03D8  0AA2               	incf	___awmod@dividend^(0+128),f
  3590  03D9  1903               	skipnz
  3591  03DA  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3592  03DB                     l2544:	
  3593  03DB  0823               	movf	(___awmod@dividend+1)^(0+128),w
  3594  03DC  01A1               	clrf	(?___awmod+1)^(0+128)
  3595  03DD  07A1               	addwf	(?___awmod+1)^(0+128),f
  3596  03DE  0822               	movf	___awmod@dividend^(0+128),w
  3597  03DF  01A0               	clrf	?___awmod^(0+128)
  3598  03E0  07A0               	addwf	?___awmod^(0+128),f
  3599  03E1  0008               	return
  3600  03E2                     __end_of___awmod:	
  3601                           
  3602                           	psect	text22
  3603  0343                     __ptext22:	
  3604 ;; *************** function _isr *****************
  3605 ;; Defined at:
  3606 ;;		line 43 in file "interrupts.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;		None
  3609 ;; Auto vars:     Size  Location     Type
  3610 ;;  string          9    0        unsigned char [9]
  3611 ;; Return value:  Size  Location     Type
  3612 ;;		None               void
  3613 ;; Registers used:
  3614 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3615 ;; Tracked objects:
  3616 ;;		On entry : 0/0
  3617 ;;		On exit  : 0/0
  3618 ;;		Unchanged: 0/0
  3619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3620 ;;      Params:         0       0       0       0
  3621 ;;      Locals:         0       0       0       0
  3622 ;;      Temps:          0       7       0       0
  3623 ;;      Totals:         0       7       0       0
  3624 ;;Total ram usage:        7 bytes
  3625 ;; Hardware stack levels used:    1
  3626 ;; Hardware stack levels required when called:    5
  3627 ;; This function calls:
  3628 ;;		_game_phase
  3629 ;;		_switch_player
  3630 ;;		_uart_getc
  3631 ;;		_uart_putc
  3632 ;; This function is called by:
  3633 ;;		Interrupt level 1
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _isr
  3639  0343                     _isr:	
  3640                           
  3641                           ;interrupts.c: 47: if (PIR1bits.RCIF)
  3642  0343  1E8C               	btfss	12,5	;volatile
  3643  0344  2B51               	goto	i1l84
  3644                           
  3645                           ;interrupts.c: 48: {
  3646                           ;interrupts.c: 50: if (RCSTAbits.FERR)
  3647  0345  1D18               	btfss	24,2	;volatile
  3648  0346  2B4A               	goto	i1l2194
  3649                           
  3650                           ;interrupts.c: 51: {
  3651                           ;interrupts.c: 52: RCSTAbits.SPEN = 0;
  3652  0347  1398               	bcf	24,7	;volatile
  3653                           
  3654                           ;interrupts.c: 53: RCSTAbits.SPEN = 1;
  3655  0348  1798               	bsf	24,7	;volatile
  3656                           
  3657                           ;interrupts.c: 54: return;
  3658  0349  2B86               	goto	i1l86
  3659  034A                     i1l2194:	
  3660                           
  3661                           ;interrupts.c: 55: }
  3662                           ;interrupts.c: 59: uart_putc(uart_getc());
  3663  034A  158A  27A6  118A   	fcall	_uart_getc
  3664  034D  158A  278E  118A   	fcall	_uart_putc
  3665                           
  3666                           ;interrupts.c: 60: return;
  3667  0350  2B86               	goto	i1l86
  3668  0351                     i1l84:	
  3669                           
  3670                           ;interrupts.c: 64: }
  3671                           ;interrupts.c: 67: if (TMR1IF)
  3672  0351  180C               	btfsc	12,0	;volatile
  3673  0352  2B86               	goto	i1l86
  3674                           
  3675                           ;interrupts.c: 82: }
  3676                           ;interrupts.c: 86: if (TMR2IF)
  3677                           
  3678                           ;interrupts.c: 68: {
  3679                           ;interrupts.c: 81: return;
  3680  0353  1C8C               	btfss	12,1	;volatile
  3681  0354  2B6F               	goto	i1l88
  3682                           
  3683                           ;interrupts.c: 87: {
  3684                           ;interrupts.c: 88: char string [9];
  3685                           ;interrupts.c: 90: TMR2IF = 0;
  3686  0355  108C               	bcf	12,1	;volatile
  3687                           
  3688                           ;interrupts.c: 91: timer2_tick_nbr ++;
  3689  0356  3001               	movlw	1
  3690  0357  07CD               	addwf	_timer2_tick_nbr,f
  3691  0358  1803               	skipnc
  3692  0359  0ACE               	incf	_timer2_tick_nbr+1,f
  3693  035A  3000               	movlw	0
  3694  035B  07CE               	addwf	_timer2_tick_nbr+1,f
  3695                           
  3696                           ;interrupts.c: 94: if (timer2_tick_nbr== 80){
  3697  035C  3050               	movlw	80
  3698  035D  064D               	xorwf	_timer2_tick_nbr,w
  3699  035E  044E               	iorwf	_timer2_tick_nbr+1,w
  3700  035F  1D03               	skipz
  3701  0360  2B86               	goto	i1l86
  3702                           
  3703                           ;interrupts.c: 95: timer2_tick_nbr = 0;
  3704  0361  01CD               	clrf	_timer2_tick_nbr
  3705  0362  01CE               	clrf	_timer2_tick_nbr+1
  3706                           
  3707                           ;interrupts.c: 96: elapsed_time++;
  3708  0363  3001               	movlw	1
  3709  0364  07C7               	addwf	_elapsed_time,f
  3710  0365  1803               	skipnc
  3711  0366  0AC8               	incf	_elapsed_time+1,f
  3712  0367  3000               	movlw	0
  3713  0368  07C8               	addwf	_elapsed_time+1,f
  3714                           
  3715                           ;interrupts.c: 97: RC2 = 1- RC2;
  3716  0369  3004               	movlw	4
  3717  036A  0687               	xorwf	7,f
  3718                           
  3719                           ;interrupts.c: 98: game_phase();
  3720  036B  118A  2566  118A   	fcall	_game_phase
  3721                           
  3722                           ;interrupts.c: 99: }
  3723                           ;interrupts.c: 101: return;
  3724  036E  2B86               	goto	i1l86
  3725  036F                     i1l88:	
  3726                           
  3727                           ;interrupts.c: 102: }
  3728                           ;interrupts.c: 104: if(RABIF != 0x00)
  3729  036F  1C0B               	btfss	11,0	;volatile
  3730  0370  2B86               	goto	i1l86
  3731                           
  3732                           ;interrupts.c: 105: {
  3733                           ;interrupts.c: 106: if (RA0 == 1)
  3734  0371  1C05               	btfss	5,0	;volatile
  3735  0372  2B85               	goto	i1l2220
  3736                           
  3737                           ;interrupts.c: 107: {
  3738                           ;interrupts.c: 108: switch_player();
  3739  0373  118A  2763  118A   	fcall	_switch_player
  3740                           
  3741                           ;interrupts.c: 109: _delay((unsigned long)((500)*(8000000UL/4000.0)));
  3742  0376  3006               	movlw	6
  3743  0377  1283               	bcf	3,5	;RP0=0, select bank0
  3744  0378  1303               	bcf	3,6	;RP1=0, select bank0
  3745  0379  00C2               	movwf	??_isr+2
  3746  037A  3013               	movlw	19
  3747  037B  00C1               	movwf	??_isr+1
  3748  037C  30B1               	movlw	177
  3749  037D  00C0               	movwf	??_isr
  3750  037E                     u272_27:	
  3751  037E  0BC0               	decfsz	??_isr,f
  3752  037F  2B7E               	goto	u272_27
  3753  0380  0BC1               	decfsz	??_isr+1,f
  3754  0381  2B7E               	goto	u272_27
  3755  0382  0BC2               	decfsz	??_isr+2,f
  3756  0383  2B7E               	goto	u272_27
  3757  0384  2B85               	nop2
  3758  0385                     i1l2220:	
  3759                           
  3760                           ;interrupts.c: 110: }
  3761                           ;interrupts.c: 111: RABIF = 0x00;
  3762  0385  100B               	bcf	11,0	;volatile
  3763  0386                     i1l86:	
  3764                           ;interrupts.c: 112: return;
  3765                           
  3766  0386  1283               	bcf	3,5	;RP0=0, select bank0
  3767  0387  1303               	bcf	3,6	;RP1=0, select bank0
  3768  0388  0846               	movf	??_isr+6,w
  3769  0389  00FF               	movwf	127
  3770  038A  0845               	movf	??_isr+5,w
  3771  038B  008A               	movwf	10
  3772  038C  0844               	movf	??_isr+4,w
  3773  038D  0084               	movwf	4
  3774  038E  0E43               	swapf	(??_isr+3)^0,w
  3775  038F  0083               	movwf	3
  3776  0390  0EFE               	swapf	126,f
  3777  0391  0E7E               	swapf	126,w
  3778  0392  0009               	retfie
  3779  0393                     __end_of_isr:	
  3780                           
  3781                           	psect	intentry
  3782  0004                     __pintentry:	
  3783                           ;incstack = 0
  3784 ;; hardware stack exceeded
  3785                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3786                           
  3787  0004                     interrupt_function:	
  3788  007E                     saved_w	set	btemp
  3789  0004  00FE               	movwf	btemp
  3790  0005  0E03               	swapf	3,w
  3791  0006  1283               	bcf	3,5	;RP0=0, select bank0
  3792  0007  1303               	bcf	3,6	;RP1=0, select bank0
  3793  0008  00C3               	movwf	??_isr+3
  3794  0009  0804               	movf	4,w
  3795  000A  00C4               	movwf	??_isr+4
  3796  000B  080A               	movf	10,w
  3797  000C  00C5               	movwf	??_isr+5
  3798  000D  087F               	movf	btemp+1,w
  3799  000E  00C6               	movwf	??_isr+6
  3800  000F  118A  2B43         	ljmp	_isr
  3801                           
  3802                           	psect	text23
  3803  0F8E                     __ptext23:	
  3804 ;; *************** function _uart_putc *****************
  3805 ;; Defined at:
  3806 ;;		line 69 in file "UART.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;  data            1    wreg     unsigned char 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  data            1    0[COMMON] unsigned char 
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		wreg
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3820 ;;      Params:         0       0       0       0
  3821 ;;      Locals:         1       0       0       0
  3822 ;;      Temps:          0       0       0       0
  3823 ;;      Totals:         1       0       0       0
  3824 ;;Total ram usage:        1 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; This function calls:
  3827 ;;		Nothing
  3828 ;; This function is called by:
  3829 ;;		_isr
  3830 ;;		_uart_printf
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _uart_putc
  3836  0F8E                     _uart_putc:	
  3837                           
  3838                           ;incstack = 0
  3839                           ; Regs used in _uart_putc: [wreg]
  3840                           ;uart_putc@data stored from wreg
  3841  0F8E  00F0               	movwf	uart_putc@data
  3842  0F8F                     i1l219:	
  3843                           ;UART.c: 71: continue;
  3844                           
  3845                           ;UART.c: 70: while( ! TXIF)
  3846                           
  3847  0F8F  1283               	bcf	3,5	;RP0=0, select bank0
  3848  0F90  1303               	bcf	3,6	;RP1=0, select bank0
  3849  0F91  1E0C               	btfss	12,4	;volatile
  3850  0F92  2F8F               	goto	i1l219
  3851                           
  3852                           ;UART.c: 72: TXREG = data;
  3853  0F93  0870               	movf	uart_putc@data,w
  3854  0F94  0099               	movwf	25	;volatile
  3855  0F95  0008               	return
  3856  0F96                     __end_of_uart_putc:	
  3857                           
  3858                           	psect	text24
  3859  0FA6                     __ptext24:	
  3860 ;; *************** function _uart_getc *****************
  3861 ;; Defined at:
  3862 ;;		line 84 in file "UART.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;		None
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;		None
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      unsigned char 
  3869 ;; Registers used:
  3870 ;;		wreg
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3876 ;;      Params:         0       0       0       0
  3877 ;;      Locals:         0       0       0       0
  3878 ;;      Temps:          0       0       0       0
  3879 ;;      Totals:         0       0       0       0
  3880 ;;Total ram usage:        0 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_isr
  3886 ;;		_uart_get_str
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _uart_getc
  3892  0FA6                     _uart_getc:	
  3893                           
  3894                           ;UART.c: 85: if (RCSTAbits.OERR){
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _uart_getc: [wreg]
  3898  0FA6  1283               	bcf	3,5	;RP0=0, select bank0
  3899  0FA7  1303               	bcf	3,6	;RP1=0, select bank0
  3900  0FA8  1C98               	btfss	24,1	;volatile
  3901  0FA9  2FAC               	goto	i1l232
  3902                           
  3903                           ;UART.c: 86: RCSTAbits.CREN = 0;
  3904  0FAA  1218               	bcf	24,4	;volatile
  3905                           
  3906                           ;UART.c: 87: RCSTAbits.CREN = 1;
  3907  0FAB  1618               	bsf	24,4	;volatile
  3908  0FAC                     i1l232:	
  3909                           ;UART.c: 91: ;
  3910                           
  3911                           ;UART.c: 88: }
  3912                           ;UART.c: 90: while(!RCIF)
  3913                           
  3914  0FAC  1E8C               	btfss	12,5	;volatile
  3915  0FAD  2FAC               	goto	i1l232
  3916                           
  3917                           ;UART.c: 92: return RCREG;
  3918  0FAE  081A               	movf	26,w	;volatile
  3919  0FAF  0008               	return
  3920  0FB0                     __end_of_uart_getc:	
  3921                           
  3922                           	psect	text25
  3923  0763                     __ptext25:	
  3924 ;; *************** function _switch_player *****************
  3925 ;; Defined at:
  3926 ;;		line 49 in file "game_timer/src/game_timer.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;		None               void
  3933 ;; Registers used:
  3934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3940 ;;      Params:         0       0       0       0
  3941 ;;      Locals:         0       0       0       0
  3942 ;;      Temps:          1       0       0       0
  3943 ;;      Totals:         1       0       0       0
  3944 ;;Total ram usage:        1 bytes
  3945 ;; Hardware stack levels used:    1
  3946 ;; Hardware stack levels required when called:    4
  3947 ;; This function calls:
  3948 ;;		i1_display_player_nbr
  3949 ;; This function is called by:
  3950 ;;		_isr
  3951 ;; This function uses a non-reentrant model
  3952 ;;
  3953                           
  3954                           
  3955                           ;psect for function _switch_player
  3956  0763                     _switch_player:	
  3957                           
  3958                           ;game_timer.c: 50: extern player * gcurrent_player;
  3959                           ;game_timer.c: 51: extern game_type_t gtype_of_game;
  3960                           ;game_timer.c: 53: gcurrent_player = (gcurrent_player->next_player);
  3961                           
  3962                           ;incstack = 0
  3963 ;; hardware stack exceeded
  3964                           ; Regs used in _switch_player: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3965  0763  1683               	bsf	3,5	;RP0=1, select bank1
  3966  0764  1303               	bcf	3,6	;RP1=0, select bank1
  3967  0765  0851               	movf	_gcurrent_player^(0+128),w
  3968  0766  3E03               	addlw	3
  3969  0767  0084               	movwf	4
  3970  0768  1783               	bsf	3,7	;select IRP bank2
  3971  0769  0800               	movf	0,w
  3972  076A  00FD               	movwf	??_switch_player
  3973  076B  087D               	movf	??_switch_player,w
  3974  076C  00D1               	movwf	_gcurrent_player^(0+128)
  3975                           
  3976                           ;game_timer.c: 54: display_player_nbr(gcurrent_player->player_number);
  3977  076D  0851               	movf	_gcurrent_player^(0+128),w
  3978  076E  0084               	movwf	4
  3979  076F  0800               	movf	0,w
  3980  0770  118A  25FA  118A   	fcall	i1_display_player_nbr
  3981                           
  3982                           ;game_timer.c: 55: if (gtype_of_game == TIME_PER_ROUND)
  3983  0773  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0774  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0775  0850               	movf	_gtype_of_game,w
  3986  0776  3A01               	xorlw	1
  3987  0777  1D03               	skipz
  3988  0778  0008               	return
  3989                           
  3990                           ;game_timer.c: 56: {
  3991                           ;game_timer.c: 57: gcurrent_player->played_time = 0;
  3992  0779  1683               	bsf	3,5	;RP0=1, select bank1
  3993  077A  1303               	bcf	3,6	;RP1=0, select bank1
  3994  077B  0A51               	incf	_gcurrent_player^(0+128),w
  3995  077C  0084               	movwf	4
  3996  077D  1783               	bsf	3,7	;select IRP bank2
  3997  077E  0180               	clrf	0
  3998  077F  0A84               	incf	4,f
  3999  0780  0180               	clrf	0
  4000  0781  0008               	return
  4001  0782                     __end_of_switch_player:	
  4002                           
  4003                           	psect	text26
  4004  05FA                     __ptext26:	
  4005 ;; *************** function i1_display_player_nbr *****************
  4006 ;; Defined at:
  4007 ;;		line 61 in file "game_timer/src/game_timer.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  player_numbe    1    wreg     unsigned char 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  player_numbe    1   24[BANK0 ] unsigned char 
  4012 ;;  display_play   16    6[BANK0 ] unsigned char [16]
  4013 ;;  display_play    2   22[BANK0 ] unsigned char [2]
  4014 ;; Return value:  Size  Location     Type
  4015 ;;		None               void
  4016 ;; Registers used:
  4017 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4018 ;; Tracked objects:
  4019 ;;		On entry : 0/0
  4020 ;;		On exit  : 0/0
  4021 ;;		Unchanged: 0/0
  4022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4023 ;;      Params:         0       0       0       0
  4024 ;;      Locals:         0      19       0       0
  4025 ;;      Temps:          0       2       0       0
  4026 ;;      Totals:         0      21       0       0
  4027 ;;Total ram usage:       21 bytes
  4028 ;; Hardware stack levels used:    1
  4029 ;; Hardware stack levels required when called:    3
  4030 ;; This function calls:
  4031 ;;		i1_Lcd4_Set_Cursor
  4032 ;;		i1_Lcd4_Write_String
  4033 ;;		i1_strcat
  4034 ;;		i1_strcpy
  4035 ;;		i1_utoa
  4036 ;; This function is called by:
  4037 ;;		_switch_player
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           
  4042                           ;psect for function i1_display_player_nbr
  4043  05FA                     i1_display_player_nbr:	
  4044                           
  4045                           ;incstack = 0
  4046 ;; hardware stack exceeded
  4047                           ; Regs used in i1_display_player_nbr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4048                           ;i1display_player_nbr@player_number stored from wreg
  4049  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  4050  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  4051  05FC  00B8               	movwf	i1display_player_nbr@player_number
  4052                           
  4053                           ;game_timer.c: 63: char string[16];
  4054                           ;game_timer.c: 64: char string_player_number [2];
  4055                           ;game_timer.c: 65: strcpy(string, "Joueur ");
  4056  05FD  3001               	movlw	(STR_1-__stringbase)& (0+255)
  4057  05FE  00A4               	movwf	??i1_display_player_nbr
  4058  05FF  0824               	movf	??i1_display_player_nbr,w
  4059  0600  00F0               	movwf	i1strcpy@from
  4060  0601  3026               	movlw	i1display_player_nbr@string& (0+255)
  4061  0602  118A  27DB  118A   	fcall	i1_strcpy
  4062                           
  4063                           ;game_timer.c: 66: utoa(string_player_number,player_number,10);
  4064  0605  1283               	bcf	3,5	;RP0=0, select bank0
  4065  0606  1303               	bcf	3,6	;RP1=0, select bank0
  4066  0607  0838               	movf	i1display_player_nbr@player_number,w
  4067  0608  00A4               	movwf	??i1_display_player_nbr
  4068  0609  01A5               	clrf	??i1_display_player_nbr+1
  4069  060A  0824               	movf	??i1_display_player_nbr,w
  4070  060B  00F8               	movwf	i1utoa@val
  4071  060C  0825               	movf	??i1_display_player_nbr+1,w
  4072  060D  00F9               	movwf	i1utoa@val+1
  4073  060E  300A               	movlw	10
  4074  060F  00FA               	movwf	i1utoa@base
  4075  0610  3000               	movlw	0
  4076  0611  00FB               	movwf	i1utoa@base+1
  4077  0612  3036               	movlw	i1display_player_nbr@string_player_number& (0+255)
  4078  0613  118A  2211  118A   	fcall	i1_utoa
  4079                           
  4080                           ;game_timer.c: 67: strcat (string, string_player_number);
  4081  0616  3036               	movlw	i1display_player_nbr@string_player_number& (0+255)
  4082  0617  1283               	bcf	3,5	;RP0=0, select bank0
  4083  0618  1303               	bcf	3,6	;RP1=0, select bank0
  4084  0619  00A4               	movwf	??i1_display_player_nbr
  4085  061A  0824               	movf	??i1_display_player_nbr,w
  4086  061B  00F0               	movwf	i1strcat@from
  4087  061C  3026               	movlw	i1display_player_nbr@string& (0+255)
  4088  061D  118A  26FF  118A   	fcall	i1_strcat
  4089                           
  4090                           ;game_timer.c: 69: Lcd4_Set_Cursor(1,0);
  4091  0620  01F4               	clrf	i1Lcd4_Set_Cursor@pixel_nb
  4092  0621  3001               	movlw	1
  4093  0622  118A  26B1  118A   	fcall	i1_Lcd4_Set_Cursor
  4094                           
  4095                           ;game_timer.c: 70: Lcd4_Write_String(string);
  4096  0625  3026               	movlw	i1display_player_nbr@string& (0+255)
  4097  0626  118A  27BE         	fcall	i1_Lcd4_Write_String
  4098  0628  0008               	return
  4099  0629                     __end_ofi1_display_player_nbr:	
  4100                           
  4101                           	psect	text27
  4102  07DB                     __ptext27:	
  4103 ;; *************** function i1_strcpy *****************
  4104 ;; Defined at:
  4105 ;;		line 8 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\strcpy.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  to              1    wreg     PTR unsigned char 
  4108 ;;		 -> display_player_nbr@string(16), 
  4109 ;;  from            1    0[COMMON] PTR const unsigned char 
  4110 ;;		 -> STR_1(8), 
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;  to              1    2[COMMON] PTR unsigned char 
  4113 ;;		 -> display_player_nbr@string(16), 
  4114 ;;  strcpy          1    3[COMMON] PTR unsigned char 
  4115 ;;		 -> display_player_nbr@string(16), 
  4116 ;; Return value:  Size  Location     Type
  4117 ;;                  1    wreg      PTR unsigned char 
  4118 ;; Registers used:
  4119 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4120 ;; Tracked objects:
  4121 ;;		On entry : 0/0
  4122 ;;		On exit  : 0/0
  4123 ;;		Unchanged: 0/0
  4124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4125 ;;      Params:         1       0       0       0
  4126 ;;      Locals:         2       0       0       0
  4127 ;;      Temps:          1       0       0       0
  4128 ;;      Totals:         4       0       0       0
  4129 ;;Total ram usage:        4 bytes
  4130 ;; Hardware stack levels used:    2
  4131 ;; This function calls:
  4132 ;;		Nothing
  4133 ;; This function is called by:
  4134 ;;		i1_display_player_nbr
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           
  4139                           ;psect for function i1_strcpy
  4140  07DB                     i1_strcpy:	
  4141                           
  4142                           ;incstack = 0
  4143 ;; hardware stack exceeded
  4144                           ; Regs used in i1_strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  4145                           ;i1strcpy@to stored from wreg
  4146  07DB  00F2               	movwf	i1strcpy@to
  4147  07DC  0872               	movf	i1strcpy@to,w
  4148  07DD  00F1               	movwf	??i1_strcpy
  4149  07DE  0871               	movf	??i1_strcpy,w
  4150  07DF  00F3               	movwf	i1strcpy@cp
  4151  07E0                     i1l1954:	
  4152  07E0  0870               	movf	i1strcpy@from,w
  4153  07E1  0084               	movwf	4
  4154  07E2  158A  2000  118A   	fcall	stringdir
  4155  07E5  00F1               	movwf	??i1_strcpy
  4156  07E6  0873               	movf	i1strcpy@cp,w
  4157  07E7  0084               	movwf	4
  4158  07E8  0871               	movf	??i1_strcpy,w
  4159  07E9  1383               	bcf	3,7	;select IRP bank0
  4160  07EA  0080               	movwf	0
  4161  07EB  0880               	movf	0,f
  4162  07EC  1903               	btfsc	3,2
  4163  07ED  0008               	return
  4164  07EE  3001               	movlw	1
  4165  07EF  00F1               	movwf	??i1_strcpy
  4166  07F0  0871               	movf	??i1_strcpy,w
  4167  07F1  07F3               	addwf	i1strcpy@cp,f
  4168  07F2  3001               	movlw	1
  4169  07F3  00F1               	movwf	??i1_strcpy
  4170  07F4  0871               	movf	??i1_strcpy,w
  4171  07F5  07F0               	addwf	i1strcpy@from,f
  4172  07F6  2FE0               	goto	i1l1954
  4173  07F7                     __end_ofi1_strcpy:	
  4174                           ;	Return value of i1_strcpy is never used
  4175                           
  4176                           
  4177                           	psect	text28
  4178  06FF                     __ptext28:	
  4179 ;; *************** function i1_strcat *****************
  4180 ;; Defined at:
  4181 ;;		line 8 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\strcat.c"
  4182 ;; Parameters:    Size  Location     Type
  4183 ;;  to              1    wreg     PTR unsigned char 
  4184 ;;		 -> display_player_nbr@string(16), 
  4185 ;;  from            1    0[COMMON] PTR const unsigned char 
  4186 ;;		 -> display_player_nbr@string_player_number(2), 
  4187 ;; Auto vars:     Size  Location     Type
  4188 ;;  to              1    2[COMMON] PTR unsigned char 
  4189 ;;		 -> display_player_nbr@string(16), 
  4190 ;;  strcat          1    3[COMMON] PTR unsigned char 
  4191 ;;		 -> display_player_nbr@string(16), 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      PTR unsigned char 
  4194 ;; Registers used:
  4195 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4201 ;;      Params:         1       0       0       0
  4202 ;;      Locals:         2       0       0       0
  4203 ;;      Temps:          1       0       0       0
  4204 ;;      Totals:         4       0       0       0
  4205 ;;Total ram usage:        4 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		i1_display_player_nbr
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function i1_strcat
  4216  06FF                     i1_strcat:	
  4217                           
  4218                           ;incstack = 0
  4219 ;; hardware stack exceeded
  4220                           ; Regs used in i1_strcat: [wreg-fsr0h+status,2+status,0]
  4221                           ;i1strcat@to stored from wreg
  4222  06FF  00F2               	movwf	i1strcat@to
  4223  0700  0872               	movf	i1strcat@to,w
  4224  0701  00F1               	movwf	??i1_strcat
  4225  0702  0871               	movf	??i1_strcat,w
  4226  0703  00F3               	movwf	i1strcat@cp
  4227  0704                     i1l1944:	
  4228  0704  0873               	movf	i1strcat@cp,w
  4229  0705  0084               	movwf	4
  4230  0706  1383               	bcf	3,7	;select IRP bank0
  4231  0707  0880               	movf	0,f
  4232  0708  1903               	btfsc	3,2
  4233  0709  2F17               	goto	i1l1948
  4234  070A  3001               	movlw	1
  4235  070B  00F1               	movwf	??i1_strcat
  4236  070C  0871               	movf	??i1_strcat,w
  4237  070D  07F3               	addwf	i1strcat@cp,f
  4238  070E  2F04               	goto	i1l1944
  4239  070F                     i1l1946:	
  4240  070F  3001               	movlw	1
  4241  0710  00F1               	movwf	??i1_strcat
  4242  0711  0871               	movf	??i1_strcat,w
  4243  0712  07F3               	addwf	i1strcat@cp,f
  4244  0713  3001               	movlw	1
  4245  0714  00F1               	movwf	??i1_strcat
  4246  0715  0871               	movf	??i1_strcat,w
  4247  0716  07F0               	addwf	i1strcat@from,f
  4248  0717                     i1l1948:	
  4249  0717  0870               	movf	i1strcat@from,w
  4250  0718  0084               	movwf	4
  4251  0719  0800               	movf	0,w
  4252  071A  00F1               	movwf	??i1_strcat
  4253  071B  0873               	movf	i1strcat@cp,w
  4254  071C  0084               	movwf	4
  4255  071D  0871               	movf	??i1_strcat,w
  4256  071E  0080               	movwf	0
  4257  071F  0880               	movf	0,f
  4258  0720  1903               	btfsc	3,2
  4259                           
  4260                           ;	Return value of i1_strcat is never used
  4261  0721  0008               	return
  4262  0722  2F0F               	goto	i1l1946
  4263  0723                     __end_ofi1_strcat:	
  4264                           
  4265                           	psect	text29
  4266  0566                     __ptext29:	
  4267 ;; *************** function _game_phase *****************
  4268 ;; Defined at:
  4269 ;;		line 36 in file "game_timer/src/game_timer.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;		None
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  time_str        9   21[BANK0 ] unsigned char [9]
  4274 ;;  remaining_ti    2   30[BANK0 ] unsigned int 
  4275 ;; Return value:  Size  Location     Type
  4276 ;;		None               void
  4277 ;; Registers used:
  4278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4284 ;;      Params:         0       0       0       0
  4285 ;;      Locals:         0      11       0       0
  4286 ;;      Temps:          0       2       0       0
  4287 ;;      Totals:         0      13       0       0
  4288 ;;Total ram usage:       13 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    3
  4291 ;; This function calls:
  4292 ;;		_time_shapping
  4293 ;;		i1_Lcd4_Set_Cursor
  4294 ;;		i1_Lcd4_Write_String
  4295 ;; This function is called by:
  4296 ;;		_isr
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           
  4301                           ;psect for function _game_phase
  4302  0566                     _game_phase:	
  4303                           
  4304                           ;game_timer.c: 37: extern player * gcurrent_player;
  4305                           ;game_timer.c: 38: extern unsigned int ggame_time;
  4306                           ;game_timer.c: 39: unsigned int remaining_time;
  4307                           ;game_timer.c: 40: char time_str[9];
  4308                           ;game_timer.c: 42: (gcurrent_player->played_time) ++;
  4309                           
  4310                           ;incstack = 0
  4311 ;; hardware stack exceeded
  4312                           ; Regs used in _game_phase: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4313  0566  1683               	bsf	3,5	;RP0=1, select bank1
  4314  0567  1303               	bcf	3,6	;RP1=0, select bank1
  4315  0568  0A51               	incf	_gcurrent_player^(0+128),w
  4316  0569  0084               	movwf	4
  4317  056A  3001               	movlw	1
  4318  056B  1783               	bsf	3,7	;select IRP bank2
  4319  056C  0780               	addwf	0,f
  4320  056D  0A84               	incf	4,f
  4321  056E  1803               	skipnc
  4322  056F  0A80               	incf	0,f
  4323                           
  4324                           ;game_timer.c: 43: remaining_time = ggame_time - (gcurrent_player->played_time);
  4325  0570  0A51               	incf	_gcurrent_player^(0+128),w
  4326  0571  0084               	movwf	4
  4327  0572  0800               	movf	0,w
  4328  0573  1283               	bcf	3,5	;RP0=0, select bank0
  4329  0574  1303               	bcf	3,6	;RP1=0, select bank0
  4330  0575  00B3               	movwf	??_game_phase
  4331  0576  0A84               	incf	4,f
  4332  0577  0800               	movf	0,w
  4333  0578  00B4               	movwf	??_game_phase+1
  4334  0579  09B3               	comf	??_game_phase,f
  4335  057A  09B4               	comf	??_game_phase+1,f
  4336  057B  0AB3               	incf	??_game_phase,f
  4337  057C  1903               	skipnz
  4338  057D  0AB4               	incf	??_game_phase+1,f
  4339  057E  0849               	movf	_ggame_time,w
  4340  057F  0733               	addwf	??_game_phase,w
  4341  0580  00BE               	movwf	game_phase@remaining_time
  4342  0581  084A               	movf	_ggame_time+1,w
  4343  0582  1803               	skipnc
  4344  0583  0A4A               	incf	_ggame_time+1,w
  4345  0584  0734               	addwf	??_game_phase+1,w
  4346  0585  00BF               	movwf	game_phase@remaining_time+1
  4347                           
  4348                           ;game_timer.c: 44: time_shapping(time_str, remaining_time);
  4349  0586  083F               	movf	game_phase@remaining_time+1,w
  4350  0587  01A5               	clrf	time_shapping@time+1
  4351  0588  07A5               	addwf	time_shapping@time+1,f
  4352  0589  083E               	movf	game_phase@remaining_time,w
  4353  058A  01A4               	clrf	time_shapping@time
  4354  058B  07A4               	addwf	time_shapping@time,f
  4355  058C  3035               	movlw	game_phase@time_str& (0+255)
  4356  058D  118A  2030  118A   	fcall	_time_shapping
  4357                           
  4358                           ;game_timer.c: 45: Lcd4_Set_Cursor(0,0);
  4359  0590  01F4               	clrf	i1Lcd4_Set_Cursor@pixel_nb
  4360  0591  3000               	movlw	0
  4361  0592  118A  26B1  118A   	fcall	i1_Lcd4_Set_Cursor
  4362                           
  4363                           ;game_timer.c: 46: Lcd4_Write_String(time_str);
  4364  0595  3035               	movlw	game_phase@time_str& (0+255)
  4365  0596  118A  27BE         	fcall	i1_Lcd4_Write_String
  4366  0598  0008               	return
  4367  0599                     __end_of_game_phase:	
  4368                           
  4369                           	psect	text30
  4370  07BE                     __ptext30:	
  4371 ;; *************** function i1_Lcd4_Write_String *****************
  4372 ;; Defined at:
  4373 ;;		line 101 in file "LCD_screen.c"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  a               1    wreg     PTR unsigned char 
  4376 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), 
  4377 ;; Auto vars:     Size  Location     Type
  4378 ;;  a               1    7[COMMON] PTR unsigned char 
  4379 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), 
  4380 ;;  Lcd4_Write_S    2    8[COMMON] int 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;		None               void
  4383 ;; Registers used:
  4384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4390 ;;      Params:         0       0       0       0
  4391 ;;      Locals:         3       0       0       0
  4392 ;;      Temps:          1       0       0       0
  4393 ;;      Totals:         4       0       0       0
  4394 ;;Total ram usage:        4 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    2
  4397 ;; This function calls:
  4398 ;;		i1_Lcd4_Write_Char
  4399 ;; This function is called by:
  4400 ;;		_game_phase
  4401 ;;		i1_display_player_nbr
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           
  4406                           ;psect for function i1_Lcd4_Write_String
  4407  07BE                     i1_Lcd4_Write_String:	
  4408                           
  4409                           ;incstack = 0
  4410 ;; hardware stack exceeded
  4411                           ; Regs used in i1_Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4412                           ;i1Lcd4_Write_String@a stored from wreg
  4413  07BE  00F7               	movwf	i1Lcd4_Write_String@a
  4414                           
  4415                           ;LCD_screen.c: 103: int i;
  4416                           ;LCD_screen.c: 104: for(i=0;a[i]!='\0';i++)
  4417  07BF  01F8               	clrf	i1Lcd4_Write_String@i
  4418  07C0  01F9               	clrf	i1Lcd4_Write_String@i+1
  4419  07C1                     i1l1870:	
  4420  07C1  0878               	movf	i1Lcd4_Write_String@i,w
  4421  07C2  0777               	addwf	i1Lcd4_Write_String@a,w
  4422  07C3  00F6               	movwf	??i1_Lcd4_Write_String
  4423  07C4  0876               	movf	??i1_Lcd4_Write_String,w
  4424  07C5  0084               	movwf	4
  4425  07C6  1383               	bcf	3,7	;select IRP bank0
  4426  07C7  0880               	movf	0,f
  4427  07C8  1903               	btfsc	3,2
  4428  07C9  0008               	return
  4429                           
  4430                           ;LCD_screen.c: 105: Lcd4_Write_Char(a[i]);
  4431  07CA  0878               	movf	i1Lcd4_Write_String@i,w
  4432  07CB  0777               	addwf	i1Lcd4_Write_String@a,w
  4433  07CC  00F6               	movwf	??i1_Lcd4_Write_String
  4434  07CD  0876               	movf	??i1_Lcd4_Write_String,w
  4435  07CE  0084               	movwf	4
  4436  07CF  1383               	bcf	3,7	;select IRP bank0
  4437  07D0  0800               	movf	0,w
  4438  07D1  118A  23E2  118A   	fcall	i1_Lcd4_Write_Char
  4439  07D4  3001               	movlw	1
  4440  07D5  07F8               	addwf	i1Lcd4_Write_String@i,f
  4441  07D6  1803               	skipnc
  4442  07D7  0AF9               	incf	i1Lcd4_Write_String@i+1,f
  4443  07D8  3000               	movlw	0
  4444  07D9  07F9               	addwf	i1Lcd4_Write_String@i+1,f
  4445  07DA  2FC1               	goto	i1l1870
  4446  07DB                     __end_ofi1_Lcd4_Write_String:	
  4447                           
  4448                           	psect	text31
  4449  03E2                     __ptext31:	
  4450 ;; *************** function i1_Lcd4_Write_Char *****************
  4451 ;; Defined at:
  4452 ;;		line 83 in file "LCD_screen.c"
  4453 ;; Parameters:    Size  Location     Type
  4454 ;;  a               1    wreg     unsigned char 
  4455 ;; Auto vars:     Size  Location     Type
  4456 ;;  a               1    5[COMMON] unsigned char 
  4457 ;;  Lcd4_Write_C    1    4[COMMON] unsigned char 
  4458 ;;  Lcd4_Write_C    1    3[COMMON] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;		None               void
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4468 ;;      Params:         0       0       0       0
  4469 ;;      Locals:         3       0       0       0
  4470 ;;      Temps:          2       0       0       0
  4471 ;;      Totals:         5       0       0       0
  4472 ;;Total ram usage:        5 bytes
  4473 ;; Hardware stack levels used:    1
  4474 ;; Hardware stack levels required when called:    1
  4475 ;; This function calls:
  4476 ;;		i1_Lcd4_Port
  4477 ;; This function is called by:
  4478 ;;		i1_Lcd4_Write_String
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           
  4483                           ;psect for function i1_Lcd4_Write_Char
  4484  03E2                     i1_Lcd4_Write_Char:	
  4485                           
  4486                           ;incstack = 0
  4487 ;; hardware stack exceeded
  4488                           ; Regs used in i1_Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4489                           ;i1Lcd4_Write_Char@a stored from wreg
  4490  03E2  00F5               	movwf	i1Lcd4_Write_Char@a
  4491                           
  4492                           ;LCD_screen.c: 85: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  4493  03E3  301A               	movlw	26
  4494  03E4  00F2               	movwf	??i1_Lcd4_Write_Char+1
  4495  03E5  30F8               	movlw	248
  4496  03E6  00F1               	movwf	??i1_Lcd4_Write_Char
  4497  03E7                     u273_27:	
  4498  03E7  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  4499  03E8  2BE7               	goto	u273_27
  4500  03E9  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  4501  03EA  2BE7               	goto	u273_27
  4502  03EB  0000               	nop
  4503                           
  4504                           ;LCD_screen.c: 86: char temp,y;
  4505                           ;LCD_screen.c: 87: temp = a&0x0F;
  4506  03EC  0875               	movf	i1Lcd4_Write_Char@a,w
  4507  03ED  390F               	andlw	15
  4508  03EE  00F1               	movwf	??i1_Lcd4_Write_Char
  4509  03EF  0871               	movf	??i1_Lcd4_Write_Char,w
  4510  03F0  00F3               	movwf	i1Lcd4_Write_Char@temp
  4511                           
  4512                           ;LCD_screen.c: 88: y = a&0xF0;
  4513  03F1  0875               	movf	i1Lcd4_Write_Char@a,w
  4514  03F2  39F0               	andlw	240
  4515  03F3  00F1               	movwf	??i1_Lcd4_Write_Char
  4516  03F4  0871               	movf	??i1_Lcd4_Write_Char,w
  4517  03F5  00F4               	movwf	i1Lcd4_Write_Char@y
  4518                           
  4519                           ;LCD_screen.c: 89: RA2 = 1;
  4520  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  4521  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  4522  03F8  1505               	bsf	5,2	;volatile
  4523                           
  4524                           ;LCD_screen.c: 90: Lcd4_Port(y>>4);
  4525  03F9  0874               	movf	i1Lcd4_Write_Char@y,w
  4526  03FA  00F1               	movwf	??i1_Lcd4_Write_Char
  4527  03FB  3004               	movlw	4
  4528  03FC                     u135_25:	
  4529  03FC  1003               	clrc
  4530  03FD  0CF1               	rrf	??i1_Lcd4_Write_Char,f
  4531  03FE  3EFF               	addlw	-1
  4532  03FF  1D03               	skipz
  4533  0400  2BFC               	goto	u135_25
  4534  0401  0871               	movf	??i1_Lcd4_Write_Char,w
  4535  0402  158A  27E6  118A   	fcall	i1_Lcd4_Port
  4536                           
  4537                           ;LCD_screen.c: 91: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4538  0405  300D               	movlw	13
  4539  0406  00F2               	movwf	??i1_Lcd4_Write_Char+1
  4540  0407  30FB               	movlw	251
  4541  0408  00F1               	movwf	??i1_Lcd4_Write_Char
  4542  0409                     u274_27:	
  4543  0409  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  4544  040A  2C09               	goto	u274_27
  4545  040B  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  4546  040C  2C09               	goto	u274_27
  4547  040D  2C0E               	nop2
  4548                           
  4549                           ;LCD_screen.c: 92: RC0 = 1;
  4550  040E  1283               	bcf	3,5	;RP0=0, select bank0
  4551  040F  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0410  1407               	bsf	7,0	;volatile
  4553                           
  4554                           ;LCD_screen.c: 93: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4555  0411  300D               	movlw	13
  4556  0412  00F2               	movwf	??i1_Lcd4_Write_Char+1
  4557  0413  30FB               	movlw	251
  4558  0414  00F1               	movwf	??i1_Lcd4_Write_Char
  4559  0415                     u275_27:	
  4560  0415  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  4561  0416  2C15               	goto	u275_27
  4562  0417  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  4563  0418  2C15               	goto	u275_27
  4564  0419  2C1A               	nop2
  4565                           
  4566                           ;LCD_screen.c: 94: RC0 = 0;
  4567  041A  1283               	bcf	3,5	;RP0=0, select bank0
  4568  041B  1303               	bcf	3,6	;RP1=0, select bank0
  4569  041C  1007               	bcf	7,0	;volatile
  4570                           
  4571                           ;LCD_screen.c: 95: Lcd4_Port(temp);
  4572  041D  0873               	movf	i1Lcd4_Write_Char@temp,w
  4573  041E  158A  27E6  118A   	fcall	i1_Lcd4_Port
  4574                           
  4575                           ;LCD_screen.c: 96: RC0 = 1;
  4576  0421  1283               	bcf	3,5	;RP0=0, select bank0
  4577  0422  1303               	bcf	3,6	;RP1=0, select bank0
  4578  0423  1407               	bsf	7,0	;volatile
  4579                           
  4580                           ;LCD_screen.c: 97: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  4581  0424  300D               	movlw	13
  4582  0425  00F2               	movwf	??i1_Lcd4_Write_Char+1
  4583  0426  30FB               	movlw	251
  4584  0427  00F1               	movwf	??i1_Lcd4_Write_Char
  4585  0428                     u276_27:	
  4586  0428  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  4587  0429  2C28               	goto	u276_27
  4588  042A  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  4589  042B  2C28               	goto	u276_27
  4590  042C  2C2D               	nop2
  4591                           
  4592                           ;LCD_screen.c: 98: RC0 = 0;
  4593  042D  1283               	bcf	3,5	;RP0=0, select bank0
  4594  042E  1303               	bcf	3,6	;RP1=0, select bank0
  4595  042F  1007               	bcf	7,0	;volatile
  4596  0430  0008               	return
  4597  0431                     __end_ofi1_Lcd4_Write_Char:	
  4598                           
  4599                           	psect	text32
  4600  06B1                     __ptext32:	
  4601 ;; *************** function i1_Lcd4_Set_Cursor *****************
  4602 ;; Defined at:
  4603 ;;		line 48 in file "LCD_screen.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;  ligne           1    wreg     unsigned char 
  4606 ;;  pixel_nb        1    4[COMMON] unsigned char 
  4607 ;; Auto vars:     Size  Location     Type
  4608 ;;  ligne           1    9[COMMON] unsigned char 
  4609 ;;  Lcd4_Set_Cur    1   11[COMMON] unsigned char 
  4610 ;;  Lcd4_Set_Cur    1   10[COMMON] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;		None               void
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0, pclath, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4620 ;;      Params:         1       0       0       0
  4621 ;;      Locals:         3       0       0       0
  4622 ;;      Temps:          4       0       0       0
  4623 ;;      Totals:         8       0       0       0
  4624 ;;Total ram usage:        8 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    2
  4627 ;; This function calls:
  4628 ;;		i1_Lcd4_Cmd
  4629 ;; This function is called by:
  4630 ;;		_game_phase
  4631 ;;		i1_display_player_nbr
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           
  4636                           ;psect for function i1_Lcd4_Set_Cursor
  4637  06B1                     i1_Lcd4_Set_Cursor:	
  4638                           
  4639                           ;incstack = 0
  4640 ;; hardware stack exceeded
  4641                           ; Regs used in i1_Lcd4_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  4642                           ;i1Lcd4_Set_Cursor@ligne stored from wreg
  4643  06B1  00F9               	movwf	i1Lcd4_Set_Cursor@ligne
  4644                           
  4645                           ;LCD_screen.c: 50: char lCmdMsb,lCmdLsb;
  4646                           ;LCD_screen.c: 51: lCmdMsb = 0x08 | (ligne <<2) | ( ((pixel_nb)& (0x30)) >> 4);
  4647  06B2  0874               	movf	i1Lcd4_Set_Cursor@pixel_nb,w
  4648  06B3  00F5               	movwf	??i1_Lcd4_Set_Cursor
  4649  06B4  3004               	movlw	4
  4650  06B5                     u168_25:	
  4651  06B5  1003               	clrc
  4652  06B6  0CF5               	rrf	??i1_Lcd4_Set_Cursor,f
  4653  06B7  3EFF               	addlw	-1
  4654  06B8  1D03               	skipz
  4655  06B9  2EB5               	goto	u168_25
  4656  06BA  3003               	movlw	3
  4657  06BB  0575               	andwf	??i1_Lcd4_Set_Cursor,w
  4658  06BC  00F6               	movwf	??i1_Lcd4_Set_Cursor+1
  4659  06BD  0879               	movf	i1Lcd4_Set_Cursor@ligne,w
  4660  06BE  00F7               	movwf	??i1_Lcd4_Set_Cursor+2
  4661  06BF  3001               	movlw	1
  4662  06C0                     u169_25:	
  4663  06C0  1003               	clrc
  4664  06C1  0DF7               	rlf	??i1_Lcd4_Set_Cursor+2,f
  4665  06C2  3EFF               	addlw	-1
  4666  06C3  1D03               	skipz
  4667  06C4  2EC0               	goto	u169_25
  4668  06C5  1003               	clrc
  4669  06C6  0D77               	rlf	??i1_Lcd4_Set_Cursor+2,w
  4670  06C7  0476               	iorwf	??i1_Lcd4_Set_Cursor+1,w
  4671  06C8  3808               	iorlw	8
  4672  06C9  00F8               	movwf	??i1_Lcd4_Set_Cursor+3
  4673  06CA  0878               	movf	??i1_Lcd4_Set_Cursor+3,w
  4674  06CB  00FA               	movwf	i1Lcd4_Set_Cursor@lCmdMsb
  4675                           
  4676                           ;LCD_screen.c: 52: lCmdLsb = pixel_nb & 0x0F;
  4677  06CC  0874               	movf	i1Lcd4_Set_Cursor@pixel_nb,w
  4678  06CD  390F               	andlw	15
  4679  06CE  00F5               	movwf	??i1_Lcd4_Set_Cursor
  4680  06CF  0875               	movf	??i1_Lcd4_Set_Cursor,w
  4681  06D0  00FB               	movwf	i1Lcd4_Set_Cursor@lCmdLsb
  4682                           
  4683                           ;LCD_screen.c: 53: Lcd4_Cmd(lCmdMsb);
  4684  06D1  087A               	movf	i1Lcd4_Set_Cursor@lCmdMsb,w
  4685  06D2  158A  27CE  118A   	fcall	i1_Lcd4_Cmd
  4686                           
  4687                           ;LCD_screen.c: 54: Lcd4_Cmd(lCmdLsb);
  4688  06D5  087B               	movf	i1Lcd4_Set_Cursor@lCmdLsb,w
  4689  06D6  158A  27CE         	fcall	i1_Lcd4_Cmd
  4690  06D8  0008               	return
  4691  06D9                     __end_ofi1_Lcd4_Set_Cursor:	
  4692                           
  4693                           	psect	text33
  4694  0FCE                     __ptext33:	
  4695 ;; *************** function i1_Lcd4_Cmd *****************
  4696 ;; Defined at:
  4697 ;;		line 33 in file "LCD_screen.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  a               1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  a               1    3[COMMON] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;		None               void
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0, pclath, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4711 ;;      Params:         0       0       0       0
  4712 ;;      Locals:         1       0       0       0
  4713 ;;      Temps:          2       0       0       0
  4714 ;;      Totals:         3       0       0       0
  4715 ;;Total ram usage:        3 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; Hardware stack levels required when called:    1
  4718 ;; This function calls:
  4719 ;;		i1_Lcd4_Port
  4720 ;; This function is called by:
  4721 ;;		i1_Lcd4_Set_Cursor
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           
  4726                           ;psect for function i1_Lcd4_Cmd
  4727  0FCE                     i1_Lcd4_Cmd:	
  4728                           
  4729                           ;incstack = 0
  4730 ;; hardware stack exceeded
  4731                           ; Regs used in i1_Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4732                           ;i1Lcd4_Cmd@a stored from wreg
  4733  0FCE  00F3               	movwf	i1Lcd4_Cmd@a
  4734                           
  4735                           ;LCD_screen.c: 35: RA2 = 0;
  4736  0FCF  1283               	bcf	3,5	;RP0=0, select bank0
  4737  0FD0  1303               	bcf	3,6	;RP1=0, select bank0
  4738  0FD1  1105               	bcf	5,2	;volatile
  4739                           
  4740                           ;LCD_screen.c: 36: Lcd4_Port(a);
  4741  0FD2  0873               	movf	i1Lcd4_Cmd@a,w
  4742  0FD3  158A  27E6  158A   	fcall	i1_Lcd4_Port
  4743                           
  4744                           ;LCD_screen.c: 37: RC0 = 1;
  4745  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  4746  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  4747  0FD8  1407               	bsf	7,0	;volatile
  4748                           
  4749                           ;LCD_screen.c: 38: _delay((unsigned long)((4)*(8000000UL/4000.0)));
  4750  0FD9  300B               	movlw	11
  4751  0FDA  00F2               	movwf	??i1_Lcd4_Cmd+1
  4752  0FDB  3062               	movlw	98
  4753  0FDC  00F1               	movwf	??i1_Lcd4_Cmd
  4754  0FDD                     u277_27:	
  4755  0FDD  0BF1               	decfsz	??i1_Lcd4_Cmd,f
  4756  0FDE  2FDD               	goto	u277_27
  4757  0FDF  0BF2               	decfsz	??i1_Lcd4_Cmd+1,f
  4758  0FE0  2FDD               	goto	u277_27
  4759  0FE1  0000               	nop
  4760                           
  4761                           ;LCD_screen.c: 39: RC0 = 0;
  4762  0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  4763  0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  4764  0FE4  1007               	bcf	7,0	;volatile
  4765  0FE5  0008               	return
  4766  0FE6                     __end_ofi1_Lcd4_Cmd:	
  4767                           
  4768                           	psect	text34
  4769  0FE6                     __ptext34:	
  4770 ;; *************** function i1_Lcd4_Port *****************
  4771 ;; Defined at:
  4772 ;;		line 11 in file "LCD_screen.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  a               1    wreg     unsigned char 
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;  a               1    0[COMMON] unsigned char 
  4777 ;; Return value:  Size  Location     Type
  4778 ;;		None               void
  4779 ;; Registers used:
  4780 ;;		wreg
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4786 ;;      Params:         0       0       0       0
  4787 ;;      Locals:         1       0       0       0
  4788 ;;      Temps:          0       0       0       0
  4789 ;;      Totals:         1       0       0       0
  4790 ;;Total ram usage:        1 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; This function calls:
  4793 ;;		Nothing
  4794 ;; This function is called by:
  4795 ;;		i1_Lcd4_Cmd
  4796 ;;		i1_Lcd4_Write_Char
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function i1_Lcd4_Port
  4802  0FE6                     i1_Lcd4_Port:	
  4803                           
  4804                           ;incstack = 0
  4805 ;; hardware stack exceeded
  4806                           ; Regs used in i1_Lcd4_Port: [wreg]
  4807                           ;i1Lcd4_Port@a stored from wreg
  4808  0FE6  00F0               	movwf	i1Lcd4_Port@a
  4809                           
  4810                           ;LCD_screen.c: 13: if(a & 1)
  4811  0FE7  1C70               	btfss	i1Lcd4_Port@a,0
  4812  0FE8  2FED               	goto	i1l261
  4813                           
  4814                           ;LCD_screen.c: 14: RC3 = 1;
  4815  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4816  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4817  0FEB  1587               	bsf	7,3	;volatile
  4818  0FEC  2FF0               	goto	i1l262
  4819  0FED                     i1l261:	
  4820                           
  4821                           ;LCD_screen.c: 15: else
  4822                           ;LCD_screen.c: 16: RC3 = 0;
  4823  0FED  1283               	bcf	3,5	;RP0=0, select bank0
  4824  0FEE  1303               	bcf	3,6	;RP1=0, select bank0
  4825  0FEF  1187               	bcf	7,3	;volatile
  4826  0FF0                     i1l262:	
  4827                           
  4828                           ;LCD_screen.c: 18: if(a & 2)
  4829  0FF0  1CF0               	btfss	i1Lcd4_Port@a,1
  4830  0FF1  2FF4               	goto	i1l263
  4831                           
  4832                           ;LCD_screen.c: 19: RB4 = 1;
  4833  0FF2  1606               	bsf	6,4	;volatile
  4834  0FF3  2FF5               	goto	i1l264
  4835  0FF4                     i1l263:	
  4836                           
  4837                           ;LCD_screen.c: 20: else
  4838                           ;LCD_screen.c: 21: RB4 = 0;
  4839  0FF4  1206               	bcf	6,4	;volatile
  4840  0FF5                     i1l264:	
  4841                           
  4842                           ;LCD_screen.c: 23: if(a & 4)
  4843  0FF5  1D70               	btfss	i1Lcd4_Port@a,2
  4844  0FF6  2FF9               	goto	i1l265
  4845                           
  4846                           ;LCD_screen.c: 24: RC6 = 1;
  4847  0FF7  1707               	bsf	7,6	;volatile
  4848  0FF8  2FFA               	goto	i1l266
  4849  0FF9                     i1l265:	
  4850                           
  4851                           ;LCD_screen.c: 25: else
  4852                           ;LCD_screen.c: 26: RC6 = 0;
  4853  0FF9  1307               	bcf	7,6	;volatile
  4854  0FFA                     i1l266:	
  4855                           
  4856                           ;LCD_screen.c: 28: if(a & 8)
  4857  0FFA  1DF0               	btfss	i1Lcd4_Port@a,3
  4858  0FFB  2FFE               	goto	i1l267
  4859                           
  4860                           ;LCD_screen.c: 29: RB6 = 1;
  4861  0FFC  1706               	bsf	6,6	;volatile
  4862  0FFD  0008               	return
  4863  0FFE                     i1l267:	
  4864                           
  4865                           ;LCD_screen.c: 30: else
  4866                           ;LCD_screen.c: 31: RB6 = 0;
  4867  0FFE  1306               	bcf	6,6	;volatile
  4868  0FFF  0008               	return
  4869  1000                     __end_ofi1_Lcd4_Port:	
  4870                           
  4871                           	psect	text35
  4872  0030                     __ptext35:	
  4873 ;; *************** function _time_shapping *****************
  4874 ;; Defined at:
  4875 ;;		line 24 in file "misc.c"
  4876 ;; Parameters:    Size  Location     Type
  4877 ;;  buffer          1    wreg     PTR unsigned char 
  4878 ;;		 -> game_phase@time_str(9), 
  4879 ;;  time            2    4[BANK0 ] int 
  4880 ;; Auto vars:     Size  Location     Type
  4881 ;;  buffer          1   18[BANK0 ] PTR unsigned char 
  4882 ;;		 -> game_phase@time_str(9), 
  4883 ;;  hours_buf       2   16[BANK0 ] unsigned char [2]
  4884 ;;  minutes_buf     2   14[BANK0 ] unsigned char [2]
  4885 ;;  secondes_buf    2   12[BANK0 ] unsigned char [2]
  4886 ;;  hours           2   10[BANK0 ] int 
  4887 ;;  minutes         2    8[BANK0 ] int 
  4888 ;;  secondes        2    6[BANK0 ] int 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;		None               void
  4891 ;; Registers used:
  4892 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 0/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4898 ;;      Params:         0       2       0       0
  4899 ;;      Locals:         0      13       0       0
  4900 ;;      Temps:          1       0       0       0
  4901 ;;      Totals:         1      15       0       0
  4902 ;;Total ram usage:       16 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    2
  4905 ;; This function calls:
  4906 ;;		___awdiv
  4907 ;;		i1___awmod
  4908 ;;		i1_utoa
  4909 ;; This function is called by:
  4910 ;;		_game_phase
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           
  4915                           ;psect for function _time_shapping
  4916  0030                     _time_shapping:	
  4917                           
  4918                           ;incstack = 0
  4919 ;; hardware stack exceeded
  4920                           ; Regs used in _time_shapping: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4921                           ;time_shapping@buffer stored from wreg
  4922  0030  1283               	bcf	3,5	;RP0=0, select bank0
  4923  0031  1303               	bcf	3,6	;RP1=0, select bank0
  4924  0032  00B2               	movwf	time_shapping@buffer
  4925                           
  4926                           ;misc.c: 25: int secondes = time % 60;
  4927  0033  303C               	movlw	60
  4928  0034  00F0               	movwf	i1___awmod@divisor
  4929  0035  3000               	movlw	0
  4930  0036  00F1               	movwf	i1___awmod@divisor+1
  4931  0037  0825               	movf	time_shapping@time+1,w
  4932  0038  01F3               	clrf	i1___awmod@dividend+1
  4933  0039  07F3               	addwf	i1___awmod@dividend+1,f
  4934  003A  0824               	movf	time_shapping@time,w
  4935  003B  01F2               	clrf	i1___awmod@dividend
  4936  003C  07F2               	addwf	i1___awmod@dividend,f
  4937  003D  118A  2431  118A   	fcall	i1___awmod
  4938  0040  0871               	movf	?i1___awmod+1,w
  4939  0041  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0042  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0043  01A7               	clrf	time_shapping@secondes+1
  4942  0044  07A7               	addwf	time_shapping@secondes+1,f
  4943  0045  0870               	movf	?i1___awmod,w
  4944  0046  01A6               	clrf	time_shapping@secondes
  4945  0047  07A6               	addwf	time_shapping@secondes,f
  4946                           
  4947                           ;misc.c: 26: int minutes = (time%3600)/60;
  4948  0048  303C               	movlw	60
  4949  0049  00F7               	movwf	___awdiv@divisor
  4950  004A  3000               	movlw	0
  4951  004B  00F8               	movwf	___awdiv@divisor+1
  4952  004C  0825               	movf	time_shapping@time+1,w
  4953  004D  01F3               	clrf	i1___awmod@dividend+1
  4954  004E  07F3               	addwf	i1___awmod@dividend+1,f
  4955  004F  0824               	movf	time_shapping@time,w
  4956  0050  01F2               	clrf	i1___awmod@dividend
  4957  0051  07F2               	addwf	i1___awmod@dividend,f
  4958  0052  3010               	movlw	16
  4959  0053  00F0               	movwf	i1___awmod@divisor
  4960  0054  300E               	movlw	14
  4961  0055  00F1               	movwf	i1___awmod@divisor+1
  4962  0056  118A  2431  118A   	fcall	i1___awmod
  4963  0059  0871               	movf	?i1___awmod+1,w
  4964  005A  01FA               	clrf	___awdiv@dividend+1
  4965  005B  07FA               	addwf	___awdiv@dividend+1,f
  4966  005C  0870               	movf	?i1___awmod,w
  4967  005D  01F9               	clrf	___awdiv@dividend
  4968  005E  07F9               	addwf	___awdiv@dividend,f
  4969  005F  118A  22E6  118A   	fcall	___awdiv
  4970  0062  0878               	movf	?___awdiv+1,w
  4971  0063  1283               	bcf	3,5	;RP0=0, select bank0
  4972  0064  1303               	bcf	3,6	;RP1=0, select bank0
  4973  0065  01A9               	clrf	time_shapping@minutes+1
  4974  0066  07A9               	addwf	time_shapping@minutes+1,f
  4975  0067  0877               	movf	?___awdiv,w
  4976  0068  01A8               	clrf	time_shapping@minutes
  4977  0069  07A8               	addwf	time_shapping@minutes,f
  4978                           
  4979                           ;misc.c: 27: int hours = time / 3600;
  4980  006A  3010               	movlw	16
  4981  006B  00F7               	movwf	___awdiv@divisor
  4982  006C  300E               	movlw	14
  4983  006D  00F8               	movwf	___awdiv@divisor+1
  4984  006E  0825               	movf	time_shapping@time+1,w
  4985  006F  01FA               	clrf	___awdiv@dividend+1
  4986  0070  07FA               	addwf	___awdiv@dividend+1,f
  4987  0071  0824               	movf	time_shapping@time,w
  4988  0072  01F9               	clrf	___awdiv@dividend
  4989  0073  07F9               	addwf	___awdiv@dividend,f
  4990  0074  118A  22E6  118A   	fcall	___awdiv
  4991  0077  0878               	movf	?___awdiv+1,w
  4992  0078  1283               	bcf	3,5	;RP0=0, select bank0
  4993  0079  1303               	bcf	3,6	;RP1=0, select bank0
  4994  007A  01AB               	clrf	time_shapping@hours+1
  4995  007B  07AB               	addwf	time_shapping@hours+1,f
  4996  007C  0877               	movf	?___awdiv,w
  4997  007D  01AA               	clrf	time_shapping@hours
  4998  007E  07AA               	addwf	time_shapping@hours,f
  4999                           
  5000                           ;misc.c: 29: char secondes_buf [2];
  5001                           ;misc.c: 30: utoa (secondes_buf, secondes, 10);
  5002  007F  0827               	movf	time_shapping@secondes+1,w
  5003  0080  01F9               	clrf	i1utoa@val+1
  5004  0081  07F9               	addwf	i1utoa@val+1,f
  5005  0082  0826               	movf	time_shapping@secondes,w
  5006  0083  01F8               	clrf	i1utoa@val
  5007  0084  07F8               	addwf	i1utoa@val,f
  5008  0085  300A               	movlw	10
  5009  0086  00FA               	movwf	i1utoa@base
  5010  0087  3000               	movlw	0
  5011  0088  00FB               	movwf	i1utoa@base+1
  5012  0089  302C               	movlw	time_shapping@secondes_buf& (0+255)
  5013  008A  118A  2211  118A   	fcall	i1_utoa
  5014                           
  5015                           ;misc.c: 31: if (secondes_buf[1] == '\0')
  5016  008D  1283               	bcf	3,5	;RP0=0, select bank0
  5017  008E  1303               	bcf	3,6	;RP1=0, select bank0
  5018  008F  08AD               	movf	time_shapping@secondes_buf+1,f
  5019  0090  1D03               	skipz
  5020  0091  289A               	goto	i1l1970
  5021                           
  5022                           ;misc.c: 32: {
  5023                           ;misc.c: 33: secondes_buf [1] = secondes_buf [0];
  5024  0092  082C               	movf	time_shapping@secondes_buf,w
  5025  0093  00FD               	movwf	??_time_shapping
  5026  0094  087D               	movf	??_time_shapping,w
  5027  0095  00AD               	movwf	time_shapping@secondes_buf+1
  5028                           
  5029                           ;misc.c: 34: secondes_buf [0] = '0';
  5030  0096  3030               	movlw	48
  5031  0097  00FD               	movwf	??_time_shapping
  5032  0098  087D               	movf	??_time_shapping,w
  5033  0099  00AC               	movwf	time_shapping@secondes_buf
  5034  009A                     i1l1970:	
  5035                           
  5036                           ;misc.c: 35: }
  5037                           ;misc.c: 37: char minutes_buf [2];
  5038                           ;misc.c: 38: utoa (minutes_buf, minutes, 10);
  5039  009A  0829               	movf	time_shapping@minutes+1,w
  5040  009B  01F9               	clrf	i1utoa@val+1
  5041  009C  07F9               	addwf	i1utoa@val+1,f
  5042  009D  0828               	movf	time_shapping@minutes,w
  5043  009E  01F8               	clrf	i1utoa@val
  5044  009F  07F8               	addwf	i1utoa@val,f
  5045  00A0  300A               	movlw	10
  5046  00A1  00FA               	movwf	i1utoa@base
  5047  00A2  3000               	movlw	0
  5048  00A3  00FB               	movwf	i1utoa@base+1
  5049  00A4  302E               	movlw	time_shapping@minutes_buf& (0+255)
  5050  00A5  118A  2211  118A   	fcall	i1_utoa
  5051                           
  5052                           ;misc.c: 39: if (minutes_buf[1] == '\0')
  5053  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  5054  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  5055  00AA  08AF               	movf	time_shapping@minutes_buf+1,f
  5056  00AB  1D03               	skipz
  5057  00AC  28B5               	goto	i1l1976
  5058                           
  5059                           ;misc.c: 40: {
  5060                           ;misc.c: 41: minutes_buf [1] = minutes_buf [0];
  5061  00AD  082E               	movf	time_shapping@minutes_buf,w
  5062  00AE  00FD               	movwf	??_time_shapping
  5063  00AF  087D               	movf	??_time_shapping,w
  5064  00B0  00AF               	movwf	time_shapping@minutes_buf+1
  5065                           
  5066                           ;misc.c: 42: minutes_buf [0] = '0';
  5067  00B1  3030               	movlw	48
  5068  00B2  00FD               	movwf	??_time_shapping
  5069  00B3  087D               	movf	??_time_shapping,w
  5070  00B4  00AE               	movwf	time_shapping@minutes_buf
  5071  00B5                     i1l1976:	
  5072                           
  5073                           ;misc.c: 43: }
  5074                           ;misc.c: 45: char hours_buf [2];
  5075                           ;misc.c: 46: utoa (hours_buf, hours, 10);
  5076  00B5  082B               	movf	time_shapping@hours+1,w
  5077  00B6  01F9               	clrf	i1utoa@val+1
  5078  00B7  07F9               	addwf	i1utoa@val+1,f
  5079  00B8  082A               	movf	time_shapping@hours,w
  5080  00B9  01F8               	clrf	i1utoa@val
  5081  00BA  07F8               	addwf	i1utoa@val,f
  5082  00BB  300A               	movlw	10
  5083  00BC  00FA               	movwf	i1utoa@base
  5084  00BD  3000               	movlw	0
  5085  00BE  00FB               	movwf	i1utoa@base+1
  5086  00BF  3030               	movlw	time_shapping@hours_buf& (0+255)
  5087  00C0  118A  2211  118A   	fcall	i1_utoa
  5088                           
  5089                           ;misc.c: 47: if (hours_buf[1] == '\0')
  5090  00C3  1283               	bcf	3,5	;RP0=0, select bank0
  5091  00C4  1303               	bcf	3,6	;RP1=0, select bank0
  5092  00C5  08B1               	movf	time_shapping@hours_buf+1,f
  5093  00C6  1D03               	skipz
  5094  00C7  28D0               	goto	i1l1982
  5095                           
  5096                           ;misc.c: 48: {
  5097                           ;misc.c: 49: hours_buf [1] = hours_buf [0];
  5098  00C8  0830               	movf	time_shapping@hours_buf,w
  5099  00C9  00FD               	movwf	??_time_shapping
  5100  00CA  087D               	movf	??_time_shapping,w
  5101  00CB  00B1               	movwf	time_shapping@hours_buf+1
  5102                           
  5103                           ;misc.c: 50: hours_buf [0] = '0';
  5104  00CC  3030               	movlw	48
  5105  00CD  00FD               	movwf	??_time_shapping
  5106  00CE  087D               	movf	??_time_shapping,w
  5107  00CF  00B0               	movwf	time_shapping@hours_buf
  5108  00D0                     i1l1982:	
  5109                           
  5110                           ;misc.c: 51: }
  5111                           ;misc.c: 53: buffer [0] = hours_buf [0];
  5112  00D0  0830               	movf	time_shapping@hours_buf,w
  5113  00D1  00FD               	movwf	??_time_shapping
  5114  00D2  0832               	movf	time_shapping@buffer,w
  5115  00D3  0084               	movwf	4
  5116  00D4  087D               	movf	??_time_shapping,w
  5117  00D5  1383               	bcf	3,7	;select IRP bank0
  5118  00D6  0080               	movwf	0
  5119                           
  5120                           ;misc.c: 54: buffer [1] = hours_buf [1];
  5121  00D7  0831               	movf	time_shapping@hours_buf+1,w
  5122  00D8  00FD               	movwf	??_time_shapping
  5123  00D9  0A32               	incf	time_shapping@buffer,w
  5124  00DA  0084               	movwf	4
  5125  00DB  087D               	movf	??_time_shapping,w
  5126  00DC  0080               	movwf	0
  5127                           
  5128                           ;misc.c: 55: buffer [2] = ':';
  5129  00DD  303A               	movlw	58
  5130  00DE  00FD               	movwf	??_time_shapping
  5131  00DF  0832               	movf	time_shapping@buffer,w
  5132  00E0  3E02               	addlw	2
  5133  00E1  0084               	movwf	4
  5134  00E2  087D               	movf	??_time_shapping,w
  5135  00E3  0080               	movwf	0
  5136                           
  5137                           ;misc.c: 56: buffer [3] = minutes_buf [0];
  5138  00E4  082E               	movf	time_shapping@minutes_buf,w
  5139  00E5  00FD               	movwf	??_time_shapping
  5140  00E6  0832               	movf	time_shapping@buffer,w
  5141  00E7  3E03               	addlw	3
  5142  00E8  0084               	movwf	4
  5143  00E9  087D               	movf	??_time_shapping,w
  5144  00EA  0080               	movwf	0
  5145                           
  5146                           ;misc.c: 57: buffer [4] = minutes_buf [1];
  5147  00EB  082F               	movf	time_shapping@minutes_buf+1,w
  5148  00EC  00FD               	movwf	??_time_shapping
  5149  00ED  0832               	movf	time_shapping@buffer,w
  5150  00EE  3E04               	addlw	4
  5151  00EF  0084               	movwf	4
  5152  00F0  087D               	movf	??_time_shapping,w
  5153  00F1  0080               	movwf	0
  5154                           
  5155                           ;misc.c: 58: buffer [5] = ':';
  5156  00F2  303A               	movlw	58
  5157  00F3  00FD               	movwf	??_time_shapping
  5158  00F4  0832               	movf	time_shapping@buffer,w
  5159  00F5  3E05               	addlw	5
  5160  00F6  0084               	movwf	4
  5161  00F7  087D               	movf	??_time_shapping,w
  5162  00F8  0080               	movwf	0
  5163                           
  5164                           ;misc.c: 59: buffer [6] = secondes_buf [0];
  5165  00F9  082C               	movf	time_shapping@secondes_buf,w
  5166  00FA  00FD               	movwf	??_time_shapping
  5167  00FB  0832               	movf	time_shapping@buffer,w
  5168  00FC  3E06               	addlw	6
  5169  00FD  0084               	movwf	4
  5170  00FE  087D               	movf	??_time_shapping,w
  5171  00FF  0080               	movwf	0
  5172                           
  5173                           ;misc.c: 60: buffer [7] = secondes_buf [1];
  5174  0100  082D               	movf	time_shapping@secondes_buf+1,w
  5175  0101  00FD               	movwf	??_time_shapping
  5176  0102  0832               	movf	time_shapping@buffer,w
  5177  0103  3E07               	addlw	7
  5178  0104  0084               	movwf	4
  5179  0105  087D               	movf	??_time_shapping,w
  5180  0106  0080               	movwf	0
  5181                           
  5182                           ;misc.c: 61: buffer [8] = '\0';
  5183  0107  0832               	movf	time_shapping@buffer,w
  5184  0108  3E08               	addlw	8
  5185  0109  0084               	movwf	4
  5186  010A  0180               	clrf	0
  5187  010B  0008               	return
  5188  010C                     __end_of_time_shapping:	
  5189                           
  5190                           	psect	text36
  5191  0211                     __ptext36:	
  5192 ;; *************** function i1_utoa *****************
  5193 ;; Defined at:
  5194 ;;		line 17 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\itoa.c"
  5195 ;; Parameters:    Size  Location     Type
  5196 ;;  buf             1    wreg     PTR unsigned char 
  5197 ;;		 -> time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapping@secondes_buf(2), display_player_nbr@stri
      +ng_player_number(2), 
  5198 ;;  val             2    8[COMMON] unsigned int 
  5199 ;;  base            2   10[COMMON] int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  buf             1    3[BANK0 ] PTR unsigned char 
  5202 ;;		 -> time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapping@secondes_buf(2), display_player_nbr@stri
      +ng_player_number(2), 
  5203 ;;  utoa            2    0[BANK0 ] unsigned int 
  5204 ;;  utoa            1    2[BANK0 ] unsigned char 
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      PTR unsigned char 
  5207 ;; Registers used:
  5208 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5214 ;;      Params:         4       0       0       0
  5215 ;;      Locals:         0       4       0       0
  5216 ;;      Temps:          1       0       0       0
  5217 ;;      Totals:         5       4       0       0
  5218 ;;Total ram usage:        9 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		i1___lwdiv
  5223 ;;		i1___lwmod
  5224 ;; This function is called by:
  5225 ;;		_time_shapping
  5226 ;;		i1_display_player_nbr
  5227 ;; This function uses a non-reentrant model
  5228 ;;
  5229                           
  5230                           
  5231                           ;psect for function i1_utoa
  5232  0211                     i1_utoa:	
  5233                           
  5234                           ;incstack = 0
  5235 ;; hardware stack exceeded
  5236                           ; Regs used in i1_utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5237                           ;i1utoa@buf stored from wreg
  5238  0211  1283               	bcf	3,5	;RP0=0, select bank0
  5239  0212  1303               	bcf	3,6	;RP1=0, select bank0
  5240  0213  00A3               	movwf	i1utoa@buf
  5241  0214  0879               	movf	i1utoa@val+1,w
  5242  0215  01A1               	clrf	i1utoa@v+1
  5243  0216  07A1               	addwf	i1utoa@v+1,f
  5244  0217  0878               	movf	i1utoa@val,w
  5245  0218  01A0               	clrf	i1utoa@v
  5246  0219  07A0               	addwf	i1utoa@v,f
  5247  021A                     i1l1912:	
  5248  021A  087B               	movf	i1utoa@base+1,w
  5249  021B  01F1               	clrf	i1___lwdiv@divisor+1
  5250  021C  07F1               	addwf	i1___lwdiv@divisor+1,f
  5251  021D  087A               	movf	i1utoa@base,w
  5252  021E  01F0               	clrf	i1___lwdiv@divisor
  5253  021F  07F0               	addwf	i1___lwdiv@divisor,f
  5254  0220  0821               	movf	i1utoa@v+1,w
  5255  0221  01F3               	clrf	i1___lwdiv@dividend+1
  5256  0222  07F3               	addwf	i1___lwdiv@dividend+1,f
  5257  0223  0820               	movf	i1utoa@v,w
  5258  0224  01F2               	clrf	i1___lwdiv@dividend
  5259  0225  07F2               	addwf	i1___lwdiv@dividend,f
  5260  0226  118A  24BE  118A   	fcall	i1___lwdiv
  5261  0229  0871               	movf	?i1___lwdiv+1,w
  5262  022A  1283               	bcf	3,5	;RP0=0, select bank0
  5263  022B  1303               	bcf	3,6	;RP1=0, select bank0
  5264  022C  01A1               	clrf	i1utoa@v+1
  5265  022D  07A1               	addwf	i1utoa@v+1,f
  5266  022E  0870               	movf	?i1___lwdiv,w
  5267  022F  01A0               	clrf	i1utoa@v
  5268  0230  07A0               	addwf	i1utoa@v,f
  5269  0231  3001               	movlw	1
  5270  0232  00FC               	movwf	??i1_utoa
  5271  0233  087C               	movf	??i1_utoa,w
  5272  0234  07A3               	addwf	i1utoa@buf,f
  5273  0235  0821               	movf	i1utoa@v+1,w
  5274  0236  0420               	iorwf	i1utoa@v,w
  5275  0237  1D03               	skipz
  5276  0238  2A1A               	goto	i1l1912
  5277  0239  0823               	movf	i1utoa@buf,w
  5278  023A  0084               	movwf	4
  5279  023B  1383               	bcf	3,7	;select IRP bank0
  5280  023C  0180               	clrf	0
  5281  023D  3001               	movlw	1
  5282  023E  02A3               	subwf	i1utoa@buf,f
  5283  023F                     i1l1922:	
  5284  023F  087B               	movf	i1utoa@base+1,w
  5285  0240  01F1               	clrf	i1___lwmod@divisor+1
  5286  0241  07F1               	addwf	i1___lwmod@divisor+1,f
  5287  0242  087A               	movf	i1utoa@base,w
  5288  0243  01F0               	clrf	i1___lwmod@divisor
  5289  0244  07F0               	addwf	i1___lwmod@divisor,f
  5290  0245  0879               	movf	i1utoa@val+1,w
  5291  0246  01F3               	clrf	i1___lwmod@dividend+1
  5292  0247  07F3               	addwf	i1___lwmod@dividend+1,f
  5293  0248  0878               	movf	i1utoa@val,w
  5294  0249  01F2               	clrf	i1___lwmod@dividend
  5295  024A  07F2               	addwf	i1___lwmod@dividend,f
  5296  024B  118A  2532  118A   	fcall	i1___lwmod
  5297  024E  0870               	movf	?i1___lwmod,w
  5298  024F  00FC               	movwf	??i1_utoa
  5299  0250  087C               	movf	??i1_utoa,w
  5300  0251  1283               	bcf	3,5	;RP0=0, select bank0
  5301  0252  1303               	bcf	3,6	;RP1=0, select bank0
  5302  0253  00A2               	movwf	i1utoa@c
  5303  0254  087B               	movf	i1utoa@base+1,w
  5304  0255  01F1               	clrf	i1___lwdiv@divisor+1
  5305  0256  07F1               	addwf	i1___lwdiv@divisor+1,f
  5306  0257  087A               	movf	i1utoa@base,w
  5307  0258  01F0               	clrf	i1___lwdiv@divisor
  5308  0259  07F0               	addwf	i1___lwdiv@divisor,f
  5309  025A  0879               	movf	i1utoa@val+1,w
  5310  025B  01F3               	clrf	i1___lwdiv@dividend+1
  5311  025C  07F3               	addwf	i1___lwdiv@dividend+1,f
  5312  025D  0878               	movf	i1utoa@val,w
  5313  025E  01F2               	clrf	i1___lwdiv@dividend
  5314  025F  07F2               	addwf	i1___lwdiv@dividend,f
  5315  0260  118A  24BE  118A   	fcall	i1___lwdiv
  5316  0263  0871               	movf	?i1___lwdiv+1,w
  5317  0264  01F9               	clrf	i1utoa@val+1
  5318  0265  07F9               	addwf	i1utoa@val+1,f
  5319  0266  0870               	movf	?i1___lwdiv,w
  5320  0267  01F8               	clrf	i1utoa@val
  5321  0268  07F8               	addwf	i1utoa@val,f
  5322  0269  300A               	movlw	10
  5323  026A  1283               	bcf	3,5	;RP0=0, select bank0
  5324  026B  1303               	bcf	3,6	;RP1=0, select bank0
  5325  026C  0222               	subwf	i1utoa@c,w
  5326  026D  1C03               	skipc
  5327  026E  2A73               	goto	i1l672
  5328  026F  3007               	movlw	7
  5329  0270  00FC               	movwf	??i1_utoa
  5330  0271  087C               	movf	??i1_utoa,w
  5331  0272  07A2               	addwf	i1utoa@c,f
  5332  0273                     i1l672:	
  5333  0273  3030               	movlw	48
  5334  0274  00FC               	movwf	??i1_utoa
  5335  0275  087C               	movf	??i1_utoa,w
  5336  0276  07A2               	addwf	i1utoa@c,f
  5337  0277  0822               	movf	i1utoa@c,w
  5338  0278  00FC               	movwf	??i1_utoa
  5339  0279  0823               	movf	i1utoa@buf,w
  5340  027A  0084               	movwf	4
  5341  027B  087C               	movf	??i1_utoa,w
  5342  027C  1383               	bcf	3,7	;select IRP bank0
  5343  027D  0080               	movwf	0
  5344  027E  3001               	movlw	1
  5345  027F  02A3               	subwf	i1utoa@buf,f
  5346  0280  0879               	movf	i1utoa@val+1,w
  5347  0281  0478               	iorwf	i1utoa@val,w
  5348  0282  1D03               	skipz
  5349  0283  2A3F               	goto	i1l1922
  5350                           
  5351                           ;	Return value of i1_utoa is never used
  5352  0284  3001               	movlw	1
  5353  0285  00FC               	movwf	??i1_utoa
  5354  0286  087C               	movf	??i1_utoa,w
  5355  0287  07A3               	addwf	i1utoa@buf,f
  5356  0288  0008               	return
  5357  0289                     __end_ofi1_utoa:	
  5358                           
  5359                           	psect	text37
  5360  0532                     __ptext37:	
  5361 ;; *************** function i1___lwmod *****************
  5362 ;; Defined at:
  5363 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\lwmod.c"
  5364 ;; Parameters:    Size  Location     Type
  5365 ;;  divisor         2    0[COMMON] unsigned int 
  5366 ;;  dividend        2    2[COMMON] unsigned int 
  5367 ;; Auto vars:     Size  Location     Type
  5368 ;;  __lwmod         1    5[COMMON] unsigned char 
  5369 ;; Return value:  Size  Location     Type
  5370 ;;                  2    0[COMMON] unsigned int 
  5371 ;; Registers used:
  5372 ;;		wreg, status,2, status,0
  5373 ;; Tracked objects:
  5374 ;;		On entry : 0/0
  5375 ;;		On exit  : 0/0
  5376 ;;		Unchanged: 0/0
  5377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5378 ;;      Params:         4       0       0       0
  5379 ;;      Locals:         1       0       0       0
  5380 ;;      Temps:          1       0       0       0
  5381 ;;      Totals:         6       0       0       0
  5382 ;;Total ram usage:        6 bytes
  5383 ;; Hardware stack levels used:    1
  5384 ;; This function calls:
  5385 ;;		Nothing
  5386 ;; This function is called by:
  5387 ;;		i1_utoa
  5388 ;; This function uses a non-reentrant model
  5389 ;;
  5390                           
  5391                           
  5392                           ;psect for function i1___lwmod
  5393  0532                     i1___lwmod:	
  5394                           
  5395                           ;incstack = 0
  5396 ;; hardware stack exceeded
  5397                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  5398  0532  0871               	movf	i1___lwmod@divisor+1,w
  5399  0533  0470               	iorwf	i1___lwmod@divisor,w
  5400  0534  1903               	skipnz
  5401  0535  2D5F               	goto	i1l1744
  5402  0536  01F5               	clrf	i1___lwmod@counter
  5403  0537  0AF5               	incf	i1___lwmod@counter,f
  5404  0538                     i1l1734:	
  5405  0538  1BF1               	btfsc	i1___lwmod@divisor+1,7
  5406  0539  2D46               	goto	i1l1736
  5407  053A  3001               	movlw	1
  5408  053B                     u144_25:	
  5409  053B  1003               	clrc
  5410  053C  0DF0               	rlf	i1___lwmod@divisor,f
  5411  053D  0DF1               	rlf	i1___lwmod@divisor+1,f
  5412  053E  3EFF               	addlw	-1
  5413  053F  1D03               	skipz
  5414  0540  2D3B               	goto	u144_25
  5415  0541  3001               	movlw	1
  5416  0542  00F4               	movwf	??i1___lwmod
  5417  0543  0874               	movf	??i1___lwmod,w
  5418  0544  07F5               	addwf	i1___lwmod@counter,f
  5419  0545  2D38               	goto	i1l1734
  5420  0546                     i1l1736:	
  5421  0546  0871               	movf	i1___lwmod@divisor+1,w
  5422  0547  0273               	subwf	i1___lwmod@dividend+1,w
  5423  0548  1D03               	skipz
  5424  0549  2D4C               	goto	u146_25
  5425  054A  0870               	movf	i1___lwmod@divisor,w
  5426  054B  0272               	subwf	i1___lwmod@dividend,w
  5427  054C                     u146_25:	
  5428  054C  1C03               	skipc
  5429  054D  2D54               	goto	i1l1740
  5430  054E  0870               	movf	i1___lwmod@divisor,w
  5431  054F  02F2               	subwf	i1___lwmod@dividend,f
  5432  0550  0871               	movf	i1___lwmod@divisor+1,w
  5433  0551  1C03               	skipc
  5434  0552  03F3               	decf	i1___lwmod@dividend+1,f
  5435  0553  02F3               	subwf	i1___lwmod@dividend+1,f
  5436  0554                     i1l1740:	
  5437  0554  3001               	movlw	1
  5438  0555                     u147_25:	
  5439  0555  1003               	clrc
  5440  0556  0CF1               	rrf	i1___lwmod@divisor+1,f
  5441  0557  0CF0               	rrf	i1___lwmod@divisor,f
  5442  0558  3EFF               	addlw	-1
  5443  0559  1D03               	skipz
  5444  055A  2D55               	goto	u147_25
  5445  055B  3001               	movlw	1
  5446  055C  02F5               	subwf	i1___lwmod@counter,f
  5447  055D  1D03               	btfss	3,2
  5448  055E  2D46               	goto	i1l1736
  5449  055F                     i1l1744:	
  5450  055F  0873               	movf	i1___lwmod@dividend+1,w
  5451  0560  01F1               	clrf	?i1___lwmod+1
  5452  0561  07F1               	addwf	?i1___lwmod+1,f
  5453  0562  0872               	movf	i1___lwmod@dividend,w
  5454  0563  01F0               	clrf	?i1___lwmod
  5455  0564  07F0               	addwf	?i1___lwmod,f
  5456  0565  0008               	return
  5457  0566                     __end_ofi1___lwmod:	
  5458                           
  5459                           	psect	text38
  5460  04BE                     __ptext38:	
  5461 ;; *************** function i1___lwdiv *****************
  5462 ;; Defined at:
  5463 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  divisor         2    0[COMMON] unsigned int 
  5466 ;;  dividend        2    2[COMMON] unsigned int 
  5467 ;; Auto vars:     Size  Location     Type
  5468 ;;  __lwdiv         2    5[COMMON] unsigned int 
  5469 ;;  __lwdiv         1    7[COMMON] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  2    0[COMMON] unsigned int 
  5472 ;; Registers used:
  5473 ;;		wreg, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5479 ;;      Params:         4       0       0       0
  5480 ;;      Locals:         3       0       0       0
  5481 ;;      Temps:          1       0       0       0
  5482 ;;      Totals:         8       0       0       0
  5483 ;;Total ram usage:        8 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; This function calls:
  5486 ;;		Nothing
  5487 ;; This function is called by:
  5488 ;;		i1_utoa
  5489 ;; This function uses a non-reentrant model
  5490 ;;
  5491                           
  5492                           
  5493                           ;psect for function i1___lwdiv
  5494  04BE                     i1___lwdiv:	
  5495                           
  5496                           ;incstack = 0
  5497 ;; hardware stack exceeded
  5498                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  5499  04BE  01F5               	clrf	i1___lwdiv@quotient
  5500  04BF  01F6               	clrf	i1___lwdiv@quotient+1
  5501  04C0  0871               	movf	i1___lwdiv@divisor+1,w
  5502  04C1  0470               	iorwf	i1___lwdiv@divisor,w
  5503  04C2  1903               	skipnz
  5504  04C3  2CF5               	goto	i1l1722
  5505  04C4  01F7               	clrf	i1___lwdiv@counter
  5506  04C5  0AF7               	incf	i1___lwdiv@counter,f
  5507  04C6                     i1l1710:	
  5508  04C6  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  5509  04C7  2CD4               	goto	i1l1712
  5510  04C8  3001               	movlw	1
  5511  04C9                     u137_25:	
  5512  04C9  1003               	clrc
  5513  04CA  0DF0               	rlf	i1___lwdiv@divisor,f
  5514  04CB  0DF1               	rlf	i1___lwdiv@divisor+1,f
  5515  04CC  3EFF               	addlw	-1
  5516  04CD  1D03               	skipz
  5517  04CE  2CC9               	goto	u137_25
  5518  04CF  3001               	movlw	1
  5519  04D0  00F4               	movwf	??i1___lwdiv
  5520  04D1  0874               	movf	??i1___lwdiv,w
  5521  04D2  07F7               	addwf	i1___lwdiv@counter,f
  5522  04D3  2CC6               	goto	i1l1710
  5523  04D4                     i1l1712:	
  5524  04D4  3001               	movlw	1
  5525  04D5                     u139_25:	
  5526  04D5  1003               	clrc
  5527  04D6  0DF5               	rlf	i1___lwdiv@quotient,f
  5528  04D7  0DF6               	rlf	i1___lwdiv@quotient+1,f
  5529  04D8  3EFF               	addlw	-1
  5530  04D9  1D03               	skipz
  5531  04DA  2CD5               	goto	u139_25
  5532  04DB  0871               	movf	i1___lwdiv@divisor+1,w
  5533  04DC  0273               	subwf	i1___lwdiv@dividend+1,w
  5534  04DD  1D03               	skipz
  5535  04DE  2CE1               	goto	u140_25
  5536  04DF  0870               	movf	i1___lwdiv@divisor,w
  5537  04E0  0272               	subwf	i1___lwdiv@dividend,w
  5538  04E1                     u140_25:	
  5539  04E1  1C03               	skipc
  5540  04E2  2CEA               	goto	i1l1718
  5541  04E3  0870               	movf	i1___lwdiv@divisor,w
  5542  04E4  02F2               	subwf	i1___lwdiv@dividend,f
  5543  04E5  0871               	movf	i1___lwdiv@divisor+1,w
  5544  04E6  1C03               	skipc
  5545  04E7  03F3               	decf	i1___lwdiv@dividend+1,f
  5546  04E8  02F3               	subwf	i1___lwdiv@dividend+1,f
  5547  04E9  1475               	bsf	i1___lwdiv@quotient,0
  5548  04EA                     i1l1718:	
  5549  04EA  3001               	movlw	1
  5550  04EB                     u141_25:	
  5551  04EB  1003               	clrc
  5552  04EC  0CF1               	rrf	i1___lwdiv@divisor+1,f
  5553  04ED  0CF0               	rrf	i1___lwdiv@divisor,f
  5554  04EE  3EFF               	addlw	-1
  5555  04EF  1D03               	skipz
  5556  04F0  2CEB               	goto	u141_25
  5557  04F1  3001               	movlw	1
  5558  04F2  02F7               	subwf	i1___lwdiv@counter,f
  5559  04F3  1D03               	btfss	3,2
  5560  04F4  2CD4               	goto	i1l1712
  5561  04F5                     i1l1722:	
  5562  04F5  0876               	movf	i1___lwdiv@quotient+1,w
  5563  04F6  01F1               	clrf	?i1___lwdiv+1
  5564  04F7  07F1               	addwf	?i1___lwdiv+1,f
  5565  04F8  0875               	movf	i1___lwdiv@quotient,w
  5566  04F9  01F0               	clrf	?i1___lwdiv
  5567  04FA  07F0               	addwf	?i1___lwdiv,f
  5568  04FB  0008               	return
  5569  04FC                     __end_ofi1___lwdiv:	
  5570                           
  5571                           	psect	text39
  5572  0431                     __ptext39:	
  5573 ;; *************** function i1___awmod *****************
  5574 ;; Defined at:
  5575 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\awmod.c"
  5576 ;; Parameters:    Size  Location     Type
  5577 ;;  divisor         2    0[COMMON] int 
  5578 ;;  dividend        2    2[COMMON] int 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;  __awmod         1    6[COMMON] unsigned char 
  5581 ;;  __awmod         1    5[COMMON] unsigned char 
  5582 ;; Return value:  Size  Location     Type
  5583 ;;                  2    0[COMMON] int 
  5584 ;; Registers used:
  5585 ;;		wreg, status,2, status,0
  5586 ;; Tracked objects:
  5587 ;;		On entry : 0/0
  5588 ;;		On exit  : 0/0
  5589 ;;		Unchanged: 0/0
  5590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5591 ;;      Params:         4       0       0       0
  5592 ;;      Locals:         2       0       0       0
  5593 ;;      Temps:          1       0       0       0
  5594 ;;      Totals:         7       0       0       0
  5595 ;;Total ram usage:        7 bytes
  5596 ;; Hardware stack levels used:    1
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_time_shapping
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           
  5605                           ;psect for function i1___awmod
  5606  0431                     i1___awmod:	
  5607                           
  5608                           ;incstack = 0
  5609 ;; hardware stack exceeded
  5610                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  5611  0431  01F6               	clrf	i1___awmod@sign
  5612  0432  1FF3               	btfss	i1___awmod@dividend+1,7
  5613  0433  2C3B               	goto	i1l1880
  5614  0434  09F2               	comf	i1___awmod@dividend,f
  5615  0435  09F3               	comf	i1___awmod@dividend+1,f
  5616  0436  0AF2               	incf	i1___awmod@dividend,f
  5617  0437  1903               	skipnz
  5618  0438  0AF3               	incf	i1___awmod@dividend+1,f
  5619  0439  01F6               	clrf	i1___awmod@sign
  5620  043A  0AF6               	incf	i1___awmod@sign,f
  5621  043B                     i1l1880:	
  5622  043B  1FF1               	btfss	i1___awmod@divisor+1,7
  5623  043C  2C42               	goto	i1l1884
  5624  043D  09F0               	comf	i1___awmod@divisor,f
  5625  043E  09F1               	comf	i1___awmod@divisor+1,f
  5626  043F  0AF0               	incf	i1___awmod@divisor,f
  5627  0440  1903               	skipnz
  5628  0441  0AF1               	incf	i1___awmod@divisor+1,f
  5629  0442                     i1l1884:	
  5630  0442  0871               	movf	i1___awmod@divisor+1,w
  5631  0443  0470               	iorwf	i1___awmod@divisor,w
  5632  0444  1903               	skipnz
  5633  0445  2C6F               	goto	i1l1902
  5634  0446  01F5               	clrf	i1___awmod@counter
  5635  0447  0AF5               	incf	i1___awmod@counter,f
  5636  0448                     i1l1892:	
  5637  0448  1BF1               	btfsc	i1___awmod@divisor+1,7
  5638  0449  2C56               	goto	i1l1894
  5639  044A  3001               	movlw	1
  5640  044B                     u174_25:	
  5641  044B  1003               	clrc
  5642  044C  0DF0               	rlf	i1___awmod@divisor,f
  5643  044D  0DF1               	rlf	i1___awmod@divisor+1,f
  5644  044E  3EFF               	addlw	-1
  5645  044F  1D03               	skipz
  5646  0450  2C4B               	goto	u174_25
  5647  0451  3001               	movlw	1
  5648  0452  00F4               	movwf	??i1___awmod
  5649  0453  0874               	movf	??i1___awmod,w
  5650  0454  07F5               	addwf	i1___awmod@counter,f
  5651  0455  2C48               	goto	i1l1892
  5652  0456                     i1l1894:	
  5653  0456  0871               	movf	i1___awmod@divisor+1,w
  5654  0457  0273               	subwf	i1___awmod@dividend+1,w
  5655  0458  1D03               	skipz
  5656  0459  2C5C               	goto	u176_25
  5657  045A  0870               	movf	i1___awmod@divisor,w
  5658  045B  0272               	subwf	i1___awmod@dividend,w
  5659  045C                     u176_25:	
  5660  045C  1C03               	skipc
  5661  045D  2C64               	goto	i1l1898
  5662  045E  0870               	movf	i1___awmod@divisor,w
  5663  045F  02F2               	subwf	i1___awmod@dividend,f
  5664  0460  0871               	movf	i1___awmod@divisor+1,w
  5665  0461  1C03               	skipc
  5666  0462  03F3               	decf	i1___awmod@dividend+1,f
  5667  0463  02F3               	subwf	i1___awmod@dividend+1,f
  5668  0464                     i1l1898:	
  5669  0464  3001               	movlw	1
  5670  0465                     u177_25:	
  5671  0465  1003               	clrc
  5672  0466  0CF1               	rrf	i1___awmod@divisor+1,f
  5673  0467  0CF0               	rrf	i1___awmod@divisor,f
  5674  0468  3EFF               	addlw	-1
  5675  0469  1D03               	skipz
  5676  046A  2C65               	goto	u177_25
  5677  046B  3001               	movlw	1
  5678  046C  02F5               	subwf	i1___awmod@counter,f
  5679  046D  1D03               	btfss	3,2
  5680  046E  2C56               	goto	i1l1894
  5681  046F                     i1l1902:	
  5682  046F  0876               	movf	i1___awmod@sign,w
  5683  0470  1903               	btfsc	3,2
  5684  0471  2C77               	goto	i1l1906
  5685  0472  09F2               	comf	i1___awmod@dividend,f
  5686  0473  09F3               	comf	i1___awmod@dividend+1,f
  5687  0474  0AF2               	incf	i1___awmod@dividend,f
  5688  0475  1903               	skipnz
  5689  0476  0AF3               	incf	i1___awmod@dividend+1,f
  5690  0477                     i1l1906:	
  5691  0477  0873               	movf	i1___awmod@dividend+1,w
  5692  0478  01F1               	clrf	?i1___awmod+1
  5693  0479  07F1               	addwf	?i1___awmod+1,f
  5694  047A  0872               	movf	i1___awmod@dividend,w
  5695  047B  01F0               	clrf	?i1___awmod
  5696  047C  07F0               	addwf	?i1___awmod,f
  5697  047D  0008               	return
  5698  047E                     __end_ofi1___awmod:	
  5699                           
  5700                           	psect	text40
  5701  02E6                     __ptext40:	
  5702 ;; *************** function ___awdiv *****************
  5703 ;; Defined at:
  5704 ;;		line 6 in file "D:\CAE_Tools\Microchip\xc8\v1.32\sources\common\awdiv.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  divisor         2    7[COMMON] int 
  5707 ;;  dividend        2    9[COMMON] int 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  quotient        2    2[BANK0 ] int 
  5710 ;;  sign            1    1[BANK0 ] unsigned char 
  5711 ;;  counter         1    0[BANK0 ] unsigned char 
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2    7[COMMON] int 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5721 ;;      Params:         4       0       0       0
  5722 ;;      Locals:         0       4       0       0
  5723 ;;      Temps:          1       0       0       0
  5724 ;;      Totals:         5       4       0       0
  5725 ;;Total ram usage:        9 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_time_shapping
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           
  5735                           ;psect for function ___awdiv
  5736  02E6                     ___awdiv:	
  5737                           
  5738                           ;incstack = 0
  5739 ;; hardware stack exceeded
  5740                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5741  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  5742  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  5743  02E8  01A1               	clrf	___awdiv@sign
  5744  02E9  1FF8               	btfss	___awdiv@divisor+1,7
  5745  02EA  2AF2               	goto	i1l1820
  5746  02EB  09F7               	comf	___awdiv@divisor,f
  5747  02EC  09F8               	comf	___awdiv@divisor+1,f
  5748  02ED  0AF7               	incf	___awdiv@divisor,f
  5749  02EE  1903               	skipnz
  5750  02EF  0AF8               	incf	___awdiv@divisor+1,f
  5751  02F0  01A1               	clrf	___awdiv@sign
  5752  02F1  0AA1               	incf	___awdiv@sign,f
  5753  02F2                     i1l1820:	
  5754  02F2  1FFA               	btfss	___awdiv@dividend+1,7
  5755  02F3  2AFD               	goto	i1l1826
  5756  02F4  09F9               	comf	___awdiv@dividend,f
  5757  02F5  09FA               	comf	___awdiv@dividend+1,f
  5758  02F6  0AF9               	incf	___awdiv@dividend,f
  5759  02F7  1903               	skipnz
  5760  02F8  0AFA               	incf	___awdiv@dividend+1,f
  5761  02F9  3001               	movlw	1
  5762  02FA  00FB               	movwf	??___awdiv
  5763  02FB  087B               	movf	??___awdiv,w
  5764  02FC  06A1               	xorwf	___awdiv@sign,f
  5765  02FD                     i1l1826:	
  5766  02FD  01A2               	clrf	___awdiv@quotient
  5767  02FE  01A3               	clrf	___awdiv@quotient+1
  5768  02FF  0878               	movf	___awdiv@divisor+1,w
  5769  0300  0477               	iorwf	___awdiv@divisor,w
  5770  0301  1903               	skipnz
  5771  0302  2B34               	goto	i1l1848
  5772  0303  01A0               	clrf	___awdiv@counter
  5773  0304  0AA0               	incf	___awdiv@counter,f
  5774  0305                     i1l1836:	
  5775  0305  1BF8               	btfsc	___awdiv@divisor+1,7
  5776  0306  2B13               	goto	i1l1838
  5777  0307  3001               	movlw	1
  5778  0308                     u161_25:	
  5779  0308  1003               	clrc
  5780  0309  0DF7               	rlf	___awdiv@divisor,f
  5781  030A  0DF8               	rlf	___awdiv@divisor+1,f
  5782  030B  3EFF               	addlw	-1
  5783  030C  1D03               	skipz
  5784  030D  2B08               	goto	u161_25
  5785  030E  3001               	movlw	1
  5786  030F  00FB               	movwf	??___awdiv
  5787  0310  087B               	movf	??___awdiv,w
  5788  0311  07A0               	addwf	___awdiv@counter,f
  5789  0312  2B05               	goto	i1l1836
  5790  0313                     i1l1838:	
  5791  0313  3001               	movlw	1
  5792  0314                     u163_25:	
  5793  0314  1003               	clrc
  5794  0315  0DA2               	rlf	___awdiv@quotient,f
  5795  0316  0DA3               	rlf	___awdiv@quotient+1,f
  5796  0317  3EFF               	addlw	-1
  5797  0318  1D03               	skipz
  5798  0319  2B14               	goto	u163_25
  5799  031A  0878               	movf	___awdiv@divisor+1,w
  5800  031B  027A               	subwf	___awdiv@dividend+1,w
  5801  031C  1D03               	skipz
  5802  031D  2B20               	goto	u164_25
  5803  031E  0877               	movf	___awdiv@divisor,w
  5804  031F  0279               	subwf	___awdiv@dividend,w
  5805  0320                     u164_25:	
  5806  0320  1C03               	skipc
  5807  0321  2B29               	goto	i1l1844
  5808  0322  0877               	movf	___awdiv@divisor,w
  5809  0323  02F9               	subwf	___awdiv@dividend,f
  5810  0324  0878               	movf	___awdiv@divisor+1,w
  5811  0325  1C03               	skipc
  5812  0326  03FA               	decf	___awdiv@dividend+1,f
  5813  0327  02FA               	subwf	___awdiv@dividend+1,f
  5814  0328  1422               	bsf	___awdiv@quotient,0
  5815  0329                     i1l1844:	
  5816  0329  3001               	movlw	1
  5817  032A                     u165_25:	
  5818  032A  1003               	clrc
  5819  032B  0CF8               	rrf	___awdiv@divisor+1,f
  5820  032C  0CF7               	rrf	___awdiv@divisor,f
  5821  032D  3EFF               	addlw	-1
  5822  032E  1D03               	skipz
  5823  032F  2B2A               	goto	u165_25
  5824  0330  3001               	movlw	1
  5825  0331  02A0               	subwf	___awdiv@counter,f
  5826  0332  1D03               	btfss	3,2
  5827  0333  2B13               	goto	i1l1838
  5828  0334                     i1l1848:	
  5829  0334  0821               	movf	___awdiv@sign,w
  5830  0335  1903               	btfsc	3,2
  5831  0336  2B3C               	goto	i1l1852
  5832  0337  09A2               	comf	___awdiv@quotient,f
  5833  0338  09A3               	comf	___awdiv@quotient+1,f
  5834  0339  0AA2               	incf	___awdiv@quotient,f
  5835  033A  1903               	skipnz
  5836  033B  0AA3               	incf	___awdiv@quotient+1,f
  5837  033C                     i1l1852:	
  5838  033C  0823               	movf	___awdiv@quotient+1,w
  5839  033D  01F8               	clrf	?___awdiv+1
  5840  033E  07F8               	addwf	?___awdiv+1,f
  5841  033F  0822               	movf	___awdiv@quotient,w
  5842  0340  01F7               	clrf	?___awdiv
  5843  0341  07F7               	addwf	?___awdiv,f
  5844  0342  0008               	return
  5845  0343                     __end_of___awdiv:	
  5846  007E                     btemp	set	126	;btemp
  5847  007E                     wtemp	set	126
  5848  007E                     wtemp0	set	126
  5849  0080                     wtemp1	set	128
  5850  0082                     wtemp2	set	130
  5851  0084                     wtemp3	set	132
  5852  0086                     wtemp4	set	134
  5853  0088                     wtemp5	set	136
  5854  007F                     wtemp6	set	127
  5855  007E                     ttemp	set	126
  5856  007E                     ttemp0	set	126
  5857  0081                     ttemp1	set	129
  5858  0084                     ttemp2	set	132
  5859  0087                     ttemp3	set	135
  5860  007F                     ttemp4	set	127
  5861  007E                     ltemp	set	126
  5862  007E                     ltemp0	set	126
  5863  0082                     ltemp1	set	130
  5864  0086                     ltemp2	set	134
  5865  0080                     ltemp3	set	128


Data Sizes:
    Strings     8
    Constant    0
    Data        2
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      49
    BANK1            80     49      50
    BANK2            80      0      40

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 2
		 -> display_player_nbr@string_player_number(BANK1[2]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 2
		 -> time_shapping@hours_buf(BANK0[2]), time_shapping@minutes_buf(BANK0[2]), time_shapping@secondes_buf(BANK0[2]), display_player_nbr@string_player_number(BANK1[2]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    Lcd4_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), 

    time_shapping@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> game_phase@time_str(BANK0[9]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 2
		 -> time_shapping@hours_buf(BANK0[2]), time_shapping@minutes_buf(BANK0[2]), time_shapping@secondes_buf(BANK0[2]), display_player_nbr@string_player_number(BANK1[2]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    gcurrent_player.next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 

    gcurrent_player	PTR struct player_t size(1) Largest target is 50
		 -> NULL(NULL[0]), player_array(BANK2[40]), 

    S22player_t$next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 

    player_array.next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_switch_player
    i1_display_player_nbr->i1_utoa
    _game_phase->_time_shapping
    i1_Lcd4_Write_String->i1_Lcd4_Write_Char
    i1_Lcd4_Write_Char->i1_Lcd4_Port
    i1_Lcd4_Set_Cursor->i1_Lcd4_Cmd
    i1_Lcd4_Cmd->i1_Lcd4_Port
    _time_shapping->i1_utoa
    i1_utoa->i1___lwdiv
    ___awdiv->i1___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_game_phase
    _switch_player->i1_display_player_nbr
    i1_display_player_nbr->i1_utoa
    _game_phase->_time_shapping
    _time_shapping->___awdiv
    _time_shapping->i1_utoa

Critical Paths under _main in BANK1

    _main->_initiate_game
    _system_init->_Lcd4_Init
    _Lcd4_Init->_Lcd4_Cmd
    _Lcd4_Clear->_Lcd4_Cmd
    _initiate_game->_display_player_nbr
    _display_player_nbr->_utoa
    _utoa->___lwdiv
    _Lcd4_Write_String->_Lcd4_Write_Char
    _Lcd4_Write_Char->_Lcd4_Port
    _Lcd4_Set_Cursor->_Lcd4_Cmd
    _Lcd4_Cmd->_Lcd4_Port

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4847
                      _initiate_game
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          3     3      0     310
                                              6 BANK1      3     3      0
                _ConfigureOscillator
                          _Lcd4_Init
                           _initUart
                     _init_interrupt
                       _init_timer_0
                       _init_timer_2
 ---------------------------------------------------------------------------------
 (2) _init_timer_2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Init                                            2     2      0     310
                                              4 BANK1      2     2      0
                         _Lcd4_Clear
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Clear                                           0     0      0     155
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (2) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initiate_game                                       11     8      3    4537
                                             38 BANK1     11     8      3
                            ___awmod
                 _display_player_nbr
 ---------------------------------------------------------------------------------
 (2) _display_player_nbr                                  21    21      0    3408
                                             17 BANK1     21    21      0
                    _Lcd4_Set_Cursor
                  _Lcd4_Write_String
                             _strcat
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1853
                                              8 BANK1      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     362
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     501
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               4     3      1     204
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     238
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Write_String                                    4     4      0     444
                                              6 BANK1      4     4      0
                    _Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd4_Write_Char                                      5     5      0     254
                                              1 BANK1      5     5      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Set_Cursor                                      8     7      1     411
                                              4 BANK1      8     7      1
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Cmd                                             3     3      0     155
                                              1 BANK1      3     3      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd4_Port                                            1     1      0     124
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     683
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                 16    16      0    5286
                                             32 BANK0      7     7      0
                         _game_phase
                      _switch_player
                          _uart_getc
                          _uart_putc
 ---------------------------------------------------------------------------------
 (7) _uart_putc                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _uart_getc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _switch_player                                        1     1      0    1886
                                             13 COMMON     1     1      0
               i1_display_player_nbr
 ---------------------------------------------------------------------------------
 (8) i1_display_player_nbr                                21    21      0    1886
                                              4 BANK0     21    21      0
                  i1_Lcd4_Set_Cursor
                i1_Lcd4_Write_String
                           i1_strcat
                           i1_strcpy
                             i1_utoa
 ---------------------------------------------------------------------------------
 (10) i1_strcpy                                            4     3      1     101
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (9) i1_strcat                                             4     3      1     124
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (7) _game_phase                                          13    13      0    3378
                                             19 BANK0     13    13      0
                      _time_shapping
                  i1_Lcd4_Set_Cursor
                i1_Lcd4_Write_String
 ---------------------------------------------------------------------------------
 (9) i1_Lcd4_Write_String                                  4     4      0     268
                                              6 COMMON     4     4      0
                  i1_Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (10) i1_Lcd4_Write_Char                                   5     5      0     178
                                              1 COMMON     5     5      0
                        i1_Lcd4_Port
 ---------------------------------------------------------------------------------
 (9) i1_Lcd4_Set_Cursor                                    8     7      1     274
                                              4 COMMON     8     7      1
                         i1_Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (10) i1_Lcd4_Cmd                                          3     3      0     110
                                              1 COMMON     3     3      0
                        i1_Lcd4_Port
 ---------------------------------------------------------------------------------
 (11) i1_Lcd4_Port                                         1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _time_shapping                                       16    14      2    2747
                                             13 COMMON     1     1      0
                                              4 BANK0     15    13      2
                            ___awdiv
                          i1___awmod
                             i1_utoa
 ---------------------------------------------------------------------------------
 (9) i1_utoa                                               9     5      4     987
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1___lwdiv                                           8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (9) i1___awmod                                            7     3      4     400
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate_game
     ___awmod
     _display_player_nbr
       _Lcd4_Set_Cursor
         _Lcd4_Cmd
           _Lcd4_Port
       _Lcd4_Write_String
         _Lcd4_Write_Char
           _Lcd4_Port
       _strcat
       _strcpy
       _utoa
         ___lwdiv
         ___lwmod
   _system_init
     _ConfigureOscillator
     _Lcd4_Init
       _Lcd4_Clear
         _Lcd4_Cmd
           _Lcd4_Port
       _Lcd4_Cmd
         _Lcd4_Port
     _initUart
     _init_interrupt
     _init_timer_0
     _init_timer_2

 _isr (ROOT)
   _game_phase
     _time_shapping
       ___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1_utoa
         i1___lwdiv
         i1___lwmod
     i1_Lcd4_Set_Cursor
       i1_Lcd4_Cmd
         i1_Lcd4_Port
     i1_Lcd4_Write_String
       i1_Lcd4_Write_Char
         i1_Lcd4_Port
   _switch_player
     i1_display_player_nbr
       i1_Lcd4_Set_Cursor
         i1_Lcd4_Cmd
           i1_Lcd4_Port
       i1_Lcd4_Write_String
         i1_Lcd4_Write_Char
           i1_Lcd4_Port
       i1_strcat
       i1_strcpy
       i1_utoa
         i1___lwdiv
         i1___lwmod
   _uart_getc
   _uart_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0      28       7       50.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     31      32       5       62.5%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     27      31       3       61.3%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      99      10        0.0%
ABS                  0      0      99       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jul 15 16:42:26 2014

                                       pc 0002                               __CFG_CP$OFF 0000  
                       ??_Lcd4_Write_Char 00A1                          ??_init_interrupt 00A0  
                                      l98 0FCD                              ___awdiv@sign 0021  
                                      fsr 0004                       __end_of_system_init 0657  
                                     l144 0F9B                                       l261 0660  
                                     l262 0663                                       l263 066B  
                                     l264 066E                                       l265 0676  
                                     l266 0679                                       l267 0681  
                                     l672 01FB                                       _RA0 0028  
                                     _RA2 002A                                       _RC0 0038  
                                     _RC2 003A                                       _RB4 0034  
                                     _RC3 003B                                       _RB6 0036  
                                     _RC6 003E                                       _PR2 0092  
                            __CFG_CPD$OFF 0000                                       _isr 0343  
                                     fsr0 0004                                       indf 0000  
                         ??_time_shapping 007D                              ___awmod@sign 00A6  
                            __CFG_IESO$ON 0000                                _Lcd4_Clear 0F9E  
                       _Lcd4_Write_String 0723                __size_ofi1_Lcd4_Write_Char 004F  
            __end_ofi1_display_player_nbr 0629                        ?_Lcd4_Write_String 0070  
                                    l2430 06E0                                      l2432 06EB  
                                    l2344 04AC                                      l2336 0488  
                                    l2360 0504                                      l2408 01C7  
                                    l2530 03AC                                      l2522 03A6  
                                    l2434 06F3                                      l2338 0496  
                                    l2362 0512                                      l2370 052B  
                                    l2532 03BA                                      l2540 03D3  
                                    l2348 04B7                                      l2518 039F  
                                    l2366 0520                                      l2544 03DB  
                                    l2536 03C8                                      l2394 0789  
                                    l2388 0728                                      l2556 0111  
                                    l2398 01A2                                      l2558 0176  
                                    ?_isr 0070                                      STR_1 0806  
                                    u2305 0497                                      u2315 04A3  
                                    u2405 068B                                      u2325 04AD  
                                    u2415 0696                                      u2265 02A9  
                                    u2355 0507                                      u2285 048B  
                                    u2605 0134                                      u2535 03AF  
                                    u2375 0518                                      u2615 0156  
                                    u2385 0521                                      u2625 0162  
                                    u2555 03C0                                      u2707 02DD  
                                    u2635 011A                                      u2565 03C9  
                                    u2717 07B5                                      u2647 064D  
                                    u2657 05D3                                      u2595 0121  
                                    u2667 05F2                                      u2677 0290  
                                    u2687 02B8                                      u2697 02C6  
                                    _RCIF 0065                                      i1l84 0351  
                                    i1l86 0386                                      i1l88 036F  
                                    _TMR0 0001                                      _TMR1 000E  
                                    _TXIF 0064                             __CFG_FCMEN$ON 0000  
                                    _main 0FBF                                      btemp 007E  
                                    _utoa 0199                       ??_Lcd4_Write_String 00A6  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                             __CFG_MCLRE$ON 0000  
                                   ??_isr 0040                        game_phase@time_str 0035  
                             ?i1_Lcd4_Cmd 0070                                     ?_main 0070  
                         __end_of___awdiv 0343                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 03E2                                     _ANSEL 011E  
                                   ?_utoa 00A8                           ___awdiv@divisor 0077  
                                   _IOCA0 04B0                           __end_of___lwdiv 04BE  
                                   _RABIE 005B                                     _RABIF 0058  
                                   i1l232 0FAC                                     i1l219 0F8F  
                                   i1l261 0FED                                     i1l262 0FF0  
                                   i1l263 0FF4                                     i1l264 0FF5  
                                   i1l265 0FF9                           __end_of___lwmod 0532  
                                   i1l266 0FFA                                     i1l267 0FFE  
                                   i1l672 0273                           ___awdiv@counter 0020  
               __end_of_Lcd4_Write_String 0744                                     _RCREG 001A  
                                   _SPBRG 0099                                     _PORTA 0005  
                                   _PORTB 0006                                     _PORTC 0007  
                                   _TRISA 0085                                     _TRISB 0086  
                                   _TRISC 0087                                     _TXREG 0019  
                     _ConfigureOscillator 0F96                        i1___lwmod@dividend 0072  
                          i1___awmod@sign 0076                           _timer1_tick_nbr 004B  
                                   pclath 000A                                     ltemp0 007E  
                                   ltemp1 0082                                     ltemp2 0086  
                                   ltemp3 0080                           _timer2_tick_nbr 004D  
                        __end_of_Lcd4_Cmd 07BE                                     ttemp0 007E  
                                   ttemp1 0081                                     ttemp2 0084  
                                   ttemp3 0087                                     ttemp4 007F  
                                   utoa@c 00AF                                     utoa@v 00AD  
                                   status 0003                                     wtemp0 007E  
                                   wtemp1 0080                                     wtemp2 0082  
                                   wtemp3 0084                                     wtemp4 0086  
                                   wtemp5 0088                                     wtemp6 007F  
                      __size_ofi1___awmod 004D                        __size_ofi1___lwdiv 003E  
                      __size_ofi1___lwmod 0034                      ?_ConfigureOscillator 0070  
                        __end_ofi1_strcat 0723                          __end_ofi1_strcpy 07F7  
                         __initialization 0013                        __size_of_Lcd4_Init 0030  
                             _system_init 0629                        __size_of_Lcd4_Port 002E  
                            __end_of_main 0FCE                              __end_of_utoa 0211  
                              i1utoa@base 007A                                i1strcat@cp 0073  
                              i1strcat@to 0072                                    ??_main 00D1  
                              i1strcpy@cp 0073                                i1strcpy@to 0072  
                                  ??_utoa 00AC                           _Lcd4_Set_Cursor 0685  
            __size_ofi1_Lcd4_Write_String 001D                               ?_Lcd4_Clear 0070  
                       time_shapping@time 0024                              ?i1_Lcd4_Port 0070  
                        ___awdiv@dividend 0079                                    _ANSELH 011F  
                        Lcd4_Write_Char@a 00A5                          Lcd4_Write_Char@y 00A4  
                                  i1l2220 0385                                    i1l1710 04C6  
                                  i1l1712 04D4                                    i1l1722 04F5  
                                  i1l2194 034A                                    i1l1820 02F2  
                                  i1l1740 0554                                    i1l1902 046F  
                                  i1l1718 04EA                                    i1l1734 0538  
                                  i1l1736 0546                                    i1l1744 055F  
                                  i1l1912 021A                                    i1l1826 02FD  
                                  i1l1906 0477                                    i1l1922 023F  
                                  i1l1852 033C                                    i1l1844 0329  
                                  i1l1836 0305                                    i1l1838 0313  
                                  i1l1870 07C1                                    i1l1848 0334  
                                  i1l1880 043B                                    i1l1944 0704  
                                  i1l1970 009A                                    i1l1946 070F  
                                  i1l1954 07E0                                    i1l1892 0448  
                                  i1l1884 0442                                    i1l1948 0717  
                                  i1l1894 0456                                    i1l1982 00D0  
                                  i1l1976 00B5                                    i1l1898 0464  
                                  u140_25 04E1                                    u141_25 04EB  
                                  u135_25 03FC                                    u144_25 053B  
                                  u161_25 0308                                    u137_25 04C9  
                                  u146_25 054C                                    u163_25 0314  
                                  u139_25 04D5                                    u147_25 0555  
                                  u164_25 0320                                    u165_25 032A  
                                  u174_25 044B                                    u176_25 045C  
                                  u168_25 06B5                                    u272_27 037E  
                                  u177_25 0465                                    u169_25 06C0  
                                  u273_27 03E7                                    u274_27 0409  
                                  u275_27 0415                                    u276_27 0428  
                                  u277_27 0FDD                                    _TMR1IF 0060  
                                  _TMR2IF 0061                                    _SPBRGH 009A  
                                  _TMR2ON 0092                __end_of_display_player_nbr 05CA  
                     __size_ofi1_Lcd4_Cmd 0018                     ??_ConfigureOscillator 00A0  
                                  i1_utoa 0211                            __CFG_PWRTE$OFF 0000  
                           ?_init_timer_0 0070                             ?_init_timer_2 0070  
                  __size_of_switch_player 001F                                 ??___awdiv 007B  
                               ??___awmod 00A4                                 ??___lwdiv 00A4  
                               ??___lwmod 00A4                      i1_display_player_nbr 05FA  
                        __end_of_initUart 0763                          ___awdiv@quotient 0022  
                         ___awmod@divisor 00A0                           ___awmod@counter 00A5  
                                  _strcat 06D9                                    _strcpy 0782  
                       __end_ofi1___awmod 047E                __size_of_Lcd4_Write_String 0021  
                       __end_ofi1___lwdiv 04FC                         __end_ofi1___lwmod 0566  
                                  saved_w 007E                    __size_of_initiate_game 008D  
                       __end_of_Lcd4_Init 05FA                         __end_of_Lcd4_Port 0685  
                 __end_of__initialization 002D                           _Lcd4_Write_Char 0289  
                         _gcurrent_player 00D1                            ??_init_timer_0 00A0  
                          ??_init_timer_2 00A0                            __pcstackCOMMON 0070  
                     __size_of_Lcd4_Clear 0008                              __pidataBANK0 0002  
                   ?i1_display_player_nbr 0070                   __end_of_Lcd4_Set_Cursor 06B1  
                               ?_Lcd4_Cmd 0070                            _OPTION_REGbits 0081  
                           _switch_player 0763                                 ?i1_strcat 0070  
                               ?i1_strcpy 0070                                __pbssBANK0 0047  
                              __pbssBANK1 00D1                                __pbssBANK2 0120  
                                 ?i1_utoa 0078                                __pmaintext 0FBF  
                      time_shapping@hours 002A                                _game_phase 0566  
                           _initiate_game 010C                      time_shapping@minutes 0028  
                              __pintentry 0004                                _ggame_time 0049  
                            ??i1_Lcd4_Cmd 0071                                   ?_strcat 00A0  
                                 ?_strcpy 00A0                    time_shapping@hours_buf 0030  
                          ?_switch_player 0070                        __size_of_uart_getc 000A  
                              ??_Lcd4_Cmd 00A1                        __size_of_uart_putc 0008  
                      i1Lcd4_Write_Char@a 0075                        i1Lcd4_Write_Char@y 0074  
                              ??i1_strcat 0071                     __end_of_time_shapping 010C  
                              ??i1_strcpy 0071                   __end_of_Lcd4_Write_Char 02E6  
                              __stringtab 0800                      __size_ofi1_Lcd4_Port 001A  
                               ?_initUart 0070                                _glog_level 004F  
                      __end_ofi1_Lcd4_Cmd 0FE6                                   i1utoa@c 0022  
                                 i1utoa@v 0020                           __size_ofi1_utoa 0078  
                          ?_initiate_game 00C6                       i1_Lcd4_Write_String 07BE  
                            ?_system_init 0070                    ??i1_display_player_nbr 0024  
                                 ___awdiv 02E6                                   ___awmod 0393  
                                 ___lwdiv 047E                                   ___lwmod 04FC  
                        ?_Lcd4_Set_Cursor 00A4                                   __ptext1 0629  
                                 __ptext2 0FB0                                   __ptext3 0F87  
                                 __ptext4 0F84                                   __ptext5 0744  
                                 __ptext6 05CA                                   __ptext7 0F9E  
                                 __ptext8 0F96                                   __ptext9 010C  
                         __size_of_strcat 0026                                 Lcd4_Cmd@a 00A3  
                         __size_of_strcpy 001E                                 _T1CONbits 0010  
                       i1___lwdiv@divisor 0070                                 _T2CONbits 0012  
                            __size_of_isr 0050                         i1___lwdiv@counter 0077  
                    __end_of_init_timer_0 0F8E                      __end_of_init_timer_2 0FBF  
                display_player_nbr@string 00B3                          ___awmod@dividend 00A2  
                     Lcd4_Write_Char@temp 00A3                      ?i1_Lcd4_Write_String 0070  
                            ??_Lcd4_Clear 00A4                              _elapsed_time 0047  
                i1Lcd4_Set_Cursor@lCmdLsb 007B                  i1Lcd4_Set_Cursor@lCmdMsb 007A  
                 __size_of_init_interrupt 0003                                   clrloop0 07F8  
                    end_of_initialization 002D                  time_shapping@minutes_buf 002E  
                              ??_initUart 00A0                         __end_of_uart_getc 0FB0  
                       __end_of_uart_putc 0F96                               ?_game_phase 0070  
                               _RCSTAbits 0018                        __end_of_Lcd4_Clear 0FA6  
                                 utoa@buf 00B0                i1display_player_nbr@string 0026  
                                 utoa@val 00A8                        _display_player_nbr 0599  
                         ??_switch_player 007D                 time_shapping@secondes_buf 002C  
                 Lcd4_Set_Cursor@pixel_nb 00A4                     ??i1_Lcd4_Write_String 0076  
                     ?_display_player_nbr 0070                                 _TRISBbits 0086  
                               i1___awmod 0431                      i1Lcd4_Write_String@a 0077  
                    i1Lcd4_Write_String@i 0078                                 i1___lwdiv 04BE  
                               i1___lwmod 0532                          ?_Lcd4_Write_Char 0070  
             __end_of_ConfigureOscillator 0F9E                 i1Lcd4_Set_Cursor@pixel_nb 0074  
                               _Lcd4_Init 05CA                                 _Lcd4_Port 0657  
                               _TXSTAbits 0098                  game_phase@remaining_time 003E  
                         ??_initiate_game 00C9                      ??_display_player_nbr 00B1  
                          __end_ofi1_utoa 0289                               _BAUDCTLbits 009B  
                       i1___lwmod@divisor 0070                         i1___lwmod@counter 0075  
                          __end_of_strcat 06FF                            __end_of_strcpy 07A0  
                     start_initialization 0013                         __size_of_Lcd4_Cmd 001E  
                             __end_of_isr 0393                                ?i1___awmod 0070  
                              ?i1___lwdiv 0070                       __size_of_game_phase 0033  
                              ?i1___lwmod 0070                                 i1utoa@buf 0023  
                               i1utoa@val 0078                         __size_ofi1_strcat 0024  
                       __size_ofi1_strcpy 001C                                ?_Lcd4_Init 0070  
                              ?_Lcd4_Port 0070                                  ??i1_utoa 007C  
                            i1strcat@from 0070                               __pdataBANK0 004F  
                      i1___awmod@dividend 0072                      __size_of_system_init 002E  
                   __size_of_init_timer_0 0007                     __size_of_init_timer_2 000F  
                           _gtype_of_game 0050                              i1strcpy@from 0070  
       i1display_player_nbr@player_number 0038           display_player_nbr@player_number 00C3  
                                ??_strcat 00A1                                  ??_strcpy 00A1  
                            i1Lcd4_Port@a 0070                                 ___latbits 0001  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                          _init_interrupt 0F84                       __end_of__stringdata 080E  
                       __size_of_initUart 001F                              _init_timer_0 0F87  
                            _init_timer_2 0FB0                          ___lwdiv@dividend 00A2  
                     time_shapping@buffer 0032                                  ?___awdiv 0077  
                                ?___awmod 00A0                                  ?___lwdiv 00A0  
                                ?___lwmod 00A0                     time_shapping@secondes 0026  
                               __pstrings 0800                    __end_of_init_interrupt 0F87  
                  initiate_game@game_time 00C7                             ??i1_Lcd4_Port 0070  
                             ??i1___awmod 0074                          ___lwdiv@quotient 00A6  
                             ??i1___lwdiv 0074                               ??i1___lwmod 0074  
                  Lcd4_Set_Cursor@lCmdLsb 00AB                    Lcd4_Set_Cursor@lCmdMsb 00AA  
                             ??_Lcd4_Init 00A4                         interrupt_function 0004  
                             ??_Lcd4_Port 00A0                                 clear_ram0 07F7  
                                _PIE1bits 008C                                  _PIR1bits 000C  
                            ??_game_phase 0033                                 _uart_getc 0FA6  
                  __size_of_time_shapping 00DC                                 _uart_putc 0F8E  
           __size_ofi1_display_player_nbr 002F  i1display_player_nbr@string_player_number 0036  
  display_player_nbr@string_player_number 00C4                    initiate_game@player_nb 00CE  
                             __stringbase 0805                               __stringdata 0806  
                       i1_Lcd4_Set_Cursor 06B1                                  _Lcd4_Cmd 07A0  
                         ?_init_interrupt 0070                        ?i1_Lcd4_Set_Cursor 0074  
                __size_of_Lcd4_Set_Cursor 002C                                  i1_strcat 06FF  
                                i1_strcpy 07DB                        Lcd4_Write_String@a 00A9  
                      Lcd4_Write_String@i 00A7                        __end_of_game_phase 0599  
                     ??i1_Lcd4_Set_Cursor 0075                       __end_ofi1_Lcd4_Port 1000  
                              ?_uart_getc 0070                         i1___awmod@divisor 0070  
                             i1Lcd4_Cmd@a 0073                                ?_uart_putc 0070  
                       i1___awmod@counter 0075                          __size_of___awdiv 005D  
                        __size_of___awmod 004F                 __end_ofi1_Lcd4_Set_Cursor 06D9  
             __end_ofi1_Lcd4_Write_String 07DB                          __size_of___lwdiv 0040  
                        __size_of___lwmod 0036                        __end_of__stringtab 0806  
                   __end_of_switch_player 0782                              _player_array 0120  
                              strcat@from 00A0                           ___lwdiv@divisor 00A0  
                         ___lwdiv@counter 00A5                                  __ptext10 0599  
                                __ptext11 0199                                  __ptext20 0657  
                                __ptext12 04FC                                  __ptext21 0393  
                                __ptext13 047E                                  __ptext30 07BE  
                                __ptext22 0343                                  __ptext14 0782  
                                __ptext31 03E2                                  __ptext23 0F8E  
                                __ptext15 06D9                                  __ptext40 02E6  
                                __ptext32 06B1                                  __ptext24 0FA6  
                                __ptext16 0723                                  __ptext33 0FCE  
                                __ptext25 0763                                  __ptext17 0289  
                                __ptext34 0FE6                                  __ptext26 05FA  
                                __ptext18 0685                                  __ptext35 0030  
                                __ptext27 07DB                                  __ptext19 07A0  
                                __ptext36 0211                                  __ptext28 06FF  
                                __ptext37 0532                                  __ptext29 0566  
                                __ptext38 04BE                                  __ptext39 0431  
                           _time_shapping 0030                         i1_Lcd4_Write_Char 03E2  
                      i1___lwdiv@dividend 0072                                strcpy@from 00A0  
                                _initUart 0744                             __size_of_main 000F  
                      ?i1_Lcd4_Write_Char 0070                             __size_of_utoa 0078  
                              Lcd4_Port@a 00A0                  __size_of_Lcd4_Write_Char 005D  
            __size_of_ConfigureOscillator 0008               __size_of_display_player_nbr 0031  
                  i1Lcd4_Set_Cursor@ligne 0079                     __end_of_initiate_game 0199  
                     ??i1_Lcd4_Write_Char 0071                            initiate_game@i 00CF  
                      i1___lwdiv@quotient 0075                                _INTCONbits 000B  
                   i1Lcd4_Write_Char@temp 0073                            ?_time_shapping 0024  
                             i1_Lcd4_Port 0FE6                 __end_ofi1_Lcd4_Write_Char 0431  
                                intlevel1 0000                         ??_Lcd4_Set_Cursor 00A5  
                        ___lwmod@dividend 00A2                                 stringcode 0800  
                              _OSCCONbits 008F                             ??_system_init 00A6  
                    Lcd4_Set_Cursor@ligne 00A9                               ??_uart_getc 0070  
                             ??_uart_putc 0070                __size_ofi1_Lcd4_Set_Cursor 0028  
                              i1_Lcd4_Cmd 0FCE                                  utoa@base 00AA  
                                strcat@cp 00A3                                  strcat@to 00A2  
                         ___lwmod@divisor 00A0                                  strcpy@cp 00A3  
                                strcpy@to 00A2                           ___lwmod@counter 00A5  
                                stringdir 0800                                  stringtab 0800  
                      __CFG_FOSC$INTRCCLK 0000                             uart_putc@data 0070  
               initiate_game@type_of_game 00C6  
