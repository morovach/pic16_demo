

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Sat Jun 14 02:15:51 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001C                     	;# 
    53  001D                     	;# 
    54  001E                     	;# 
    55  001F                     	;# 
    56  0081                     	;# 
    57  0085                     	;# 
    58  0086                     	;# 
    59  0087                     	;# 
    60  008C                     	;# 
    61  008D                     	;# 
    62  008E                     	;# 
    63  008F                     	;# 
    64  0090                     	;# 
    65  0092                     	;# 
    66  0093                     	;# 
    67  0093                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0095                     	;# 
    71  0095                     	;# 
    72  0096                     	;# 
    73  0096                     	;# 
    74  0097                     	;# 
    75  0098                     	;# 
    76  0099                     	;# 
    77  009A                     	;# 
    78  009B                     	;# 
    79  009E                     	;# 
    80  009F                     	;# 
    81  010C                     	;# 
    82  010C                     	;# 
    83  010D                     	;# 
    84  010E                     	;# 
    85  010F                     	;# 
    86  0115                     	;# 
    87  0116                     	;# 
    88  0118                     	;# 
    89  0119                     	;# 
    90  011A                     	;# 
    91  011B                     	;# 
    92  011E                     	;# 
    93  011F                     	;# 
    94  018C                     	;# 
    95  018D                     	;# 
    96  019D                     	;# 
    97  019E                     	;# 
    98  0000                     	;# 
    99  0001                     	;# 
   100  0002                     	;# 
   101  0003                     	;# 
   102  0004                     	;# 
   103  0005                     	;# 
   104  0006                     	;# 
   105  0007                     	;# 
   106  000A                     	;# 
   107  000B                     	;# 
   108  000C                     	;# 
   109  000D                     	;# 
   110  000E                     	;# 
   111  000E                     	;# 
   112  000F                     	;# 
   113  0010                     	;# 
   114  0011                     	;# 
   115  0012                     	;# 
   116  0013                     	;# 
   117  0014                     	;# 
   118  0015                     	;# 
   119  0015                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001C                     	;# 
   126  001D                     	;# 
   127  001E                     	;# 
   128  001F                     	;# 
   129  0081                     	;# 
   130  0085                     	;# 
   131  0086                     	;# 
   132  0087                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0092                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0094                     	;# 
   143  0095                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009E                     	;# 
   153  009F                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0115                     	;# 
   160  0116                     	;# 
   161  0118                     	;# 
   162  0119                     	;# 
   163  011A                     	;# 
   164  011B                     	;# 
   165  011E                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  019D                     	;# 
   170  019E                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  000A                     	;# 
   180  000B                     	;# 
   181  000C                     	;# 
   182  000D                     	;# 
   183  000E                     	;# 
   184  000E                     	;# 
   185  000F                     	;# 
   186  0010                     	;# 
   187  0011                     	;# 
   188  0012                     	;# 
   189  0013                     	;# 
   190  0014                     	;# 
   191  0015                     	;# 
   192  0015                     	;# 
   193  0016                     	;# 
   194  0017                     	;# 
   195  0018                     	;# 
   196  0019                     	;# 
   197  001A                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0096                     	;# 
   220  0097                     	;# 
   221  0098                     	;# 
   222  0099                     	;# 
   223  009A                     	;# 
   224  009B                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0115                     	;# 
   233  0116                     	;# 
   234  0118                     	;# 
   235  0119                     	;# 
   236  011A                     	;# 
   237  011B                     	;# 
   238  011E                     	;# 
   239  011F                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  019D                     	;# 
   243  019E                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  010C                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  0115                     	;# 
   306  0116                     	;# 
   307  0118                     	;# 
   308  0119                     	;# 
   309  011A                     	;# 
   310  011B                     	;# 
   311  011E                     	;# 
   312  011F                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  019D                     	;# 
   316  019E                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001C                     	;# 
   345  001D                     	;# 
   346  001E                     	;# 
   347  001F                     	;# 
   348  0081                     	;# 
   349  0085                     	;# 
   350  0086                     	;# 
   351  0087                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  008F                     	;# 
   356  0090                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0093                     	;# 
   360  0093                     	;# 
   361  0094                     	;# 
   362  0095                     	;# 
   363  0095                     	;# 
   364  0096                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009E                     	;# 
   372  009F                     	;# 
   373  010C                     	;# 
   374  010C                     	;# 
   375  010D                     	;# 
   376  010E                     	;# 
   377  010F                     	;# 
   378  0115                     	;# 
   379  0116                     	;# 
   380  0118                     	;# 
   381  0119                     	;# 
   382  011A                     	;# 
   383  011B                     	;# 
   384  011E                     	;# 
   385  011F                     	;# 
   386  018C                     	;# 
   387  018D                     	;# 
   388  019D                     	;# 
   389  019E                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  000A                     	;# 
   399  000B                     	;# 
   400  000C                     	;# 
   401  000D                     	;# 
   402  000E                     	;# 
   403  000E                     	;# 
   404  000F                     	;# 
   405  0010                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0015                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001C                     	;# 
   418  001D                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  0081                     	;# 
   422  0085                     	;# 
   423  0086                     	;# 
   424  0087                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  008E                     	;# 
   428  008F                     	;# 
   429  0090                     	;# 
   430  0092                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0093                     	;# 
   434  0094                     	;# 
   435  0095                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0096                     	;# 
   439  0097                     	;# 
   440  0098                     	;# 
   441  0099                     	;# 
   442  009A                     	;# 
   443  009B                     	;# 
   444  009E                     	;# 
   445  009F                     	;# 
   446  010C                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  010E                     	;# 
   450  010F                     	;# 
   451  0115                     	;# 
   452  0116                     	;# 
   453  0118                     	;# 
   454  0119                     	;# 
   455  011A                     	;# 
   456  011B                     	;# 
   457  011E                     	;# 
   458  011F                     	;# 
   459  018C                     	;# 
   460  018D                     	;# 
   461  019D                     	;# 
   462  019E                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  000A                     	;# 
   472  000B                     	;# 
   473  000C                     	;# 
   474  000D                     	;# 
   475  000E                     	;# 
   476  000E                     	;# 
   477  000F                     	;# 
   478  0010                     	;# 
   479  0011                     	;# 
   480  0012                     	;# 
   481  0013                     	;# 
   482  0014                     	;# 
   483  0015                     	;# 
   484  0015                     	;# 
   485  0016                     	;# 
   486  0017                     	;# 
   487  0018                     	;# 
   488  0019                     	;# 
   489  001A                     	;# 
   490  001C                     	;# 
   491  001D                     	;# 
   492  001E                     	;# 
   493  001F                     	;# 
   494  0081                     	;# 
   495  0085                     	;# 
   496  0086                     	;# 
   497  0087                     	;# 
   498  008C                     	;# 
   499  008D                     	;# 
   500  008E                     	;# 
   501  008F                     	;# 
   502  0090                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0095                     	;# 
   510  0096                     	;# 
   511  0096                     	;# 
   512  0097                     	;# 
   513  0098                     	;# 
   514  0099                     	;# 
   515  009A                     	;# 
   516  009B                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  010C                     	;# 
   520  010C                     	;# 
   521  010D                     	;# 
   522  010E                     	;# 
   523  010F                     	;# 
   524  0115                     	;# 
   525  0116                     	;# 
   526  0118                     	;# 
   527  0119                     	;# 
   528  011A                     	;# 
   529  011B                     	;# 
   530  011E                     	;# 
   531  011F                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  019D                     	;# 
   535  019E                     	;# 
   536                           
   537                           	psect	strings
   538  0100                     __pstrings:	
   539  0100                     stringtab:	
   540  0100                     __stringtab:	
   541  0100                     stringcode:	
   542                           ;	String table - string pointers are 1 byte each
   543                           
   544  0100                     stringdir:	
   545  0100  3001               	movlw	high stringdir
   546  0101  008A               	movwf	10
   547  0102  0804               	movf	4,w
   548  0103  0A84               	incf	4,f
   549  0104  0782               	addwf	2,f
   550  0105                     __stringbase:	
   551  0105  3400               	retlw	0
   552  0106                     __end_of__stringtab:	
   553  0106                     exp@coeff:	
   554  0106  3400               	retlw	0
   555  0107  3480               	retlw	128
   556  0108  343F               	retlw	63
   557  0109  3472               	retlw	114
   558  010A  3431               	retlw	49
   559  010B  343F               	retlw	63
   560  010C  34FE               	retlw	254
   561  010D  3475               	retlw	117
   562  010E  343E               	retlw	62
   563  010F  3458               	retlw	88
   564  0110  3463               	retlw	99
   565  0111  343D               	retlw	61
   566  0112  3495               	retlw	149
   567  0113  341D               	retlw	29
   568  0114  343C               	retlw	60
   569  0115  34C5               	retlw	197
   570  0116  34AE               	retlw	174
   571  0117  343A               	retlw	58
   572  0118  3479               	retlw	121
   573  0119  3421               	retlw	33
   574  011A  3439               	retlw	57
   575  011B  3494               	retlw	148
   576  011C  3480               	retlw	128
   577  011D  3437               	retlw	55
   578  011E  3493               	retlw	147
   579  011F  34A7               	retlw	167
   580  0120  3435               	retlw	53
   581  0121  3456               	retlw	86
   582  0122  3415               	retlw	21
   583  0123  3434               	retlw	52
   584  0124                     __end_ofexp@coeff:	
   585  0124                     log@coeff:	
   586  0124  3400               	retlw	0
   587  0125  3400               	retlw	0
   588  0126  3400               	retlw	0
   589  0127  3400               	retlw	0
   590  0128  3480               	retlw	128
   591  0129  343F               	retlw	63
   592  012A  34F0               	retlw	240
   593  012B  34FF               	retlw	255
   594  012C  34BE               	retlw	190
   595  012D  34E2               	retlw	226
   596  012E  34A9               	retlw	169
   597  012F  343E               	retlw	62
   598  0130  3483               	retlw	131
   599  0131  3476               	retlw	118
   600  0132  34BE               	retlw	190
   601  0133  34AE               	retlw	174
   602  0134  342B               	retlw	43
   603  0135  343E               	retlw	62
   604  0136  343C               	retlw	60
   605  0137  34C3               	retlw	195
   606  0138  34BD               	retlw	189
   607  0139  34D2               	retlw	210
   608  013A  3413               	retlw	19
   609  013B  343D               	retlw	61
   610  013C  3478               	retlw	120
   611  013D  34D3               	retlw	211
   612  013E  34BB               	retlw	187
   613  013F                     __end_oflog@coeff:	
   614  000B                     _INTCONbits	set	11
   615  000C                     _PIR1bits	set	12
   616  0005                     _PORTA	set	5
   617  0006                     _PORTB	set	6
   618  0007                     _PORTC	set	7
   619  001A                     _RCREG	set	26
   620  0018                     _RCSTAbits	set	24
   621  0001                     _TMR0	set	1
   622  0019                     _TXREG	set	25
   623  002A                     _RA2	set	42
   624  002D                     _RA5	set	45
   625  0034                     _RB4	set	52
   626  0036                     _RB6	set	54
   627  0038                     _RC0	set	56
   628  0039                     _RC1	set	57
   629  003A                     _RC2	set	58
   630  003B                     _RC3	set	59
   631  003C                     _RC4	set	60
   632  003D                     _RC5	set	61
   633  003E                     _RC6	set	62
   634  0065                     _RCIF	set	101
   635  0064                     _TXIF	set	100
   636  009B                     _BAUDCTLbits	set	155
   637  0081                     _OPTION_REGbits	set	129
   638  008F                     _OSCCONbits	set	143
   639  008C                     _PIE1bits	set	140
   640  0099                     _SPBRG	set	153
   641  009A                     _SPBRGH	set	154
   642  0085                     _TRISA	set	133
   643  0086                     _TRISB	set	134
   644  0086                     _TRISBbits	set	134
   645  0087                     _TRISC	set	135
   646  0098                     _TXSTAbits	set	152
   647  011E                     _ANSEL	set	286
   648  011F                     _ANSELH	set	287
   649  013F                     __stringdata:	
   650  013F                     STR_1:	
   651  013F  3465               	retlw	101	;'e'
   652  0140  346E               	retlw	110	;'n'
   653  0141  3464               	retlw	100	;'d'
   654  0142  3420               	retlw	32	;' '
   655  0143  346F               	retlw	111	;'o'
   656  0144  3466               	retlw	102	;'f'
   657  0145  3420               	retlw	32	;' '
   658  0146  346C               	retlw	108	;'l'
   659  0147  3469               	retlw	105	;'i'
   660  0148  346E               	retlw	110	;'n'
   661  0149  3465               	retlw	101	;'e'
   662  014A  340A               	retlw	10
   663  014B  3400               	retlw	0
   664  014C                     STR_2:	
   665  014C  3473               	retlw	115	;'s'
   666  014D  3461               	retlw	97	;'a'
   667  014E  346C               	retlw	108	;'l'
   668  014F  3475               	retlw	117	;'u'
   669  0150  3474               	retlw	116	;'t'
   670  0151  3400               	retlw	0
   671  0152                     __end_of__stringdata:	
   672                           
   673                           ; #config settings
   674  0000                     
   675                           	psect	cinit
   676  0013                     start_initialization:	
   677  0013                     __initialization:	
   678                           
   679                           ; Clear objects allocated to COMMON
   680  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   681  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   682  0015                     end_of_initialization:	
   683                           ;End of C runtime variable initialization code
   684                           
   685  0015                     __end_of__initialization:	
   686  0015  0183               	clrf	3
   687  0016  118A  2818         	ljmp	_main	;jump to C main() function
   688                           
   689                           	psect	bssCOMMON
   690  0077                     __pbssCOMMON:	
   691  0077                     _errno:	
   692  0077                     	ds	2
   693                           
   694                           	psect	cstackCOMMON
   695  0070                     __pcstackCOMMON:	
   696  0070                     ?_uart_putc:	
   697  0070                     ??_uart_putc:	
   698                           ; 0 bytes @ 0x0
   699                           
   700  0070                     ??_uart_getc:	
   701                           ; 0 bytes @ 0x0
   702                           
   703  0070                     ?_ConfigureOscillator:	
   704                           ; 0 bytes @ 0x0
   705                           
   706  0070                     ?_initUart:	
   707                           ; 0 bytes @ 0x0
   708                           
   709  0070                     ?_Lcd4_Init:	
   710                           ; 0 bytes @ 0x0
   711                           
   712  0070                     ?_Lcd4_Cmd:	
   713                           ; 0 bytes @ 0x0
   714                           
   715  0070                     ?_Lcd4_Write_String:	
   716                           ; 0 bytes @ 0x0
   717                           
   718  0070                     ?_Lcd4_Shift_Right:	
   719                           ; 0 bytes @ 0x0
   720                           
   721  0070                     ?_Lcd4_Clear:	
   722                           ; 0 bytes @ 0x0
   723                           
   724  0070                     ?_isr:	
   725                           ; 0 bytes @ 0x0
   726                           
   727  0070                     ?_main:	
   728                           ; 0 bytes @ 0x0
   729                           
   730  0070                     ?_Lcd4_Port:	
   731                           ; 0 bytes @ 0x0
   732                           
   733  0070                     ?_Lcd4_Write_Char:	
   734                           ; 0 bytes @ 0x0
   735                           
   736  0070                     ?_uart_getc:	
   737                           ; 0 bytes @ 0x0
   738                           
   739  0070                     uart_putc@data:	
   740                           ; 1 bytes @ 0x0
   741                           
   742                           
   743                           ; 1 bytes @ 0x0
   744  0070                     	ds	1
   745  0071                     ??_isr:	
   746                           
   747                           ; 0 bytes @ 0x1
   748  0071                     	ds	4
   749  0075                     ??_ConfigureOscillator:	
   750  0075                     ??_initUart:	
   751                           ; 0 bytes @ 0x5
   752                           
   753  0075                     ??_Lcd4_Port:	
   754                           ; 0 bytes @ 0x5
   755                           
   756  0075                     ?_strcpy:	
   757                           ; 0 bytes @ 0x5
   758                           
   759  0075                     Lcd4_Port@a:	
   760                           ; 2 bytes @ 0x5
   761                           
   762  0075                     strcpy@from:	
   763                           ; 1 bytes @ 0x5
   764                           
   765                           
   766                           ; 1 bytes @ 0x5
   767  0075                     	ds	1
   768  0076                     ??_strcpy:	
   769  0076                     ??_Lcd4_Write_String:	
   770                           ; 0 bytes @ 0x6
   771                           
   772  0076                     Lcd4_Cmd@a:	
   773                           ; 0 bytes @ 0x6
   774                           
   775                           
   776                           ; 1 bytes @ 0x6
   777  0076                     	ds	1
   778  0077                     ??_Lcd4_Shift_Right:	
   779  0077                     ??_Lcd4_Clear:	
   780                           ; 0 bytes @ 0x7
   781                           
   782                           
   783                           	psect	cstackBANK0
   784  0020                     __pcstackBANK0:	
   785                           ; 0 bytes @ 0x7
   786                           
   787  0020                     ??_Lcd4_Cmd:	
   788  0020                     ??_Lcd4_Write_Char:	
   789                           ; 0 bytes @ 0x0
   790                           
   791  0020                     strcpy@to:	
   792                           ; 0 bytes @ 0x0
   793                           
   794                           
   795                           ; 1 bytes @ 0x0
   796  0020                     	ds	1
   797  0021                     strcpy@cp:	
   798                           
   799                           ; 1 bytes @ 0x1
   800  0021                     	ds	1
   801  0022                     ??_Lcd4_Init:	
   802  0022                     Lcd4_Write_Char@temp:	
   803                           ; 0 bytes @ 0x2
   804                           
   805                           
   806                           ; 1 bytes @ 0x2
   807  0022                     	ds	1
   808  0023                     Lcd4_Write_Char@y:	
   809                           
   810                           ; 1 bytes @ 0x3
   811  0023                     	ds	1
   812  0024                     Lcd4_Write_Char@a:	
   813                           
   814                           ; 1 bytes @ 0x4
   815  0024                     	ds	1
   816  0025                     Lcd4_Write_String@a:	
   817                           
   818                           ; 1 bytes @ 0x5
   819  0025                     	ds	1
   820  0026                     Lcd4_Write_String@i:	
   821                           
   822                           ; 2 bytes @ 0x6
   823  0026                     	ds	2
   824  0028                     ??_main:	
   825                           
   826                           ; 0 bytes @ 0x8
   827  0028                     	ds	3
   828  002B                     main@j:	
   829                           
   830                           ; 2 bytes @ 0xB
   831  002B                     	ds	2
   832  002D                     main@character:	
   833                           
   834                           ; 1 bytes @ 0xD
   835  002D                     	ds	1
   836  002E                     main@string:	
   837                           
   838                           ; 1 bytes @ 0xE
   839  002E                     	ds	1
   840  002F                     main@address:	
   841                           
   842                           ; 1 bytes @ 0xF
   843  002F                     	ds	1
   844  0030                     main@i:	
   845                           
   846                           ; 2 bytes @ 0x10
   847  0030                     	ds	2
   848                           
   849                           	psect	maintext
   850  0018                     __pmaintext:	
   851 ;;
   852 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   853 ;;
   854 ;; *************** function _main *****************
   855 ;; Defined at:
   856 ;;		line 30 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;		None
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  i               2   16[BANK0 ] int 
   861 ;;  j               2   11[BANK0 ] int 
   862 ;;  address         1   15[BANK0 ] unsigned char 
   863 ;;  string          1   14[BANK0 ] PTR unsigned char 
   864 ;;  character       1   13[BANK0 ] unsigned char 
   865 ;; Return value:  Size  Location     Type
   866 ;;		None               void
   867 ;; Registers used:
   868 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 17F/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   874 ;;      Params:         0       0       0       0
   875 ;;      Locals:         0       7       0       0
   876 ;;      Temps:          0       3       0       0
   877 ;;      Totals:         0      10       0       0
   878 ;;Total ram usage:       10 bytes
   879 ;; Hardware stack levels required when called:    5
   880 ;; This function calls:
   881 ;;		_ConfigureOscillator
   882 ;;		_Lcd4_Clear
   883 ;;		_Lcd4_Cmd
   884 ;;		_Lcd4_Init
   885 ;;		_Lcd4_Shift_Right
   886 ;;		_Lcd4_Write_String
   887 ;;		_initUart
   888 ;;		_strcpy
   889 ;; This function is called by:
   890 ;;		Startup code after reset
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _main
   896  0018                     _main:	
   897                           
   898                           ;main.c: 36: ConfigureOscillator();
   899                           
   900                           ;incstack = 0
   901                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   902  0018  118A  2279  118A   	fcall	_ConfigureOscillator
   903                           
   904                           ;main.c: 38: initUart();
   905  001B  118A  21CE  118A   	fcall	_initUart
   906                           
   907                           ;main.c: 43: TRISC = 0x0;
   908  001E  1683               	bsf	3,5	;RP0=1, select bank1
   909  001F  1303               	bcf	3,6	;RP1=0, select bank1
   910  0020  0187               	clrf	7	;volatile
   911                           
   912                           ;main.c: 44: PORTC = 0x0;
   913  0021  1283               	bcf	3,5	;RP0=0, select bank0
   914  0022  1303               	bcf	3,6	;RP1=0, select bank0
   915  0023  0187               	clrf	7	;volatile
   916                           
   917                           ;main.c: 47: char * string;
   918                           ;main.c: 48: strcpy(string, "end of line\n");
   919  0024  303A               	movlw	(STR_1-__stringbase)& (0+255)
   920  0025  00A8               	movwf	??_main
   921  0026  0828               	movf	??_main,w
   922  0027  00F5               	movwf	strcpy@from
   923  0028  082E               	movf	main@string,w
   924  0029  118A  220F  118A   	fcall	_strcpy
   925                           
   926                           ;main.c: 50: int j=1;
   927  002C  3001               	movlw	1
   928  002D  1283               	bcf	3,5	;RP0=0, select bank0
   929  002E  1303               	bcf	3,6	;RP1=0, select bank0
   930  002F  00AB               	movwf	main@j
   931  0030  3000               	movlw	0
   932  0031  00AC               	movwf	main@j+1
   933                           
   934                           ;main.c: 52: TRISA = 0x0;
   935  0032  1683               	bsf	3,5	;RP0=1, select bank1
   936  0033  1303               	bcf	3,6	;RP1=0, select bank1
   937  0034  0185               	clrf	5	;volatile
   938                           
   939                           ;main.c: 53: TRISB = 0x0;
   940  0035  0186               	clrf	6	;volatile
   941                           
   942                           ;main.c: 54: TRISC = 0x0;
   943  0036  0187               	clrf	7	;volatile
   944                           
   945                           ;main.c: 56: PORTA = 0x00;
   946  0037  1283               	bcf	3,5	;RP0=0, select bank0
   947  0038  1303               	bcf	3,6	;RP1=0, select bank0
   948  0039  0185               	clrf	5	;volatile
   949                           
   950                           ;main.c: 57: PORTB = 0x00;
   951  003A  0186               	clrf	6	;volatile
   952                           
   953                           ;main.c: 58: PORTC = 0x00;
   954  003B  0187               	clrf	7	;volatile
   955                           
   956                           ;main.c: 60: _delay((unsigned long)((2000)*(8000000UL/4000.0)));
   957  003C  3015               	movlw	21
   958  003D  00AA               	movwf	??_main+2
   959  003E  304B               	movlw	75
   960  003F  00A9               	movwf	??_main+1
   961  0040  30D1               	movlw	209
   962  0041  00A8               	movwf	??_main
   963  0042                     u617:	
   964  0042  0BA8               	decfsz	??_main,f
   965  0043  2842               	goto	u617
   966  0044  0BA9               	decfsz	??_main+1,f
   967  0045  2842               	goto	u617
   968  0046  0BAA               	decfsz	??_main+2,f
   969  0047  2842               	goto	u617
   970  0048  0000               	nop
   971                           
   972                           ;main.c: 62: Lcd4_Init();
   973  0049  118A  219A  118A   	fcall	_Lcd4_Init
   974                           
   975                           ;main.c: 63: char character = 0x49;
   976  004C  3049               	movlw	73
   977  004D  1283               	bcf	3,5	;RP0=0, select bank0
   978  004E  1303               	bcf	3,6	;RP1=0, select bank0
   979  004F  00A8               	movwf	??_main
   980  0050  0828               	movf	??_main,w
   981  0051  00AD               	movwf	main@character
   982                           
   983                           ;main.c: 64: char address = 0x00;
   984  0052  01AF               	clrf	main@address
   985                           
   986                           ;main.c: 65: Lcd4_Cmd(0x08);
   987  0053  3008               	movlw	8
   988  0054  118A  2261  118A   	fcall	_Lcd4_Cmd
   989                           
   990                           ;main.c: 66: Lcd4_Cmd(address);
   991  0057  1283               	bcf	3,5	;RP0=0, select bank0
   992  0058  1303               	bcf	3,6	;RP1=0, select bank0
   993  0059  082F               	movf	main@address,w
   994  005A  118A  2261  118A   	fcall	_Lcd4_Cmd
   995                           
   996                           ;main.c: 67: int i = 0;
   997  005D  1283               	bcf	3,5	;RP0=0, select bank0
   998  005E  1303               	bcf	3,6	;RP1=0, select bank0
   999  005F  01B0               	clrf	main@i
  1000  0060  01B1               	clrf	main@i+1
  1001  0061                     l2036:	
  1002                           ;main.c: 68: while(1){
  1003                           
  1004                           
  1005                           ;main.c: 73: Lcd4_Cmd(0x08);
  1006  0061  3008               	movlw	8
  1007  0062  118A  2261  118A   	fcall	_Lcd4_Cmd
  1008                           
  1009                           ;main.c: 74: Lcd4_Cmd(address);
  1010  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1011  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1012  0067  082F               	movf	main@address,w
  1013  0068  118A  2261  118A   	fcall	_Lcd4_Cmd
  1014                           
  1015                           ;main.c: 75: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1016  006B  301A               	movlw	26
  1017  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1018  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1019  006E  00A9               	movwf	??_main+1
  1020  006F  30F8               	movlw	248
  1021  0070  00A8               	movwf	??_main
  1022  0071                     u627:	
  1023  0071  0BA8               	decfsz	??_main,f
  1024  0072  2871               	goto	u627
  1025  0073  0BA9               	decfsz	??_main+1,f
  1026  0074  2871               	goto	u627
  1027  0075  0000               	nop
  1028                           
  1029                           ;main.c: 77: Lcd4_Write_String("salut");
  1030  0076  3047               	movlw	(STR_2-__stringbase)& (0+255)
  1031  0077  118A  21EF  118A   	fcall	_Lcd4_Write_String
  1032                           
  1033                           ;main.c: 79: _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1034  007A  3006               	movlw	6
  1035  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  007D  00AA               	movwf	??_main+2
  1038  007E  3013               	movlw	19
  1039  007F  00A9               	movwf	??_main+1
  1040  0080  30B1               	movlw	177
  1041  0081  00A8               	movwf	??_main
  1042  0082                     u637:	
  1043  0082  0BA8               	decfsz	??_main,f
  1044  0083  2882               	goto	u637
  1045  0084  0BA9               	decfsz	??_main+1,f
  1046  0085  2882               	goto	u637
  1047  0086  0BAA               	decfsz	??_main+2,f
  1048  0087  2882               	goto	u637
  1049  0088  2889               	nop2
  1050                           
  1051                           ;main.c: 81: for(i=0;i<15;i++){
  1052  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1053  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1054  008B  01B0               	clrf	main@i
  1055  008C  01B1               	clrf	main@i+1
  1056  008D  0831               	movf	main@i+1,w
  1057  008E  3A80               	xorlw	128
  1058  008F  00FF               	movwf	127
  1059  0090  3080               	movlw	128
  1060  0091  027F               	subwf	127,w
  1061  0092  1D03               	skipz
  1062  0093  2896               	goto	u555
  1063  0094  300F               	movlw	15
  1064  0095  0230               	subwf	main@i,w
  1065  0096                     u555:	
  1066  0096  1803               	btfsc	3,0
  1067  0097  28BD               	goto	l2058
  1068  0098                     l2050:	
  1069                           
  1070                           ;main.c: 82: Lcd4_Shift_Right();
  1071  0098  118A  228F  118A   	fcall	_Lcd4_Shift_Right
  1072                           
  1073                           ;main.c: 83: _delay((unsigned long)((300)*(8000000UL/4000.0)));
  1074  009B  3004               	movlw	4
  1075  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1076  009D  1303               	bcf	3,6	;RP1=0, select bank0
  1077  009E  00AA               	movwf	??_main+2
  1078  009F  300C               	movlw	12
  1079  00A0  00A9               	movwf	??_main+1
  1080  00A1  3035               	movlw	53
  1081  00A2  00A8               	movwf	??_main
  1082  00A3                     u647:	
  1083  00A3  0BA8               	decfsz	??_main,f
  1084  00A4  28A3               	goto	u647
  1085  00A5  0BA9               	decfsz	??_main+1,f
  1086  00A6  28A3               	goto	u647
  1087  00A7  0BAA               	decfsz	??_main+2,f
  1088  00A8  28A3               	goto	u647
  1089  00A9  28AA               	nop2
  1090  00AA  3001               	movlw	1
  1091  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00AD  07B0               	addwf	main@i,f
  1094  00AE  1803               	skipnc
  1095  00AF  0AB1               	incf	main@i+1,f
  1096  00B0  3000               	movlw	0
  1097  00B1  07B1               	addwf	main@i+1,f
  1098  00B2  0831               	movf	main@i+1,w
  1099  00B3  3A80               	xorlw	128
  1100  00B4  00FF               	movwf	127
  1101  00B5  3080               	movlw	128
  1102  00B6  027F               	subwf	127,w
  1103  00B7  1D03               	skipz
  1104  00B8  28BB               	goto	u565
  1105  00B9  300F               	movlw	15
  1106  00BA  0230               	subwf	main@i,w
  1107  00BB                     u565:	
  1108  00BB  1C03               	skipc
  1109  00BC  2898               	goto	l2050
  1110  00BD                     l2058:	
  1111                           
  1112                           ;main.c: 84: }
  1113                           ;main.c: 86: Lcd4_Clear();
  1114  00BD  118A  2297  118A   	fcall	_Lcd4_Clear
  1115  00C0  2861               	goto	l2036
  1116  00C1                     __end_of_main:	
  1117                           
  1118                           	psect	text1
  1119  020F                     __ptext1:	
  1120 ;; *************** function _strcpy *****************
  1121 ;; Defined at:
  1122 ;;		line 8 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strcpy.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  to              1    wreg     PTR unsigned char 
  1125 ;;  from            1    5[COMMON] PTR const unsigned char 
  1126 ;;		 -> STR_1(13), 
  1127 ;; Auto vars:     Size  Location     Type
  1128 ;;  to              1    0[BANK0 ] PTR unsigned char 
  1129 ;;  cp              1    1[BANK0 ] PTR unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  2    5[COMMON] PTR unsigned char 
  1132 ;; Registers used:
  1133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1139 ;;      Params:         1       0       0       0
  1140 ;;      Locals:         0       2       0       0
  1141 ;;      Temps:          1       0       0       0
  1142 ;;      Totals:         2       2       0       0
  1143 ;;Total ram usage:        4 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    2
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_main
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _strcpy
  1155  020F                     _strcpy:	
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  1159                           ;strcpy@to stored from wreg
  1160  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0211  00A0               	movwf	strcpy@to
  1163  0212  0820               	movf	strcpy@to,w
  1164  0213  00F6               	movwf	??_strcpy
  1165  0214  0876               	movf	??_strcpy,w
  1166  0215  00A1               	movwf	strcpy@cp
  1167  0216                     l1970:	
  1168  0216  0875               	movf	strcpy@from,w
  1169  0217  0084               	movwf	4
  1170  0218  118A  2100  118A   	fcall	stringdir
  1171  021B  00F6               	movwf	??_strcpy
  1172  021C  0821               	movf	strcpy@cp,w
  1173  021D  0084               	movwf	4
  1174  021E  0876               	movf	??_strcpy,w
  1175  021F  1383               	bcf	3,7	;select IRP bank0
  1176  0220  0080               	movwf	0
  1177  0221  0880               	movf	0,f
  1178  0222  1903               	btfsc	3,2
  1179  0223  0008               	return
  1180  0224  3001               	movlw	1
  1181  0225  00F6               	movwf	??_strcpy
  1182  0226  0876               	movf	??_strcpy,w
  1183  0227  07A1               	addwf	strcpy@cp,f
  1184  0228  3001               	movlw	1
  1185  0229  00F6               	movwf	??_strcpy
  1186  022A  0876               	movf	??_strcpy,w
  1187  022B  07F5               	addwf	strcpy@from,f
  1188  022C  2A16               	goto	l1970
  1189  022D                     __end_of_strcpy:	
  1190                           ;	Return value of _strcpy is never used
  1191                           
  1192                           
  1193                           	psect	text2
  1194  01CE                     __ptext2:	
  1195 ;; *************** function _initUart *****************
  1196 ;; Defined at:
  1197 ;;		line 43 in file "system.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;		None
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;		None
  1202 ;; Return value:  Size  Location     Type
  1203 ;;		None               void
  1204 ;; Registers used:
  1205 ;;		wreg, status,2
  1206 ;; Tracked objects:
  1207 ;;		On entry : 0/0
  1208 ;;		On exit  : 0/0
  1209 ;;		Unchanged: 0/0
  1210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1211 ;;      Params:         0       0       0       0
  1212 ;;      Locals:         0       0       0       0
  1213 ;;      Temps:          0       0       0       0
  1214 ;;      Totals:         0       0       0       0
  1215 ;;Total ram usage:        0 bytes
  1216 ;; Hardware stack levels used:    1
  1217 ;; Hardware stack levels required when called:    2
  1218 ;; This function calls:
  1219 ;;		Nothing
  1220 ;; This function is called by:
  1221 ;;		_main
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _initUart
  1227  01CE                     _initUart:	
  1228                           
  1229                           ;system.c: 46: INTCONbits.GIE = 1;
  1230                           
  1231                           ;incstack = 0
  1232                           ; Regs used in _initUart: [wreg+status,2]
  1233  01CE  178B               	bsf	11,7	;volatile
  1234                           
  1235                           ;system.c: 47: INTCONbits.PEIE =1;
  1236  01CF  170B               	bsf	11,6	;volatile
  1237                           
  1238                           ;system.c: 48: PIE1bits.RCIE =1;
  1239  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  1240  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  1241  01D2  168C               	bsf	12,5	;volatile
  1242                           
  1243                           ;system.c: 50: TXSTAbits.TXEN = 0;
  1244  01D3  1298               	bcf	24,5	;volatile
  1245                           
  1246                           ;system.c: 54: SPBRG = (8000000UL/9600/64)-1;
  1247  01D4  300C               	movlw	12
  1248  01D5  0099               	movwf	25	;volatile
  1249                           
  1250                           ;system.c: 56: SPBRGH = 0x00;
  1251  01D6  019A               	clrf	26	;volatile
  1252                           
  1253                           ;system.c: 58: ANSEL =0;
  1254  01D7  1283               	bcf	3,5	;RP0=0, select bank2
  1255  01D8  1703               	bsf	3,6	;RP1=1, select bank2
  1256  01D9  019E               	clrf	30	;volatile
  1257                           
  1258                           ;system.c: 59: ANSELH= 0;
  1259  01DA  019F               	clrf	31	;volatile
  1260                           
  1261                           ;system.c: 62: TRISBbits.TRISB5 = 1;
  1262  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  1263  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  1264  01DD  1686               	bsf	6,5	;volatile
  1265                           
  1266                           ;system.c: 63: TRISBbits.TRISB7 = 0;
  1267  01DE  1386               	bcf	6,7	;volatile
  1268                           
  1269                           ;system.c: 68: TXSTAbits.TX9 = 0;
  1270  01DF  1318               	bcf	24,6	;volatile
  1271                           
  1272                           ;system.c: 71: TXSTAbits.SYNC = 0;
  1273  01E0  1218               	bcf	24,4	;volatile
  1274                           
  1275                           ;system.c: 72: TXREG = 0;
  1276  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1277  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1278  01E3  0199               	clrf	25	;volatile
  1279                           
  1280                           ;system.c: 75: TXSTAbits.BRGH = 0;
  1281  01E4  1683               	bsf	3,5	;RP0=1, select bank1
  1282  01E5  1303               	bcf	3,6	;RP1=0, select bank1
  1283  01E6  1118               	bcf	24,2	;volatile
  1284                           
  1285                           ;system.c: 76: BAUDCTLbits.BRG16 = 0;
  1286  01E7  119B               	bcf	27,3	;volatile
  1287                           
  1288                           ;system.c: 78: BAUDCTLbits.ABDEN = 0;
  1289  01E8  101B               	bcf	27,0	;volatile
  1290                           
  1291                           ;system.c: 83: TXSTAbits.TXEN = 1;
  1292  01E9  1698               	bsf	24,5	;volatile
  1293                           
  1294                           ;system.c: 84: RCSTAbits.CREN = 1;
  1295  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1296  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1297  01EC  1618               	bsf	24,4	;volatile
  1298                           
  1299                           ;system.c: 85: RCSTAbits.SPEN = 1;
  1300  01ED  1798               	bsf	24,7	;volatile
  1301  01EE  0008               	return
  1302  01EF                     __end_of_initUart:	
  1303                           
  1304                           	psect	text3
  1305  01EF                     __ptext3:	
  1306 ;; *************** function _Lcd4_Write_String *****************
  1307 ;; Defined at:
  1308 ;;		line 316 in file "LCD_screen.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  a               1    wreg     PTR unsigned char 
  1311 ;;		 -> STR_2(6), 
  1312 ;; Auto vars:     Size  Location     Type
  1313 ;;  a               1    5[BANK0 ] PTR unsigned char 
  1314 ;;		 -> STR_2(6), 
  1315 ;;  i               2    6[BANK0 ] int 
  1316 ;; Return value:  Size  Location     Type
  1317 ;;		None               void
  1318 ;; Registers used:
  1319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1325 ;;      Params:         0       0       0       0
  1326 ;;      Locals:         0       3       0       0
  1327 ;;      Temps:          0       0       0       0
  1328 ;;      Totals:         0       3       0       0
  1329 ;;Total ram usage:        3 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    4
  1332 ;; This function calls:
  1333 ;;		_Lcd4_Write_Char
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _Lcd4_Write_String
  1341  01EF                     _Lcd4_Write_String:	
  1342                           
  1343                           ;incstack = 0
  1344                           ; Regs used in _Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1345                           ;Lcd4_Write_String@a stored from wreg
  1346  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1347  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1348  01F1  00A5               	movwf	Lcd4_Write_String@a
  1349                           
  1350                           ;LCD_screen.c: 318: int i;
  1351                           ;LCD_screen.c: 319: for(i=0;a[i]!='\0';i++)
  1352  01F2  01A6               	clrf	Lcd4_Write_String@i
  1353  01F3  01A7               	clrf	Lcd4_Write_String@i+1
  1354  01F4                     l1994:	
  1355  01F4  0826               	movf	Lcd4_Write_String@i,w
  1356  01F5  0725               	addwf	Lcd4_Write_String@a,w
  1357  01F6  0084               	movwf	4
  1358  01F7  118A  2100  118A   	fcall	stringdir
  1359  01FA  3800               	iorlw	0
  1360  01FB  1903               	btfsc	3,2
  1361  01FC  0008               	return
  1362                           
  1363                           ;LCD_screen.c: 320: Lcd4_Write_Char(a[i]);
  1364  01FD  0826               	movf	Lcd4_Write_String@i,w
  1365  01FE  0725               	addwf	Lcd4_Write_String@a,w
  1366  01FF  0084               	movwf	4
  1367  0200  118A  2100  118A   	fcall	stringdir
  1368  0203  118A  2152  118A   	fcall	_Lcd4_Write_Char
  1369  0206  3001               	movlw	1
  1370  0207  1283               	bcf	3,5	;RP0=0, select bank0
  1371  0208  1303               	bcf	3,6	;RP1=0, select bank0
  1372  0209  07A6               	addwf	Lcd4_Write_String@i,f
  1373  020A  1803               	skipnc
  1374  020B  0AA7               	incf	Lcd4_Write_String@i+1,f
  1375  020C  3000               	movlw	0
  1376  020D  07A7               	addwf	Lcd4_Write_String@i+1,f
  1377  020E  29F4               	goto	l1994
  1378  020F                     __end_of_Lcd4_Write_String:	
  1379                           
  1380                           	psect	text4
  1381  0152                     __ptext4:	
  1382 ;; *************** function _Lcd4_Write_Char *****************
  1383 ;; Defined at:
  1384 ;;		line 299 in file "LCD_screen.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  a               1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  a               1    4[BANK0 ] unsigned char 
  1389 ;;  y               1    3[BANK0 ] unsigned char 
  1390 ;;  temp            1    2[BANK0 ] unsigned char 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;		None               void
  1393 ;; Registers used:
  1394 ;;		wreg, status,2, status,0, pclath, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1400 ;;      Params:         0       0       0       0
  1401 ;;      Locals:         0       3       0       0
  1402 ;;      Temps:          0       2       0       0
  1403 ;;      Totals:         0       5       0       0
  1404 ;;Total ram usage:        5 bytes
  1405 ;; Hardware stack levels used:    1
  1406 ;; Hardware stack levels required when called:    3
  1407 ;; This function calls:
  1408 ;;		_Lcd4_Port
  1409 ;; This function is called by:
  1410 ;;		_Lcd4_Write_String
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _Lcd4_Write_Char
  1416  0152                     _Lcd4_Write_Char:	
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1420                           ;Lcd4_Write_Char@a stored from wreg
  1421  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0154  00A4               	movwf	Lcd4_Write_Char@a
  1424                           
  1425                           ;LCD_screen.c: 301: char temp,y;
  1426                           ;LCD_screen.c: 302: temp = a&0x0F;
  1427  0155  0824               	movf	Lcd4_Write_Char@a,w
  1428  0156  390F               	andlw	15
  1429  0157  00A0               	movwf	??_Lcd4_Write_Char
  1430  0158  0820               	movf	??_Lcd4_Write_Char,w
  1431  0159  00A2               	movwf	Lcd4_Write_Char@temp
  1432                           
  1433                           ;LCD_screen.c: 303: y = a&0xF0;
  1434  015A  0824               	movf	Lcd4_Write_Char@a,w
  1435  015B  39F0               	andlw	240
  1436  015C  00A0               	movwf	??_Lcd4_Write_Char
  1437  015D  0820               	movf	??_Lcd4_Write_Char,w
  1438  015E  00A3               	movwf	Lcd4_Write_Char@y
  1439                           
  1440                           ;LCD_screen.c: 304: RA2 = 1;
  1441  015F  1505               	bsf	5,2	;volatile
  1442                           
  1443                           ;LCD_screen.c: 305: Lcd4_Port(y>>4);
  1444  0160  0823               	movf	Lcd4_Write_Char@y,w
  1445  0161  00A0               	movwf	??_Lcd4_Write_Char
  1446  0162  3004               	movlw	4
  1447  0163                     u525:	
  1448  0163  1003               	clrc
  1449  0164  0CA0               	rrf	??_Lcd4_Write_Char,f
  1450  0165  3EFF               	addlw	-1
  1451  0166  1D03               	skipz
  1452  0167  2963               	goto	u525
  1453  0168  0820               	movf	??_Lcd4_Write_Char,w
  1454  0169  118A  222D  118A   	fcall	_Lcd4_Port
  1455                           
  1456                           ;LCD_screen.c: 306: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1457  016C  300D               	movlw	13
  1458  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1459  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1460  016F  00A1               	movwf	??_Lcd4_Write_Char+1
  1461  0170  30FB               	movlw	251
  1462  0171  00A0               	movwf	??_Lcd4_Write_Char
  1463  0172                     u657:	
  1464  0172  0BA0               	decfsz	??_Lcd4_Write_Char,f
  1465  0173  2972               	goto	u657
  1466  0174  0BA1               	decfsz	??_Lcd4_Write_Char+1,f
  1467  0175  2972               	goto	u657
  1468  0176  2977               	nop2
  1469                           
  1470                           ;LCD_screen.c: 307: RC0 = 1;
  1471  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0179  1407               	bsf	7,0	;volatile
  1474                           
  1475                           ;LCD_screen.c: 308: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1476  017A  300D               	movlw	13
  1477  017B  00A1               	movwf	??_Lcd4_Write_Char+1
  1478  017C  30FB               	movlw	251
  1479  017D  00A0               	movwf	??_Lcd4_Write_Char
  1480  017E                     u667:	
  1481  017E  0BA0               	decfsz	??_Lcd4_Write_Char,f
  1482  017F  297E               	goto	u667
  1483  0180  0BA1               	decfsz	??_Lcd4_Write_Char+1,f
  1484  0181  297E               	goto	u667
  1485  0182  2983               	nop2
  1486                           
  1487                           ;LCD_screen.c: 309: RC0 = 0;
  1488  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0185  1007               	bcf	7,0	;volatile
  1491                           
  1492                           ;LCD_screen.c: 310: Lcd4_Port(temp);
  1493  0186  0822               	movf	Lcd4_Write_Char@temp,w
  1494  0187  118A  222D  118A   	fcall	_Lcd4_Port
  1495                           
  1496                           ;LCD_screen.c: 311: RC0 = 1;
  1497  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1498  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1499  018C  1407               	bsf	7,0	;volatile
  1500                           
  1501                           ;LCD_screen.c: 312: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  1502  018D  300D               	movlw	13
  1503  018E  00A1               	movwf	??_Lcd4_Write_Char+1
  1504  018F  30FB               	movlw	251
  1505  0190  00A0               	movwf	??_Lcd4_Write_Char
  1506  0191                     u677:	
  1507  0191  0BA0               	decfsz	??_Lcd4_Write_Char,f
  1508  0192  2991               	goto	u677
  1509  0193  0BA1               	decfsz	??_Lcd4_Write_Char+1,f
  1510  0194  2991               	goto	u677
  1511  0195  2996               	nop2
  1512                           
  1513                           ;LCD_screen.c: 313: RC0 = 0;
  1514  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0197  1303               	bcf	3,6	;RP1=0, select bank0
  1516  0198  1007               	bcf	7,0	;volatile
  1517  0199  0008               	return
  1518  019A                     __end_of_Lcd4_Write_Char:	
  1519                           
  1520                           	psect	text5
  1521  028F                     __ptext5:	
  1522 ;; *************** function _Lcd4_Shift_Right *****************
  1523 ;; Defined at:
  1524 ;;		line 323 in file "LCD_screen.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;		None
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;		None
  1529 ;; Return value:  Size  Location     Type
  1530 ;;		None               void
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, pclath, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1538 ;;      Params:         0       0       0       0
  1539 ;;      Locals:         0       0       0       0
  1540 ;;      Temps:          0       0       0       0
  1541 ;;      Totals:         0       0       0       0
  1542 ;;Total ram usage:        0 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    4
  1545 ;; This function calls:
  1546 ;;		_Lcd4_Cmd
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           
  1553                           ;psect for function _Lcd4_Shift_Right
  1554  028F                     _Lcd4_Shift_Right:	
  1555                           
  1556                           ;LCD_screen.c: 325: Lcd4_Cmd(0x01);
  1557                           
  1558                           ;incstack = 0
  1559                           ; Regs used in _Lcd4_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1560  028F  3001               	movlw	1
  1561  0290  118A  2261  118A   	fcall	_Lcd4_Cmd
  1562                           
  1563                           ;LCD_screen.c: 326: Lcd4_Cmd(0x0C);
  1564  0293  300C               	movlw	12
  1565  0294  118A  2261         	fcall	_Lcd4_Cmd
  1566  0296  0008               	return
  1567  0297                     __end_of_Lcd4_Shift_Right:	
  1568                           
  1569                           	psect	text6
  1570  019A                     __ptext6:	
  1571 ;; *************** function _Lcd4_Init *****************
  1572 ;; Defined at:
  1573 ;;		line 271 in file "LCD_screen.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;		None
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;		None
  1578 ;; Return value:  Size  Location     Type
  1579 ;;		None               void
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0, pclath, cstack
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1587 ;;      Params:         0       0       0       0
  1588 ;;      Locals:         0       0       0       0
  1589 ;;      Temps:          0       2       0       0
  1590 ;;      Totals:         0       2       0       0
  1591 ;;Total ram usage:        2 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    4
  1594 ;; This function calls:
  1595 ;;		_Lcd4_Cmd
  1596 ;; This function is called by:
  1597 ;;		_main
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           
  1602                           ;psect for function _Lcd4_Init
  1603  019A                     _Lcd4_Init:	
  1604                           
  1605                           ;LCD_screen.c: 274: RA5 = 0;
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _Lcd4_Init: [wreg+status,2+status,0+pclath+cstack]
  1609  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1610  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1611  019C  1285               	bcf	5,5	;volatile
  1612                           
  1613                           ;LCD_screen.c: 275: RA2 = 0;
  1614  019D  1105               	bcf	5,2	;volatile
  1615                           
  1616                           ;LCD_screen.c: 277: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1617  019E  301A               	movlw	26
  1618  019F  00A3               	movwf	??_Lcd4_Init+1
  1619  01A0  30F8               	movlw	248
  1620  01A1  00A2               	movwf	??_Lcd4_Init
  1621  01A2                     u687:	
  1622  01A2  0BA2               	decfsz	??_Lcd4_Init,f
  1623  01A3  29A2               	goto	u687
  1624  01A4  0BA3               	decfsz	??_Lcd4_Init+1,f
  1625  01A5  29A2               	goto	u687
  1626  01A6  0000               	nop
  1627                           
  1628                           ;LCD_screen.c: 278: Lcd4_Cmd(0x02);
  1629  01A7  3002               	movlw	2
  1630  01A8  118A  2261  118A   	fcall	_Lcd4_Cmd
  1631                           
  1632                           ;LCD_screen.c: 281: Lcd4_Cmd(0x02);
  1633  01AB  3002               	movlw	2
  1634  01AC  118A  2261  118A   	fcall	_Lcd4_Cmd
  1635                           
  1636                           ;LCD_screen.c: 282: Lcd4_Cmd(0x0C);
  1637  01AF  300C               	movlw	12
  1638  01B0  118A  2261  118A   	fcall	_Lcd4_Cmd
  1639                           
  1640                           ;LCD_screen.c: 285: Lcd4_Cmd(0x00);
  1641  01B3  3000               	movlw	0
  1642  01B4  118A  2261  118A   	fcall	_Lcd4_Cmd
  1643                           
  1644                           ;LCD_screen.c: 286: Lcd4_Cmd(0x0F);
  1645  01B7  300F               	movlw	15
  1646  01B8  118A  2261  118A   	fcall	_Lcd4_Cmd
  1647                           
  1648                           ;LCD_screen.c: 289: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  1649  01BB  301A               	movlw	26
  1650  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  1651  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  1652  01BE  00A3               	movwf	??_Lcd4_Init+1
  1653  01BF  30F8               	movlw	248
  1654  01C0  00A2               	movwf	??_Lcd4_Init
  1655  01C1                     u697:	
  1656  01C1  0BA2               	decfsz	??_Lcd4_Init,f
  1657  01C2  29C1               	goto	u697
  1658  01C3  0BA3               	decfsz	??_Lcd4_Init+1,f
  1659  01C4  29C1               	goto	u697
  1660  01C5  0000               	nop
  1661                           
  1662                           ;LCD_screen.c: 292: Lcd4_Cmd(0x00);
  1663  01C6  3000               	movlw	0
  1664  01C7  118A  2261  118A   	fcall	_Lcd4_Cmd
  1665                           
  1666                           ;LCD_screen.c: 293: Lcd4_Cmd(0x01);
  1667  01CA  3001               	movlw	1
  1668  01CB  118A  2261         	fcall	_Lcd4_Cmd
  1669  01CD  0008               	return
  1670  01CE                     __end_of_Lcd4_Init:	
  1671                           
  1672                           	psect	text7
  1673  0297                     __ptext7:	
  1674 ;; *************** function _Lcd4_Clear *****************
  1675 ;; Defined at:
  1676 ;;		line 244 in file "LCD_screen.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;		None
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;		None               void
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0, pclath, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1690 ;;      Params:         0       0       0       0
  1691 ;;      Locals:         0       0       0       0
  1692 ;;      Temps:          0       0       0       0
  1693 ;;      Totals:         0       0       0       0
  1694 ;;Total ram usage:        0 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    4
  1697 ;; This function calls:
  1698 ;;		_Lcd4_Cmd
  1699 ;; This function is called by:
  1700 ;;		_main
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           
  1705                           ;psect for function _Lcd4_Clear
  1706  0297                     _Lcd4_Clear:	
  1707                           
  1708                           ;LCD_screen.c: 246: Lcd4_Cmd(0);
  1709                           
  1710                           ;incstack = 0
  1711                           ; Regs used in _Lcd4_Clear: [wreg+status,2+status,0+pclath+cstack]
  1712  0297  3000               	movlw	0
  1713  0298  118A  2261  118A   	fcall	_Lcd4_Cmd
  1714                           
  1715                           ;LCD_screen.c: 247: Lcd4_Cmd(1);
  1716  029B  3001               	movlw	1
  1717  029C  118A  2261         	fcall	_Lcd4_Cmd
  1718  029E  0008               	return
  1719  029F                     __end_of_Lcd4_Clear:	
  1720                           
  1721                           	psect	text8
  1722  0261                     __ptext8:	
  1723 ;; *************** function _Lcd4_Cmd *****************
  1724 ;; Defined at:
  1725 ;;		line 235 in file "LCD_screen.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  a               1    wreg     unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  a               1    6[COMMON] unsigned char 
  1730 ;; Return value:  Size  Location     Type
  1731 ;;		None               void
  1732 ;; Registers used:
  1733 ;;		wreg, status,2, status,0, pclath, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1739 ;;      Params:         0       0       0       0
  1740 ;;      Locals:         1       0       0       0
  1741 ;;      Temps:          0       2       0       0
  1742 ;;      Totals:         1       2       0       0
  1743 ;;Total ram usage:        3 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; Hardware stack levels required when called:    3
  1746 ;; This function calls:
  1747 ;;		_Lcd4_Port
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;;		_Lcd4_Clear
  1751 ;;		_Lcd4_Init
  1752 ;;		_Lcd4_Shift_Right
  1753 ;;		_Lcd4_Set_Cursor
  1754 ;;		_Lcd4_Shift_Left
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function _Lcd4_Cmd
  1760  0261                     _Lcd4_Cmd:	
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in _Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1764                           ;Lcd4_Cmd@a stored from wreg
  1765  0261  00F6               	movwf	Lcd4_Cmd@a
  1766                           
  1767                           ;LCD_screen.c: 237: RA2 = 0;
  1768  0262  1283               	bcf	3,5	;RP0=0, select bank0
  1769  0263  1303               	bcf	3,6	;RP1=0, select bank0
  1770  0264  1105               	bcf	5,2	;volatile
  1771                           
  1772                           ;LCD_screen.c: 238: Lcd4_Port(a);
  1773  0265  0876               	movf	Lcd4_Cmd@a,w
  1774  0266  118A  222D  118A   	fcall	_Lcd4_Port
  1775                           
  1776                           ;LCD_screen.c: 239: RC0 = 1;
  1777  0269  1283               	bcf	3,5	;RP0=0, select bank0
  1778  026A  1303               	bcf	3,6	;RP1=0, select bank0
  1779  026B  1407               	bsf	7,0	;volatile
  1780                           
  1781                           ;LCD_screen.c: 240: _delay((unsigned long)((4)*(8000000UL/4000.0)));
  1782  026C  300B               	movlw	11
  1783  026D  00A1               	movwf	??_Lcd4_Cmd+1
  1784  026E  3062               	movlw	98
  1785  026F  00A0               	movwf	??_Lcd4_Cmd
  1786  0270                     u707:	
  1787  0270  0BA0               	decfsz	??_Lcd4_Cmd,f
  1788  0271  2A70               	goto	u707
  1789  0272  0BA1               	decfsz	??_Lcd4_Cmd+1,f
  1790  0273  2A70               	goto	u707
  1791  0274  0000               	nop
  1792                           
  1793                           ;LCD_screen.c: 241: RC0 = 0;
  1794  0275  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0276  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0277  1007               	bcf	7,0	;volatile
  1797  0278  0008               	return
  1798  0279                     __end_of_Lcd4_Cmd:	
  1799                           
  1800                           	psect	text9
  1801  022D                     __ptext9:	
  1802 ;; *************** function _Lcd4_Port *****************
  1803 ;; Defined at:
  1804 ;;		line 213 in file "LCD_screen.c"
  1805 ;; Parameters:    Size  Location     Type
  1806 ;;  a               1    wreg     unsigned char 
  1807 ;; Auto vars:     Size  Location     Type
  1808 ;;  a               1    5[COMMON] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;		None               void
  1811 ;; Registers used:
  1812 ;;		wreg
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1818 ;;      Params:         0       0       0       0
  1819 ;;      Locals:         1       0       0       0
  1820 ;;      Temps:          0       0       0       0
  1821 ;;      Totals:         1       0       0       0
  1822 ;;Total ram usage:        1 bytes
  1823 ;; Hardware stack levels used:    1
  1824 ;; Hardware stack levels required when called:    2
  1825 ;; This function calls:
  1826 ;;		Nothing
  1827 ;; This function is called by:
  1828 ;;		_Lcd4_Cmd
  1829 ;;		_Lcd4_Write_Char
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           
  1834                           ;psect for function _Lcd4_Port
  1835  022D                     _Lcd4_Port:	
  1836                           
  1837                           ;incstack = 0
  1838                           ; Regs used in _Lcd4_Port: [wreg]
  1839                           ;Lcd4_Port@a stored from wreg
  1840  022D  00F5               	movwf	Lcd4_Port@a
  1841                           
  1842                           ;LCD_screen.c: 215: if(a & 1)
  1843  022E  1C75               	btfss	Lcd4_Port@a,0
  1844  022F  2A34               	goto	l237
  1845                           
  1846                           ;LCD_screen.c: 216: RC3 = 1;
  1847  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1848  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1849  0232  1587               	bsf	7,3	;volatile
  1850  0233  2A37               	goto	l238
  1851  0234                     l237:	
  1852                           
  1853                           ;LCD_screen.c: 217: else
  1854                           ;LCD_screen.c: 218: RC3 = 0;
  1855  0234  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0235  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0236  1187               	bcf	7,3	;volatile
  1858  0237                     l238:	
  1859                           
  1860                           ;LCD_screen.c: 220: if(a & 2)
  1861  0237  1CF5               	btfss	Lcd4_Port@a,1
  1862  0238  2A3B               	goto	l239
  1863                           
  1864                           ;LCD_screen.c: 221: RB4 = 1;
  1865  0239  1606               	bsf	6,4	;volatile
  1866  023A  2A3C               	goto	l240
  1867  023B                     l239:	
  1868                           
  1869                           ;LCD_screen.c: 222: else
  1870                           ;LCD_screen.c: 223: RB4 = 0;
  1871  023B  1206               	bcf	6,4	;volatile
  1872  023C                     l240:	
  1873                           
  1874                           ;LCD_screen.c: 225: if(a & 4)
  1875  023C  1D75               	btfss	Lcd4_Port@a,2
  1876  023D  2A40               	goto	l241
  1877                           
  1878                           ;LCD_screen.c: 226: RC6 = 1;
  1879  023E  1707               	bsf	7,6	;volatile
  1880  023F  2A41               	goto	l242
  1881  0240                     l241:	
  1882                           
  1883                           ;LCD_screen.c: 227: else
  1884                           ;LCD_screen.c: 228: RC6 = 0;
  1885  0240  1307               	bcf	7,6	;volatile
  1886  0241                     l242:	
  1887                           
  1888                           ;LCD_screen.c: 230: if(a & 8)
  1889  0241  1DF5               	btfss	Lcd4_Port@a,3
  1890  0242  2A45               	goto	l243
  1891                           
  1892                           ;LCD_screen.c: 231: RB6 = 1;
  1893  0243  1706               	bsf	6,6	;volatile
  1894  0244  0008               	return
  1895  0245                     l243:	
  1896                           
  1897                           ;LCD_screen.c: 232: else
  1898                           ;LCD_screen.c: 233: RB6 = 0;
  1899  0245  1306               	bcf	6,6	;volatile
  1900  0246  0008               	return
  1901  0247                     __end_of_Lcd4_Port:	
  1902                           
  1903                           	psect	text10
  1904  0279                     __ptext10:	
  1905 ;; *************** function _ConfigureOscillator *****************
  1906 ;; Defined at:
  1907 ;;		line 18 in file "system.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;		None               void
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1921 ;;      Params:         0       0       0       0
  1922 ;;      Locals:         0       0       0       0
  1923 ;;      Temps:          0       0       0       0
  1924 ;;      Totals:         0       0       0       0
  1925 ;;Total ram usage:        0 bytes
  1926 ;; Hardware stack levels used:    1
  1927 ;; Hardware stack levels required when called:    2
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_main
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function _ConfigureOscillator
  1937  0279                     _ConfigureOscillator:	
  1938                           
  1939                           ;system.c: 22: OSCCONbits.SCS=0x1;
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  1943  0279  1683               	bsf	3,5	;RP0=1, select bank1
  1944  027A  1303               	bcf	3,6	;RP1=0, select bank1
  1945  027B  140F               	bsf	15,0	;volatile
  1946                           
  1947                           ;system.c: 23: OSCCONbits.IRCF=0x7;
  1948  027C  3070               	movlw	112
  1949  027D  048F               	iorwf	15,f	;volatile
  1950                           
  1951                           ;system.c: 26: OPTION_REGbits.T0CS = 0;
  1952  027E  1281               	bcf	1,5	;volatile
  1953                           
  1954                           ;system.c: 28: OPTION_REGbits.PSA = 0;
  1955  027F  1181               	bcf	1,3	;volatile
  1956                           
  1957                           ;system.c: 30: OPTION_REGbits.PS = 0x7;
  1958  0280  3007               	movlw	7
  1959  0281  0481               	iorwf	1,f	;volatile
  1960  0282                     l80:	
  1961                           ;system.c: 36: {
  1962                           ;system.c: 37: ;
  1963                           
  1964                           ;system.c: 35: while(OSCCONbits.HTS==0)
  1965                           
  1966  0282  190F               	btfsc	15,2	;volatile
  1967  0283  0008               	return
  1968  0284  2A82               	goto	l80
  1969  0285                     __end_of_ConfigureOscillator:	
  1970                           
  1971                           	psect	text11
  1972  0247                     __ptext11:	
  1973 ;; *************** function _isr *****************
  1974 ;; Defined at:
  1975 ;;		line 24 in file "interrupts.c"
  1976 ;; Parameters:    Size  Location     Type
  1977 ;;		None
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;		None
  1980 ;; Return value:  Size  Location     Type
  1981 ;;		None               void
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1989 ;;      Params:         0       0       0       0
  1990 ;;      Locals:         0       0       0       0
  1991 ;;      Temps:          4       0       0       0
  1992 ;;      Totals:         4       0       0       0
  1993 ;;Total ram usage:        4 bytes
  1994 ;; Hardware stack levels used:    1
  1995 ;; Hardware stack levels required when called:    1
  1996 ;; This function calls:
  1997 ;;		_uart_getc
  1998 ;;		_uart_putc
  1999 ;; This function is called by:
  2000 ;;		Interrupt level 1
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _isr
  2006  0247                     _isr:	
  2007                           
  2008                           ;interrupts.c: 31: if (PIR1bits.RCIF)
  2009  0247  1E8C               	btfss	12,5	;volatile
  2010  0248  2A54               	goto	i1l13
  2011                           
  2012                           ;interrupts.c: 32: {
  2013                           ;interrupts.c: 34: if (RCSTAbits.OERR)
  2014  0249  1C98               	btfss	24,1	;volatile
  2015  024A  2A4E               	goto	i1l1498
  2016                           
  2017                           ;interrupts.c: 35: {
  2018                           ;interrupts.c: 36: RCSTAbits.CREN = 0;
  2019  024B  1218               	bcf	24,4	;volatile
  2020                           
  2021                           ;interrupts.c: 37: RCSTAbits.CREN = 1;
  2022  024C  1618               	bsf	24,4	;volatile
  2023                           
  2024                           ;interrupts.c: 38: return;
  2025  024D  2A54               	goto	i1l13
  2026  024E                     i1l1498:	
  2027                           
  2028                           ;interrupts.c: 39: }
  2029                           ;interrupts.c: 40: uart_putc(uart_getc());
  2030  024E  118A  2285  118A   	fcall	_uart_getc
  2031  0251  118A  229F  118A   	fcall	_uart_putc
  2032  0254                     i1l13:	
  2033  0254  0874               	movf	??_isr+3,w
  2034  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2036  0257  00FF               	movwf	127
  2037  0258  0873               	movf	??_isr+2,w
  2038  0259  008A               	movwf	10
  2039  025A  0872               	movf	??_isr+1,w
  2040  025B  0084               	movwf	4
  2041  025C  0E71               	swapf	??_isr^(0+-128),w
  2042  025D  0083               	movwf	3
  2043  025E  0EFE               	swapf	126,f
  2044  025F  0E7E               	swapf	126,w
  2045  0260  0009               	retfie
  2046  0261                     __end_of_isr:	
  2047                           
  2048                           	psect	intentry
  2049  0004                     __pintentry:	
  2050                           ;incstack = 0
  2051                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2052                           
  2053  0004                     interrupt_function:	
  2054  007E                     saved_w	set	btemp
  2055  0004  00FE               	movwf	btemp
  2056  0005  0E03               	swapf	3,w
  2057  0006  00F1               	movwf	??_isr
  2058  0007  0804               	movf	4,w
  2059  0008  00F2               	movwf	??_isr+1
  2060  0009  080A               	movf	10,w
  2061  000A  00F3               	movwf	??_isr+2
  2062  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2063  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2064  000D  087F               	movf	btemp+1,w
  2065  000E  00F4               	movwf	??_isr+3
  2066  000F  118A  2A47         	ljmp	_isr
  2067                           
  2068                           	psect	text12
  2069  029F                     __ptext12:	
  2070 ;; *************** function _uart_putc *****************
  2071 ;; Defined at:
  2072 ;;		line 24 in file "UART.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  data            1    wreg     unsigned char 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  data            1    0[COMMON] unsigned char 
  2077 ;; Return value:  Size  Location     Type
  2078 ;;		None               void
  2079 ;; Registers used:
  2080 ;;		wreg
  2081 ;; Tracked objects:
  2082 ;;		On entry : 0/0
  2083 ;;		On exit  : 0/0
  2084 ;;		Unchanged: 0/0
  2085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2086 ;;      Params:         0       0       0       0
  2087 ;;      Locals:         1       0       0       0
  2088 ;;      Temps:          0       0       0       0
  2089 ;;      Totals:         1       0       0       0
  2090 ;;Total ram usage:        1 bytes
  2091 ;; Hardware stack levels used:    1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_isr
  2096 ;;		_uart_printf
  2097 ;; This function uses a non-reentrant model
  2098 ;;
  2099                           
  2100                           
  2101                           ;psect for function _uart_putc
  2102  029F                     _uart_putc:	
  2103                           
  2104                           ;incstack = 0
  2105                           ; Regs used in _uart_putc: [wreg]
  2106                           ;uart_putc@data stored from wreg
  2107  029F  00F0               	movwf	uart_putc@data
  2108  02A0                     i1l130:	
  2109                           ;UART.c: 26: continue;
  2110                           
  2111                           ;UART.c: 25: while( ! TXIF)
  2112                           
  2113  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2114  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2115  02A2  1E0C               	btfss	12,4	;volatile
  2116  02A3  2AA0               	goto	i1l130
  2117                           
  2118                           ;UART.c: 27: TXREG = data;
  2119  02A4  0870               	movf	uart_putc@data,w
  2120  02A5  0099               	movwf	25	;volatile
  2121  02A6  0008               	return
  2122  02A7                     __end_of_uart_putc:	
  2123                           
  2124                           	psect	text13
  2125  0285                     __ptext13:	
  2126 ;; *************** function _uart_getc *****************
  2127 ;; Defined at:
  2128 ;;		line 39 in file "UART.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;		None
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;		None
  2133 ;; Return value:  Size  Location     Type
  2134 ;;                  1    wreg      unsigned char 
  2135 ;; Registers used:
  2136 ;;		wreg
  2137 ;; Tracked objects:
  2138 ;;		On entry : 0/0
  2139 ;;		On exit  : 0/0
  2140 ;;		Unchanged: 0/0
  2141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2142 ;;      Params:         0       0       0       0
  2143 ;;      Locals:         0       0       0       0
  2144 ;;      Temps:          0       0       0       0
  2145 ;;      Totals:         0       0       0       0
  2146 ;;Total ram usage:        0 bytes
  2147 ;; Hardware stack levels used:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_isr
  2152 ;;		_uart_get_str
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           
  2157                           ;psect for function _uart_getc
  2158  0285                     _uart_getc:	
  2159                           
  2160                           ;UART.c: 40: if (RCSTAbits.OERR){
  2161                           
  2162                           ;incstack = 0
  2163                           ; Regs used in _uart_getc: [wreg]
  2164  0285  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0286  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0287  1C98               	btfss	24,1	;volatile
  2167  0288  2A8B               	goto	i1l143
  2168                           
  2169                           ;UART.c: 41: RCSTAbits.CREN = 0;
  2170  0289  1218               	bcf	24,4	;volatile
  2171                           
  2172                           ;UART.c: 42: RCSTAbits.CREN = 1;
  2173  028A  1618               	bsf	24,4	;volatile
  2174  028B                     i1l143:	
  2175                           ;UART.c: 46: ;
  2176                           
  2177                           ;UART.c: 43: }
  2178                           ;UART.c: 45: while(!RCIF)
  2179                           
  2180  028B  1E8C               	btfss	12,5	;volatile
  2181  028C  2A8B               	goto	i1l143
  2182                           
  2183                           ;UART.c: 47: return RCREG;
  2184  028D  081A               	movf	26,w	;volatile
  2185  028E  0008               	return
  2186  028F                     __end_of_uart_getc:	
  2187  007E                     btemp	set	126	;btemp
  2188  007E                     wtemp	set	126
  2189  007E                     wtemp0	set	126
  2190  0080                     wtemp1	set	128
  2191  0082                     wtemp2	set	130
  2192  0084                     wtemp3	set	132
  2193  0086                     wtemp4	set	134
  2194  0088                     wtemp5	set	136
  2195  007F                     wtemp6	set	127
  2196  007E                     ttemp	set	126
  2197  007E                     ttemp0	set	126
  2198  0081                     ttemp1	set	129
  2199  0084                     ttemp2	set	132
  2200  0087                     ttemp3	set	135
  2201  007F                     ttemp4	set	127
  2202  007E                     ltemp	set	126
  2203  007E                     ltemp0	set	126
  2204  0082                     ltemp1	set	130
  2205  0086                     ltemp2	set	134
  2206  0080                     ltemp3	set	128


Data Sizes:
    Strings     19
    Constant    57
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     18      18
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    strcpy@from	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 0

    strcpy@cp	PTR unsigned char  size(1) Largest target is 0

    Lcd4_Write_String@a	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sp__uart_get_str	PTR unsigned char  size(1) Largest target is 0

    sp__strcpy	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _main->_Lcd4_Cmd
    _main->_strcpy
    _Lcd4_Write_Char->_Lcd4_Port
    _Lcd4_Shift_Right->_Lcd4_Cmd
    _Lcd4_Init->_Lcd4_Cmd
    _Lcd4_Clear->_Lcd4_Cmd
    _Lcd4_Cmd->_Lcd4_Port

Critical Paths under _isr in COMMON

    _isr->_uart_putc

Critical Paths under _main in BANK0

    _main->_Lcd4_Write_String
    _Lcd4_Write_String->_Lcd4_Write_Char
    _Lcd4_Shift_Right->_Lcd4_Cmd
    _Lcd4_Init->_Lcd4_Cmd
    _Lcd4_Clear->_Lcd4_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    1231
                                              8 BANK0     10    10      0
                _ConfigureOscillator
                         _Lcd4_Clear
                           _Lcd4_Cmd
                          _Lcd4_Init
                   _Lcd4_Shift_Right
                  _Lcd4_Write_String
                           _initUart
                             _strcpy
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               4     3      1     204
                                              5 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd4_Write_String                                    3     3      0     378
                                              5 BANK0      3     3      0
                    _Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Write_Char                                      5     5      0     218
                                              0 BANK0      5     5      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd4_Shift_Right                                     0     0      0     119
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd4_Init                                            2     2      0     119
                                              2 BANK0      2     2      0
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd4_Clear                                           0     0      0     119
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Cmd                                             3     3      0     119
                                              6 COMMON     1     1      0
                                              0 BANK0      2     2      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Port                                            1     1      0      88
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0      15
                                              1 COMMON     4     4      0
                          _uart_getc
                          _uart_putc
 ---------------------------------------------------------------------------------
 (5) _uart_putc                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _uart_getc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _Lcd4_Clear
     _Lcd4_Cmd
       _Lcd4_Port
   _Lcd4_Cmd
     _Lcd4_Port
   _Lcd4_Init
     _Lcd4_Cmd
       _Lcd4_Port
   _Lcd4_Shift_Right
     _Lcd4_Cmd
       _Lcd4_Port
   _Lcd4_Write_String
     _Lcd4_Write_Char
       _Lcd4_Port
   _initUart
   _strcpy

 _isr (ROOT)
   _uart_getc
   _uart_putc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50     12      12       3       22.5%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0      1B       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0      1B      10        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Sat Jun 14 02:15:51 2014

                           pc 0002                   __CFG_CP$OFF 0000             ??_Lcd4_Write_Char 0020  
                          l80 0282                            fsr 0004                           l240 023C  
                         l241 0240                           l242 0241                           l243 0245  
                         l237 0234                           l238 0237                           l239 023B  
                         _RA2 002A                           _RC0 0038                           _RC1 0039  
                         _RA5 002D                           _RC2 003A                           _RB4 0034  
                         _RC3 003B                           _RC4 003C                           _RB6 0036  
                         _RC5 003D                           _RC6 003E                  __CFG_CPD$OFF 0000  
                         u525 0163                           u617 0042                           u707 0270  
                         u555 0096                           u627 0071                           u565 00BB  
                         u637 0082                           u647 00A3                           u657 0172  
                         u667 017E                           u677 0191                           u687 01A2  
                         u697 01C1                           _isr 0247                           fsr0 0004  
                         indf 0000                  __CFG_IESO$ON 0000                    _Lcd4_Clear 0297  
           _Lcd4_Write_String 01EF                   main@address 002F            ?_Lcd4_Write_String 0070  
                        l2050 0098                          l2036 0061                          l2058 00BD  
                        l1970 0216                          l1994 01F4                          ?_isr 0070  
                        STR_1 013F                          STR_2 014C                          i1l13 0254  
                        _RCIF 0065                          _TMR0 0001                          _TXIF 0064  
               __CFG_FCMEN$ON 0000                          _main 0018                          btemp 007E  
         ??_Lcd4_Write_String 0076                 __CFG_BOREN$ON 0000                          ltemp 007E  
                        start 0011                          ttemp 007E                          wtemp 007E  
               __CFG_MCLRE$ON 0000                         ??_isr 0071                         ?_main 0070  
               __CFG_WDTE$OFF 0000                         _ANSEL 011E                         i1l130 02A0  
                       i1l143 028B     __end_of_Lcd4_Write_String 020F                         _RCREG 001A  
                       _SPBRG 0099                         _PORTA 0005                         _PORTB 0006  
                       _PORTC 0007                         _TRISA 0085                         _TRISB 0086  
                       _TRISC 0087                         _TXREG 0019           _ConfigureOscillator 0279  
                       _errno 0077                         main@i 0030                         main@j 002B  
                       pclath 000A                         ltemp0 007E                         ltemp1 0082  
                       ltemp2 0086                         ltemp3 0080              __end_of_Lcd4_Cmd 0279  
                       ttemp0 007E                         ttemp1 0081                         ttemp2 0084  
                       ttemp3 0087                         ttemp4 007F                         status 0003  
                       wtemp0 007E                         wtemp1 0080                         wtemp2 0082  
                       wtemp3 0084                         wtemp4 0086                         wtemp5 0088  
                       wtemp6 007F          ?_ConfigureOscillator 0070               __initialization 0013  
          __size_of_Lcd4_Init 0034            __size_of_Lcd4_Port 001A                  __end_of_main 00C1  
               main@character 002D     __size_of_Lcd4_Shift_Right 0008                        ??_main 0028  
                 ?_Lcd4_Clear 0070                        _ANSELH 011F              Lcd4_Write_Char@a 0024  
            Lcd4_Write_Char@y 0023                        i1l1498 024E                        _SPBRGH 009A  
       ??_ConfigureOscillator 0075                __CFG_PWRTE$OFF 0000              __end_of_initUart 01EF  
                      _strcpy 020F    __size_of_Lcd4_Write_String 0020                        saved_w 007E  
           __end_of_Lcd4_Init 01CE             __end_of_Lcd4_Port 0247              __end_ofexp@coeff 0124  
            __end_oflog@coeff 013F       __end_of__initialization 0015               _Lcd4_Write_Char 0152  
              __pcstackCOMMON 0070           __size_of_Lcd4_Clear 0008                     ?_Lcd4_Cmd 0070  
              _OPTION_REGbits 0081                    __pmaintext 0018                    __pintentry 0004  
            _Lcd4_Shift_Right 028F                       ?_strcpy 0075            __size_of_uart_getc 000A  
                  ??_Lcd4_Cmd 0020            __size_of_uart_putc 0008       __end_of_Lcd4_Write_Char 019A  
                  __stringtab 0100                     ?_initUart 0070                       __ptext1 020F  
                     __ptext2 01CE                       __ptext3 01EF                       __ptext4 0152  
                     __ptext5 028F                       __ptext6 019A                       __ptext7 0297  
                     __ptext8 0261                       __ptext9 022D                     Lcd4_Cmd@a 0076  
             __size_of_strcpy 001E                  __size_of_isr 001A           Lcd4_Write_Char@temp 0022  
                ??_Lcd4_Clear 0077          end_of_initialization 0015                    ??_initUart 0075  
           __end_of_uart_getc 028F             __end_of_uart_putc 02A7                     _RCSTAbits 0018  
          __end_of_Lcd4_Clear 029F                     _TRISBbits 0086              ?_Lcd4_Write_Char 0070  
 __end_of_ConfigureOscillator 0285                     _Lcd4_Init 019A                     _Lcd4_Port 022D  
                   _TXSTAbits 0098                    main@string 002E                   _BAUDCTLbits 009B  
              __end_of_strcpy 022D           start_initialization 0013             __size_of_Lcd4_Cmd 0018  
                 __end_of_isr 0261      __end_of_Lcd4_Shift_Right 0297                    ?_Lcd4_Init 0070  
                  ?_Lcd4_Port 0070                      ??_strcpy 0076                   __pbssCOMMON 0077  
                   ___latbits 0001                 __pcstackBANK0 0020           __end_of__stringdata 0152  
           __size_of_initUart 0021                     __pstrings 0100                   ??_Lcd4_Init 0022  
           interrupt_function 0004                   ??_Lcd4_Port 0075                      _PIE1bits 008C  
                    _PIR1bits 000C                     _uart_getc 0285                     _uart_putc 029F  
                 __stringbase 0105                   __stringdata 013F                      _Lcd4_Cmd 0261  
          Lcd4_Write_String@a 0025            Lcd4_Write_String@i 0026                    ?_uart_getc 0070  
                  ?_uart_putc 0070            __end_of__stringtab 0106                      __ptext10 0279  
                    __ptext11 0247                      __ptext12 029F                      __ptext13 0285  
                  strcpy@from 0075                      _initUart 01CE             ?_Lcd4_Shift_Right 0070  
               __size_of_main 00A9                    Lcd4_Port@a 0075            ??_Lcd4_Shift_Right 0077  
    __size_of_Lcd4_Write_Char 0048  __size_of_ConfigureOscillator 000C                      exp@coeff 0106  
                    log@coeff 0124                    _INTCONbits 000B                      intlevel1 0000  
                   stringcode 0100                    _OSCCONbits 008F                   ??_uart_getc 0070  
                 ??_uart_putc 0070                      strcpy@cp 0021                      strcpy@to 0020  
                    stringdir 0100                      stringtab 0100            __CFG_FOSC$INTRCCLK 0000  
               uart_putc@data 0070  
