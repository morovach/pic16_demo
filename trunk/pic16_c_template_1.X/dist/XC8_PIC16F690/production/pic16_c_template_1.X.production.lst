

Microchip Technology PIC LITE Macro Assembler V1.31 build 56723 
                                                                                               Tue Jun 17 00:15:31 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	16F690
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,delta=2
    65                           	dabs	1,0x7E,2
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011E                     	;# 
   134  011F                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  019D                     	;# 
   138  019E                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0115                     	;# 
   201  0116                     	;# 
   202  0118                     	;# 
   203  0119                     	;# 
   204  011A                     	;# 
   205  011B                     	;# 
   206  011E                     	;# 
   207  011F                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  019D                     	;# 
   211  019E                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0096                     	;# 
   261  0097                     	;# 
   262  0098                     	;# 
   263  0099                     	;# 
   264  009A                     	;# 
   265  009B                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  010C                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0115                     	;# 
   274  0116                     	;# 
   275  0118                     	;# 
   276  0119                     	;# 
   277  011A                     	;# 
   278  011B                     	;# 
   279  011E                     	;# 
   280  011F                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  019D                     	;# 
   284  019E                     	;# 
   285  0000                     	;# 
   286  0001                     	;# 
   287  0002                     	;# 
   288  0003                     	;# 
   289  0004                     	;# 
   290  0005                     	;# 
   291  0006                     	;# 
   292  0007                     	;# 
   293  000A                     	;# 
   294  000B                     	;# 
   295  000C                     	;# 
   296  000D                     	;# 
   297  000E                     	;# 
   298  000E                     	;# 
   299  000F                     	;# 
   300  0010                     	;# 
   301  0011                     	;# 
   302  0012                     	;# 
   303  0013                     	;# 
   304  0014                     	;# 
   305  0015                     	;# 
   306  0015                     	;# 
   307  0016                     	;# 
   308  0017                     	;# 
   309  0018                     	;# 
   310  0019                     	;# 
   311  001A                     	;# 
   312  001C                     	;# 
   313  001D                     	;# 
   314  001E                     	;# 
   315  001F                     	;# 
   316  0081                     	;# 
   317  0085                     	;# 
   318  0086                     	;# 
   319  0087                     	;# 
   320  008C                     	;# 
   321  008D                     	;# 
   322  008E                     	;# 
   323  008F                     	;# 
   324  0090                     	;# 
   325  0092                     	;# 
   326  0093                     	;# 
   327  0093                     	;# 
   328  0093                     	;# 
   329  0094                     	;# 
   330  0095                     	;# 
   331  0095                     	;# 
   332  0096                     	;# 
   333  0096                     	;# 
   334  0097                     	;# 
   335  0098                     	;# 
   336  0099                     	;# 
   337  009A                     	;# 
   338  009B                     	;# 
   339  009E                     	;# 
   340  009F                     	;# 
   341  010C                     	;# 
   342  010C                     	;# 
   343  010D                     	;# 
   344  010E                     	;# 
   345  010F                     	;# 
   346  0115                     	;# 
   347  0116                     	;# 
   348  0118                     	;# 
   349  0119                     	;# 
   350  011A                     	;# 
   351  011B                     	;# 
   352  011E                     	;# 
   353  011F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  019D                     	;# 
   357  019E                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001C                     	;# 
   386  001D                     	;# 
   387  001E                     	;# 
   388  001F                     	;# 
   389  0081                     	;# 
   390  0085                     	;# 
   391  0086                     	;# 
   392  0087                     	;# 
   393  008C                     	;# 
   394  008D                     	;# 
   395  008E                     	;# 
   396  008F                     	;# 
   397  0090                     	;# 
   398  0092                     	;# 
   399  0093                     	;# 
   400  0093                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0095                     	;# 
   404  0095                     	;# 
   405  0096                     	;# 
   406  0096                     	;# 
   407  0097                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009A                     	;# 
   411  009B                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010C                     	;# 
   416  010D                     	;# 
   417  010E                     	;# 
   418  010F                     	;# 
   419  0115                     	;# 
   420  0116                     	;# 
   421  0118                     	;# 
   422  0119                     	;# 
   423  011A                     	;# 
   424  011B                     	;# 
   425  011E                     	;# 
   426  011F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  019D                     	;# 
   430  019E                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001C                     	;# 
   459  001D                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  0081                     	;# 
   463  0085                     	;# 
   464  0086                     	;# 
   465  0087                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  008F                     	;# 
   470  0090                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0093                     	;# 
   474  0093                     	;# 
   475  0094                     	;# 
   476  0095                     	;# 
   477  0095                     	;# 
   478  0096                     	;# 
   479  0096                     	;# 
   480  0097                     	;# 
   481  0098                     	;# 
   482  0099                     	;# 
   483  009A                     	;# 
   484  009B                     	;# 
   485  009E                     	;# 
   486  009F                     	;# 
   487  010C                     	;# 
   488  010C                     	;# 
   489  010D                     	;# 
   490  010E                     	;# 
   491  010F                     	;# 
   492  0115                     	;# 
   493  0116                     	;# 
   494  0118                     	;# 
   495  0119                     	;# 
   496  011A                     	;# 
   497  011B                     	;# 
   498  011E                     	;# 
   499  011F                     	;# 
   500  018C                     	;# 
   501  018D                     	;# 
   502  019D                     	;# 
   503  019E                     	;# 
   504  0000                     	;# 
   505  0001                     	;# 
   506  0002                     	;# 
   507  0003                     	;# 
   508  0004                     	;# 
   509  0005                     	;# 
   510  0006                     	;# 
   511  0007                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  000E                     	;# 
   517  000E                     	;# 
   518  000F                     	;# 
   519  0010                     	;# 
   520  0011                     	;# 
   521  0012                     	;# 
   522  0013                     	;# 
   523  0014                     	;# 
   524  0015                     	;# 
   525  0015                     	;# 
   526  0016                     	;# 
   527  0017                     	;# 
   528  0018                     	;# 
   529  0019                     	;# 
   530  001A                     	;# 
   531  001C                     	;# 
   532  001D                     	;# 
   533  001E                     	;# 
   534  001F                     	;# 
   535  0081                     	;# 
   536  0085                     	;# 
   537  0086                     	;# 
   538  0087                     	;# 
   539  008C                     	;# 
   540  008D                     	;# 
   541  008E                     	;# 
   542  008F                     	;# 
   543  0090                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0093                     	;# 
   547  0093                     	;# 
   548  0094                     	;# 
   549  0095                     	;# 
   550  0095                     	;# 
   551  0096                     	;# 
   552  0096                     	;# 
   553  0097                     	;# 
   554  0098                     	;# 
   555  0099                     	;# 
   556  009A                     	;# 
   557  009B                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  010C                     	;# 
   561  010C                     	;# 
   562  010D                     	;# 
   563  010E                     	;# 
   564  010F                     	;# 
   565  0115                     	;# 
   566  0116                     	;# 
   567  0118                     	;# 
   568  0119                     	;# 
   569  011A                     	;# 
   570  011B                     	;# 
   571  011E                     	;# 
   572  011F                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  019D                     	;# 
   576  019E                     	;# 
   577  0000                     	;# 
   578  0001                     	;# 
   579  0002                     	;# 
   580  0003                     	;# 
   581  0004                     	;# 
   582  0005                     	;# 
   583  0006                     	;# 
   584  0007                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  000E                     	;# 
   591  000F                     	;# 
   592  0010                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0013                     	;# 
   596  0014                     	;# 
   597  0015                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  0081                     	;# 
   609  0085                     	;# 
   610  0086                     	;# 
   611  0087                     	;# 
   612  008C                     	;# 
   613  008D                     	;# 
   614  008E                     	;# 
   615  008F                     	;# 
   616  0090                     	;# 
   617  0092                     	;# 
   618  0093                     	;# 
   619  0093                     	;# 
   620  0093                     	;# 
   621  0094                     	;# 
   622  0095                     	;# 
   623  0095                     	;# 
   624  0096                     	;# 
   625  0096                     	;# 
   626  0097                     	;# 
   627  0098                     	;# 
   628  0099                     	;# 
   629  009A                     	;# 
   630  009B                     	;# 
   631  009E                     	;# 
   632  009F                     	;# 
   633  010C                     	;# 
   634  010C                     	;# 
   635  010D                     	;# 
   636  010E                     	;# 
   637  010F                     	;# 
   638  0115                     	;# 
   639  0116                     	;# 
   640  0118                     	;# 
   641  0119                     	;# 
   642  011A                     	;# 
   643  011B                     	;# 
   644  011E                     	;# 
   645  011F                     	;# 
   646  018C                     	;# 
   647  018D                     	;# 
   648  019D                     	;# 
   649  019E                     	;# 
   650                           
   651                           	psect	idataBANK1
   652  0002                     __pidataBANK1:	
   653                           
   654                           ;initializer for _glog_level
   655  0002  3401               	retlw	1
   656                           
   657                           ;initializer for _gtype_of_game
   658  0003  3401               	retlw	1
   659  000E                     _TMR1	set	14
   660  000B                     _INTCONbits	set	11
   661  000C                     _PIR1bits	set	12
   662  0005                     _PORTA	set	5
   663  0006                     _PORTB	set	6
   664  0007                     _PORTC	set	7
   665  001A                     _RCREG	set	26
   666  0018                     _RCSTAbits	set	24
   667  0010                     _T1CONbits	set	16
   668  0012                     _T2CONbits	set	18
   669  0001                     _TMR0	set	1
   670  0019                     _TXREG	set	25
   671  002A                     _RA2	set	42
   672  002D                     _RA5	set	45
   673  0034                     _RB4	set	52
   674  0036                     _RB6	set	54
   675  0038                     _RC0	set	56
   676  003A                     _RC2	set	58
   677  003B                     _RC3	set	59
   678  003E                     _RC6	set	62
   679  0065                     _RCIF	set	101
   680  0060                     _TMR1IF	set	96
   681  0061                     _TMR2IF	set	97
   682  0092                     _TMR2ON	set	146
   683  0064                     _TXIF	set	100
   684  009B                     _BAUDCTLbits	set	155
   685  0081                     _OPTION_REGbits	set	129
   686  008F                     _OSCCONbits	set	143
   687  008C                     _PIE1bits	set	140
   688  0092                     _PR2	set	146
   689  0099                     _SPBRG	set	153
   690  009A                     _SPBRGH	set	154
   691  0085                     _TRISA	set	133
   692  0086                     _TRISB	set	134
   693  0086                     _TRISBbits	set	134
   694  0087                     _TRISC	set	135
   695  0098                     _TXSTAbits	set	152
   696  011E                     _ANSEL	set	286
   697  011F                     _ANSELH	set	287
   698                           
   699                           	psect	strings
   700  0800                     __pstrings:	
   701  0800                     stringtab:	
   702  0800                     __stringtab:	
   703  0800                     stringcode:	
   704                           ;	String table - string pointers are 1 byte each
   705                           
   706  0800                     stringdir:	
   707  0800  3008               	movlw	high stringdir
   708  0801  008A               	movwf	10
   709  0802  0804               	movf	4,w
   710  0803  0A84               	incf	4,f
   711  0804  0782               	addwf	2,f
   712  0805                     __stringbase:	
   713  0805  3400               	retlw	0
   714  0806                     __end_of__stringtab:	
   715  0806                     __stringdata:	
   716  0806                     STR_1:	
   717  0806  3465               	retlw	101	;'e'
   718  0807  346E               	retlw	110	;'n'
   719  0808  3464               	retlw	100	;'d'
   720  0809  3420               	retlw	32	;' '
   721  080A  346F               	retlw	111	;'o'
   722  080B  3466               	retlw	102	;'f'
   723  080C  3420               	retlw	32	;' '
   724  080D  346C               	retlw	108	;'l'
   725  080E  3469               	retlw	105	;'i'
   726  080F  346E               	retlw	110	;'n'
   727  0810  3465               	retlw	101	;'e'
   728  0811  340A               	retlw	10
   729  0812  3400               	retlw	0
   730  0813                     STR_2:	
   731  0813  344A               	retlw	74	;'J'
   732  0814  346F               	retlw	111	;'o'
   733  0815  3475               	retlw	117	;'u'
   734  0816  3465               	retlw	101	;'e'
   735  0817  3475               	retlw	117	;'u'
   736  0818  3472               	retlw	114	;'r'
   737  0819  3420               	retlw	32	;' '
   738  081A  3400               	retlw	0
   739  081B                     __end_of__stringdata:	
   740                           
   741                           ; #config settings
   742  0000                     
   743                           	psect	cinit
   744  0013                     start_initialization:	
   745  0013                     __initialization:	
   746                           
   747                           ; Clear objects allocated to BANK0
   748  0013  1383               	bcf	3,7	;select IRP bank0
   749  0014  304C               	movlw	low __pbssBANK0
   750  0015  0084               	movwf	4
   751  0016  3054               	movlw	low (__pbssBANK0+8)
   752  0017  118A  27F8  118A   	fcall	clear_ram0
   753                           
   754                           ; Clear objects allocated to BANK1
   755  001A  1683               	bsf	3,5	;RP0=1, select bank1
   756  001B  1303               	bcf	3,6	;RP1=0, select bank1
   757  001C  01D8               	clrf	__pbssBANK1& (0+127)
   758                           
   759                           ; Clear objects allocated to BANK2
   760  001D  1783               	bsf	3,7	;select IRP bank2
   761  001E  3020               	movlw	low __pbssBANK2
   762  001F  0084               	movwf	4
   763  0020  3048               	movlw	low (__pbssBANK2+40)
   764  0021  118A  27F8  118A   	fcall	clear_ram0
   765                           
   766                           ; Initialize objects allocated to BANK1
   767  0024  118A  2002  118A   	fcall	__pidataBANK1	;fetch initializer
   768  0027  00D6               	movwf	__pdataBANK1& (0+127)
   769  0028  118A  2003         	fcall	__pidataBANK1+1	;fetch initializer
   770  002A  00D7               	movwf	(__pdataBANK1+1)& (0+127)
   771  002B                     end_of_initialization:	
   772                           ;End of C runtime variable initialization code
   773                           
   774  002B                     __end_of__initialization:	
   775  002B  0183               	clrf	3
   776  002C  118A  2E35         	ljmp	_main	;jump to C main() function
   777                           
   778                           	psect	bssBANK0
   779  004C                     __pbssBANK0:	
   780  004C                     _elapsed_time:	
   781  004C                     	ds	2
   782  004E                     _ggame_time:	
   783  004E                     	ds	2
   784  0050                     _timer1_tick_nbr:	
   785  0050                     	ds	2
   786  0052                     _timer2_tick_nbr:	
   787  0052                     	ds	2
   788                           
   789                           	psect	bssBANK1
   790  00D8                     __pbssBANK1:	
   791  00D8                     _gcurrent_player:	
   792  00D8                     	ds	1
   793                           
   794                           	psect	dataBANK1
   795  00D6                     __pdataBANK1:	
   796  00D6                     _glog_level:	
   797  00D6                     	ds	1
   798  00D7                     _gtype_of_game:	
   799  00D7                     	ds	1
   800                           
   801                           	psect	bssBANK2
   802  0120                     __pbssBANK2:	
   803  0120                     _player_array:	
   804  0120                     	ds	40
   805                           
   806                           	psect	clrtext
   807  07F8                     clear_ram0:	
   808                           ;	Called with FSR containing the base address, and
   809                           ;	W with the last address+1
   810                           
   811  07F8  0064               	clrwdt	;clear the watchdog before getting into this loop
   812  07F9                     clrloop0:	
   813  07F9  0180               	clrf	0	;clear RAM location pointed to by FSR
   814  07FA  0A84               	incf	4,f	;increment pointer
   815  07FB  0604               	xorwf	4,w	;XOR with final address
   816  07FC  1903               	btfsc	3,2	;have we reached the end yet?
   817  07FD  3400               	retlw	0	;all done for this memory range, return
   818  07FE  0604               	xorwf	4,w	;XOR again to restore value
   819  07FF  2FF9               	goto	clrloop0	;do the next byte
   820                           
   821                           	psect	cstackBANK1
   822  00A0                     __pcstackBANK1:	
   823  00A0                     ??_uart_putc:	
   824  00A0                     ??_init_timer_0:	
   825                           ; 0 bytes @ 0x0
   826                           
   827  00A0                     ??_init_timer_2:	
   828                           ; 0 bytes @ 0x0
   829                           
   830  00A0                     ??_initUart:	
   831                           ; 0 bytes @ 0x0
   832                           
   833  00A0                     ??_init_interrupt:	
   834                           ; 0 bytes @ 0x0
   835                           
   836  00A0                     ??_ConfigureOscillator:	
   837                           ; 0 bytes @ 0x0
   838                           
   839  00A0                     ??_Lcd4_Port:	
   840                           ; 0 bytes @ 0x0
   841                           
   842  00A0                     ?_strcpy:	
   843                           ; 0 bytes @ 0x0
   844                           
   845  00A0                     ?_strcat:	
   846                           ; 1 bytes @ 0x0
   847                           
   848  00A0                     ?_strlen:	
   849                           ; 1 bytes @ 0x0
   850                           
   851  00A0                     ?___awmod:	
   852                           ; 2 bytes @ 0x0
   853                           
   854  00A0                     ?___lwdiv:	
   855                           ; 2 bytes @ 0x0
   856                           
   857  00A0                     ?___lwmod:	
   858                           ; 2 bytes @ 0x0
   859                           
   860  00A0                     uart_putc@data:	
   861                           ; 2 bytes @ 0x0
   862                           
   863  00A0                     Lcd4_Port@a:	
   864                           ; 1 bytes @ 0x0
   865                           
   866  00A0                     strcat@from:	
   867                           ; 1 bytes @ 0x0
   868                           
   869  00A0                     strcpy@from:	
   870                           ; 1 bytes @ 0x0
   871                           
   872  00A0                     ___awmod@divisor:	
   873                           ; 1 bytes @ 0x0
   874                           
   875  00A0                     ___lwdiv@divisor:	
   876                           ; 2 bytes @ 0x0
   877                           
   878  00A0                     ___lwmod@divisor:	
   879                           ; 2 bytes @ 0x0
   880                           
   881                           
   882                           ; 2 bytes @ 0x0
   883  00A0                     	ds	1
   884  00A1                     ??_strcpy:	
   885  00A1                     ??_strcat:	
   886                           ; 0 bytes @ 0x1
   887                           
   888  00A1                     ??_Lcd4_Cmd:	
   889                           ; 0 bytes @ 0x1
   890                           
   891  00A1                     ??_Lcd4_Write_Char:	
   892                           ; 0 bytes @ 0x1
   893                           
   894                           
   895                           ; 0 bytes @ 0x1
   896  00A1                     	ds	1
   897  00A2                     ??_strlen:	
   898  00A2                     strcat@to:	
   899                           ; 0 bytes @ 0x2
   900                           
   901  00A2                     strcpy@cp:	
   902                           ; 1 bytes @ 0x2
   903                           
   904  00A2                     ___awmod@dividend:	
   905                           ; 1 bytes @ 0x2
   906                           
   907  00A2                     ___lwdiv@dividend:	
   908                           ; 2 bytes @ 0x2
   909                           
   910  00A2                     ___lwmod@dividend:	
   911                           ; 2 bytes @ 0x2
   912                           
   913                           
   914                           ; 2 bytes @ 0x2
   915  00A2                     	ds	1
   916  00A3                     Lcd4_Cmd@a:	
   917  00A3                     Lcd4_Write_Char@temp:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  00A3                     strcat@cp:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  00A3                     strcpy@to:	
   924                           ; 1 bytes @ 0x3
   925                           
   926                           
   927                           ; 1 bytes @ 0x3
   928  00A3                     	ds	1
   929  00A4                     ?_Lcd4_Set_Cursor:	
   930  00A4                     ??_Lcd4_Init:	
   931                           ; 0 bytes @ 0x4
   932                           
   933  00A4                     ??_Lcd4_Clear:	
   934                           ; 0 bytes @ 0x4
   935                           
   936  00A4                     ??___awmod:	
   937                           ; 0 bytes @ 0x4
   938                           
   939  00A4                     ??___lwdiv:	
   940                           ; 0 bytes @ 0x4
   941                           
   942  00A4                     ??___lwmod:	
   943                           ; 0 bytes @ 0x4
   944                           
   945  00A4                     Lcd4_Set_Cursor@pixel_nb:	
   946                           ; 0 bytes @ 0x4
   947                           
   948  00A4                     Lcd4_Write_Char@y:	
   949                           ; 1 bytes @ 0x4
   950                           
   951                           
   952                           ; 1 bytes @ 0x4
   953  00A4                     	ds	1
   954  00A5                     ??_Lcd4_Set_Cursor:	
   955  00A5                     Lcd4_Write_Char@a:	
   956                           ; 0 bytes @ 0x5
   957                           
   958  00A5                     ___awmod@counter:	
   959                           ; 1 bytes @ 0x5
   960                           
   961  00A5                     ___lwmod@counter:	
   962                           ; 1 bytes @ 0x5
   963                           
   964  00A5                     ___lwdiv@quotient:	
   965                           ; 1 bytes @ 0x5
   966                           
   967                           
   968                           ; 2 bytes @ 0x5
   969  00A5                     	ds	1
   970  00A6                     ??_system_init:	
   971  00A6                     ___awmod@sign:	
   972                           ; 0 bytes @ 0x6
   973                           
   974  00A6                     strlen@s:	
   975                           ; 1 bytes @ 0x6
   976                           
   977                           
   978                           ; 1 bytes @ 0x6
   979  00A6                     	ds	1
   980  00A7                     ___lwdiv@counter:	
   981  00A7                     strlen@cp:	
   982                           ; 1 bytes @ 0x7
   983                           
   984                           
   985                           ; 1 bytes @ 0x7
   986  00A7                     	ds	1
   987  00A8                     ??_uart_printf:	
   988  00A8                     ?_utoa:	
   989                           ; 0 bytes @ 0x8
   990                           
   991  00A8                     utoa@val:	
   992                           ; 1 bytes @ 0x8
   993                           
   994                           
   995                           ; 2 bytes @ 0x8
   996  00A8                     	ds	1
   997  00A9                     Lcd4_Set_Cursor@ligne:	
   998  00A9                     uart_printf@i:	
   999                           ; 1 bytes @ 0x9
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0x9
  1003  00A9                     	ds	1
  1004  00AA                     Lcd4_Set_Cursor@lCmdMsb:	
  1005  00AA                     utoa@base:	
  1006                           ; 1 bytes @ 0xA
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0xA
  1010  00AA                     	ds	1
  1011  00AB                     uart_printf@string:	
  1012  00AB                     Lcd4_Set_Cursor@lCmdLsb:	
  1013                           ; 1 bytes @ 0xB
  1014                           
  1015                           
  1016                           ; 1 bytes @ 0xB
  1017  00AB                     	ds	1
  1018  00AC                     ??_utoa:	
  1019  00AC                     ?_LOG:	
  1020                           ; 0 bytes @ 0xC
  1021                           
  1022  00AC                     LOG@level:	
  1023                           ; 0 bytes @ 0xC
  1024                           
  1025                           
  1026                           ; 1 bytes @ 0xC
  1027  00AC                     	ds	1
  1028  00AD                     ??_LOG:	
  1029  00AD                     LOG@string:	
  1030                           ; 0 bytes @ 0xD
  1031                           
  1032  00AD                     utoa@v:	
  1033                           ; 1 bytes @ 0xD
  1034                           
  1035                           
  1036                           ; 2 bytes @ 0xD
  1037  00AD                     	ds	1
  1038  00AE                     ??_Lcd4_Write_String:	
  1039                           
  1040                           ; 0 bytes @ 0xE
  1041  00AE                     	ds	1
  1042  00AF                     utoa@c:	
  1043  00AF                     Lcd4_Write_String@i:	
  1044                           ; 1 bytes @ 0xF
  1045                           
  1046                           
  1047                           ; 2 bytes @ 0xF
  1048  00AF                     	ds	1
  1049  00B0                     utoa@buf:	
  1050                           
  1051                           ; 1 bytes @ 0x10
  1052  00B0                     	ds	1
  1053  00B1                     Lcd4_Write_String@a:	
  1054                           
  1055                           ; 1 bytes @ 0x11
  1056  00B1                     	ds	1
  1057  00B2                     ??_display_player_nbr:	
  1058                           
  1059                           ; 0 bytes @ 0x12
  1060  00B2                     	ds	2
  1061  00B4                     display_player_nbr@string:	
  1062                           
  1063                           ; 16 bytes @ 0x14
  1064  00B4                     	ds	16
  1065  00C4                     display_player_nbr@player_number:	
  1066                           
  1067                           ; 1 bytes @ 0x24
  1068  00C4                     	ds	1
  1069  00C5                     display_player_nbr@string_player_number:	
  1070                           
  1071                           ; 2 bytes @ 0x25
  1072  00C5                     	ds	2
  1073  00C7                     ?_initiate_game:	
  1074  00C7                     initiate_game@type_of_game:	
  1075                           ; 2 bytes @ 0x27
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0x27
  1079  00C7                     	ds	1
  1080  00C8                     initiate_game@game_time:	
  1081                           
  1082                           ; 2 bytes @ 0x28
  1083  00C8                     	ds	2
  1084  00CA                     ??_initiate_game:	
  1085                           
  1086                           ; 0 bytes @ 0x2A
  1087  00CA                     	ds	5
  1088  00CF                     initiate_game@player_nb:	
  1089                           
  1090                           ; 1 bytes @ 0x2F
  1091  00CF                     	ds	1
  1092  00D0                     initiate_game@i:	
  1093                           
  1094                           ; 2 bytes @ 0x30
  1095  00D0                     	ds	2
  1096  00D2                     ??_main:	
  1097                           
  1098                           ; 0 bytes @ 0x32
  1099  00D2                     	ds	3
  1100  00D5                     main@string:	
  1101                           
  1102                           ; 1 bytes @ 0x35
  1103  00D5                     	ds	1
  1104                           
  1105                           	psect	cstackCOMMON
  1106  0070                     __pcstackCOMMON:	
  1107  0070                     ?_uart_putc:	
  1108  0070                     ??_uart_getc:	
  1109                           ; 0 bytes @ 0x0
  1110                           
  1111  0070                     ?_switch_player:	
  1112                           ; 0 bytes @ 0x0
  1113                           
  1114  0070                     ?_set_tick_period_timer1_us:	
  1115                           ; 0 bytes @ 0x0
  1116                           
  1117  0070                     ?_Lcd4_Write_String:	
  1118                           ; 0 bytes @ 0x0
  1119                           
  1120  0070                     ?_game_phase:	
  1121                           ; 0 bytes @ 0x0
  1122                           
  1123  0070                     ?_system_init:	
  1124                           ; 0 bytes @ 0x0
  1125                           
  1126  0070                     ?_uart_printf:	
  1127                           ; 0 bytes @ 0x0
  1128                           
  1129  0070                     ?_init_timer_0:	
  1130                           ; 0 bytes @ 0x0
  1131                           
  1132  0070                     ?_init_timer_2:	
  1133                           ; 0 bytes @ 0x0
  1134                           
  1135  0070                     ?_initUart:	
  1136                           ; 0 bytes @ 0x0
  1137                           
  1138  0070                     ?_Lcd4_Init:	
  1139                           ; 0 bytes @ 0x0
  1140                           
  1141  0070                     ?_display_player_nbr:	
  1142                           ; 0 bytes @ 0x0
  1143                           
  1144  0070                     ?_init_interrupt:	
  1145                           ; 0 bytes @ 0x0
  1146                           
  1147  0070                     ?_isr:	
  1148                           ; 0 bytes @ 0x0
  1149                           
  1150  0070                     ?_main:	
  1151                           ; 0 bytes @ 0x0
  1152                           
  1153  0070                     ?_ConfigureOscillator:	
  1154                           ; 0 bytes @ 0x0
  1155                           
  1156  0070                     ?_Lcd4_Port:	
  1157                           ; 0 bytes @ 0x0
  1158                           
  1159  0070                     ?_Lcd4_Cmd:	
  1160                           ; 0 bytes @ 0x0
  1161                           
  1162  0070                     ?_Lcd4_Write_Char:	
  1163                           ; 0 bytes @ 0x0
  1164                           
  1165  0070                     ?i1_uart_putc:	
  1166                           ; 0 bytes @ 0x0
  1167                           
  1168  0070                     ??i1_uart_putc:	
  1169                           ; 0 bytes @ 0x0
  1170                           
  1171  0070                     ?i1_uart_printf:	
  1172                           ; 0 bytes @ 0x0
  1173                           
  1174  0070                     ?i1_Lcd4_Port:	
  1175                           ; 0 bytes @ 0x0
  1176                           
  1177  0070                     ??i1_Lcd4_Port:	
  1178                           ; 0 bytes @ 0x0
  1179                           
  1180  0070                     ?i1_Lcd4_Cmd:	
  1181                           ; 0 bytes @ 0x0
  1182                           
  1183  0070                     ?i1_Lcd4_Write_Char:	
  1184                           ; 0 bytes @ 0x0
  1185                           
  1186  0070                     ?i1_Lcd4_Write_String:	
  1187                           ; 0 bytes @ 0x0
  1188                           
  1189  0070                     ?i1_display_player_nbr:	
  1190                           ; 0 bytes @ 0x0
  1191                           
  1192  0070                     ?_uart_getc:	
  1193                           ; 0 bytes @ 0x0
  1194                           
  1195  0070                     ?i1_strcat:	
  1196                           ; 1 bytes @ 0x0
  1197                           
  1198  0070                     ?i1_strcpy:	
  1199                           ; 1 bytes @ 0x0
  1200                           
  1201  0070                     ?_Lcd4_Clear:	
  1202                           ; 1 bytes @ 0x0
  1203                           
  1204  0070                     ?i1___awmod:	
  1205                           ; 2 bytes @ 0x0
  1206                           
  1207  0070                     ?i1___lwdiv:	
  1208                           ; 2 bytes @ 0x0
  1209                           
  1210  0070                     ?i1___lwmod:	
  1211                           ; 2 bytes @ 0x0
  1212                           
  1213  0070                     ?i1_strlen:	
  1214                           ; 2 bytes @ 0x0
  1215                           
  1216  0070                     i1uart_putc@data:	
  1217                           ; 2 bytes @ 0x0
  1218                           
  1219  0070                     i1Lcd4_Port@a:	
  1220                           ; 1 bytes @ 0x0
  1221                           
  1222  0070                     i1strcat@from:	
  1223                           ; 1 bytes @ 0x0
  1224                           
  1225  0070                     i1strcpy@from:	
  1226                           ; 1 bytes @ 0x0
  1227                           
  1228  0070                     set_tick_period_timer1_us@period_us:	
  1229                           ; 1 bytes @ 0x0
  1230                           
  1231  0070                     i1___awmod@divisor:	
  1232                           ; 2 bytes @ 0x0
  1233                           
  1234  0070                     i1___lwdiv@divisor:	
  1235                           ; 2 bytes @ 0x0
  1236                           
  1237  0070                     i1___lwmod@divisor:	
  1238                           ; 2 bytes @ 0x0
  1239                           
  1240                           
  1241                           ; 2 bytes @ 0x0
  1242  0070                     	ds	1
  1243  0071                     ??i1_Lcd4_Cmd:	
  1244  0071                     ??i1_Lcd4_Write_Char:	
  1245                           ; 0 bytes @ 0x1
  1246                           
  1247  0071                     ??i1_strcat:	
  1248                           ; 0 bytes @ 0x1
  1249                           
  1250  0071                     ??i1_strcpy:	
  1251                           ; 0 bytes @ 0x1
  1252                           
  1253                           
  1254                           ; 0 bytes @ 0x1
  1255  0071                     	ds	1
  1256  0072                     ??_set_tick_period_timer1_us:	
  1257  0072                     ??i1_strlen:	
  1258                           ; 0 bytes @ 0x2
  1259                           
  1260  0072                     i1strcat@to:	
  1261                           ; 0 bytes @ 0x2
  1262                           
  1263  0072                     i1strcpy@to:	
  1264                           ; 1 bytes @ 0x2
  1265                           
  1266  0072                     i1___awmod@dividend:	
  1267                           ; 1 bytes @ 0x2
  1268                           
  1269  0072                     i1___lwdiv@dividend:	
  1270                           ; 2 bytes @ 0x2
  1271                           
  1272  0072                     i1___lwmod@dividend:	
  1273                           ; 2 bytes @ 0x2
  1274                           
  1275                           
  1276                           ; 2 bytes @ 0x2
  1277  0072                     	ds	1
  1278  0073                     i1Lcd4_Cmd@a:	
  1279  0073                     i1Lcd4_Write_Char@temp:	
  1280                           ; 1 bytes @ 0x3
  1281                           
  1282  0073                     i1strcat@cp:	
  1283                           ; 1 bytes @ 0x3
  1284                           
  1285  0073                     i1strcpy@cp:	
  1286                           ; 1 bytes @ 0x3
  1287                           
  1288                           
  1289                           ; 1 bytes @ 0x3
  1290  0073                     	ds	1
  1291  0074                     ?i1_Lcd4_Set_Cursor:	
  1292  0074                     ??i1___awmod:	
  1293                           ; 0 bytes @ 0x4
  1294                           
  1295  0074                     ??i1___lwdiv:	
  1296                           ; 0 bytes @ 0x4
  1297                           
  1298  0074                     ??i1___lwmod:	
  1299                           ; 0 bytes @ 0x4
  1300                           
  1301  0074                     i1Lcd4_Set_Cursor@pixel_nb:	
  1302                           ; 0 bytes @ 0x4
  1303                           
  1304  0074                     i1Lcd4_Write_Char@y:	
  1305                           ; 1 bytes @ 0x4
  1306                           
  1307                           
  1308                           ; 1 bytes @ 0x4
  1309  0074                     	ds	1
  1310  0075                     ??i1_Lcd4_Set_Cursor:	
  1311  0075                     i1Lcd4_Write_Char@a:	
  1312                           ; 0 bytes @ 0x5
  1313                           
  1314  0075                     i1___awmod@counter:	
  1315                           ; 1 bytes @ 0x5
  1316                           
  1317  0075                     i1___lwmod@counter:	
  1318                           ; 1 bytes @ 0x5
  1319                           
  1320  0075                     i1___lwdiv@quotient:	
  1321                           ; 1 bytes @ 0x5
  1322                           
  1323                           
  1324                           ; 2 bytes @ 0x5
  1325  0075                     	ds	1
  1326  0076                     i1___awmod@sign:	
  1327  0076                     i1strlen@s:	
  1328                           ; 1 bytes @ 0x6
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0x6
  1332  0076                     	ds	1
  1333  0077                     ?___awdiv:	
  1334  0077                     i1___lwdiv@counter:	
  1335                           ; 2 bytes @ 0x7
  1336                           
  1337  0077                     i1strlen@cp:	
  1338                           ; 1 bytes @ 0x7
  1339                           
  1340  0077                     ___awdiv@divisor:	
  1341                           ; 1 bytes @ 0x7
  1342                           
  1343                           
  1344                           ; 2 bytes @ 0x7
  1345  0077                     	ds	1
  1346  0078                     ??i1_uart_printf:	
  1347  0078                     ?i1_utoa:	
  1348                           ; 0 bytes @ 0x8
  1349                           
  1350  0078                     i1utoa@val:	
  1351                           ; 1 bytes @ 0x8
  1352                           
  1353                           
  1354                           ; 2 bytes @ 0x8
  1355  0078                     	ds	1
  1356  0079                     i1uart_printf@string:	
  1357  0079                     i1Lcd4_Set_Cursor@ligne:	
  1358                           ; 1 bytes @ 0x9
  1359                           
  1360  0079                     ___awdiv@dividend:	
  1361                           ; 1 bytes @ 0x9
  1362                           
  1363                           
  1364                           ; 2 bytes @ 0x9
  1365  0079                     	ds	1
  1366  007A                     i1Lcd4_Set_Cursor@lCmdMsb:	
  1367  007A                     i1uart_printf@i:	
  1368                           ; 1 bytes @ 0xA
  1369                           
  1370  007A                     i1utoa@base:	
  1371                           ; 2 bytes @ 0xA
  1372                           
  1373                           
  1374                           ; 2 bytes @ 0xA
  1375  007A                     	ds	1
  1376  007B                     ??___awdiv:	
  1377  007B                     i1Lcd4_Set_Cursor@lCmdLsb:	
  1378                           ; 0 bytes @ 0xB
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0xB
  1382  007B                     	ds	1
  1383  007C                     ?i1_LOG:	
  1384  007C                     ??i1_utoa:	
  1385                           ; 0 bytes @ 0xC
  1386                           
  1387  007C                     i1LOG@level:	
  1388                           ; 0 bytes @ 0xC
  1389                           
  1390                           
  1391                           ; 1 bytes @ 0xC
  1392  007C                     	ds	1
  1393  007D                     ??_time_shapping:	
  1394  007D                     ??i1_LOG:	
  1395                           ; 0 bytes @ 0xD
  1396                           
  1397  007D                     i1LOG@string:	
  1398                           ; 0 bytes @ 0xD
  1399                           
  1400                           
  1401                           ; 1 bytes @ 0xD
  1402  007D                     	ds	1
  1403                           
  1404                           	psect	cstackBANK0
  1405  0020                     __pcstackBANK0:	
  1406  0020                     ??i1_Lcd4_Write_String:	
  1407  0020                     ___awdiv@counter:	
  1408                           ; 0 bytes @ 0x0
  1409                           
  1410  0020                     i1utoa@buf:	
  1411                           ; 1 bytes @ 0x0
  1412                           
  1413                           
  1414                           ; 1 bytes @ 0x0
  1415  0020                     	ds	1
  1416  0021                     ___awdiv@sign:	
  1417  0021                     i1Lcd4_Write_String@a:	
  1418                           ; 1 bytes @ 0x1
  1419                           
  1420  0021                     i1utoa@v:	
  1421                           ; 1 bytes @ 0x1
  1422                           
  1423                           
  1424                           ; 2 bytes @ 0x1
  1425  0021                     	ds	1
  1426  0022                     ___awdiv@quotient:	
  1427  0022                     i1Lcd4_Write_String@i:	
  1428                           ; 2 bytes @ 0x2
  1429                           
  1430                           
  1431                           ; 2 bytes @ 0x2
  1432  0022                     	ds	1
  1433  0023                     i1utoa@c:	
  1434                           
  1435                           ; 1 bytes @ 0x3
  1436  0023                     	ds	1
  1437  0024                     ?_time_shapping:	
  1438  0024                     ??i1_display_player_nbr:	
  1439                           ; 0 bytes @ 0x4
  1440                           
  1441  0024                     time_shapping@time:	
  1442                           ; 0 bytes @ 0x4
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x4
  1446  0024                     	ds	2
  1447  0026                     time_shapping@secondes:	
  1448  0026                     i1display_player_nbr@string:	
  1449                           ; 2 bytes @ 0x6
  1450                           
  1451                           
  1452                           ; 16 bytes @ 0x6
  1453  0026                     	ds	2
  1454  0028                     time_shapping@minutes:	
  1455                           
  1456                           ; 2 bytes @ 0x8
  1457  0028                     	ds	2
  1458  002A                     time_shapping@hours:	
  1459                           
  1460                           ; 2 bytes @ 0xA
  1461  002A                     	ds	2
  1462  002C                     time_shapping@secondes_buf:	
  1463                           
  1464                           ; 2 bytes @ 0xC
  1465  002C                     	ds	2
  1466  002E                     time_shapping@minutes_buf:	
  1467                           
  1468                           ; 2 bytes @ 0xE
  1469  002E                     	ds	2
  1470  0030                     time_shapping@hours_buf:	
  1471                           
  1472                           ; 2 bytes @ 0x10
  1473  0030                     	ds	2
  1474  0032                     time_shapping@buffer:	
  1475                           
  1476                           ; 1 bytes @ 0x12
  1477  0032                     	ds	1
  1478  0033                     ??_game_phase:	
  1479                           
  1480                           ; 0 bytes @ 0x13
  1481  0033                     	ds	2
  1482  0035                     game_phase@time_str:	
  1483                           
  1484                           ; 9 bytes @ 0x15
  1485  0035                     	ds	1
  1486  0036                     i1display_player_nbr@string_player_number:	
  1487                           
  1488                           ; 2 bytes @ 0x16
  1489  0036                     	ds	2
  1490  0038                     i1display_player_nbr@player_number:	
  1491                           
  1492                           ; 1 bytes @ 0x18
  1493  0038                     	ds	1
  1494  0039                     ??_switch_player:	
  1495                           
  1496                           ; 0 bytes @ 0x19
  1497  0039                     	ds	5
  1498  003E                     game_phase@remaining_time:	
  1499                           
  1500                           ; 2 bytes @ 0x1E
  1501  003E                     	ds	2
  1502  0040                     ??_isr:	
  1503                           
  1504                           ; 0 bytes @ 0x20
  1505  0040                     	ds	4
  1506  0044                     isr@string:	
  1507                           
  1508                           ; 8 bytes @ 0x24
  1509  0044                     	ds	8
  1510                           
  1511                           	psect	maintext
  1512  0635                     __pmaintext:	
  1513 ;;
  1514 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1515 ;;
  1516 ;; *************** function _main *****************
  1517 ;; Defined at:
  1518 ;;		line 31 in file "main.c"
  1519 ;; Parameters:    Size  Location     Type
  1520 ;;		None
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  string          1   53[BANK1 ] PTR unsigned char 
  1523 ;; Return value:  Size  Location     Type
  1524 ;;		None               void
  1525 ;; Registers used:
  1526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 17F/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1532 ;;      Params:         0       0       0       0
  1533 ;;      Locals:         0       0       1       0
  1534 ;;      Temps:          0       0       3       0
  1535 ;;      Totals:         0       0       4       0
  1536 ;;Total ram usage:        4 bytes
  1537 ;; Hardware stack levels required when called:   13
  1538 ;; This function calls:
  1539 ;;		_initiate_game
  1540 ;;		_strcpy
  1541 ;;		_system_init
  1542 ;;		_uart_printf
  1543 ;; This function is called by:
  1544 ;;		Startup code after reset
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           
  1549                           ;psect for function _main
  1550  0635                     _main:	
  1551                           
  1552                           ;main.c: 33: system_init();
  1553                           
  1554                           ;incstack = 0
  1555 ;; hardware stack exceeded
  1556                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1557  0635  118A  26BD  118A   	fcall	_system_init
  1558                           
  1559                           ;main.c: 35: initiate_game(3,TIME_PER_GAME,3670U);
  1560  0638  1683               	bsf	3,5	;RP0=1, select bank1
  1561  0639  1303               	bcf	3,6	;RP1=0, select bank1
  1562  063A  01C7               	clrf	initiate_game@type_of_game^(0+128)
  1563  063B  3056               	movlw	86
  1564  063C  00C8               	movwf	initiate_game@game_time^(0+128)
  1565  063D  300E               	movlw	14
  1566  063E  00C9               	movwf	(initiate_game@game_time^(0+128)+1)
  1567  063F  3003               	movlw	3
  1568  0640  118A  210A  118A   	fcall	_initiate_game
  1569                           
  1570                           ;main.c: 37: char * string;
  1571                           ;main.c: 39: strcpy(string, "end of line\n");
  1572  0643  3001               	movlw	(STR_1-__stringbase)& (0+255)
  1573  0644  1683               	bsf	3,5	;RP0=1, select bank1
  1574  0645  1303               	bcf	3,6	;RP1=0, select bank1
  1575  0646  00D2               	movwf	??_main^(0+128)
  1576  0647  0852               	movf	??_main^(0+128),w
  1577  0648  00A0               	movwf	strcpy@from^(0+128)
  1578  0649  0855               	movf	main@string^(0+128),w
  1579  064A  158A  277D  118A   	fcall	_strcpy
  1580  064D                     l2550:	
  1581                           ;main.c: 43: while(1)
  1582                           
  1583                           
  1584                           ;main.c: 44: {
  1585                           ;main.c: 46: uart_printf(string);
  1586  064D  1683               	bsf	3,5	;RP0=1, select bank1
  1587  064E  1303               	bcf	3,6	;RP1=0, select bank1
  1588  064F  0855               	movf	main@string^(0+128),w
  1589  0650  118A  26E8  118A   	fcall	_uart_printf
  1590                           
  1591                           ;main.c: 49: _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1592  0653  3006               	movlw	6
  1593  0654  1683               	bsf	3,5	;RP0=1, select bank1
  1594  0655  1303               	bcf	3,6	;RP1=0, select bank1
  1595  0656  00D4               	movwf	(??_main^(0+128)+2)
  1596  0657  3013               	movlw	19
  1597  0658  00D3               	movwf	(??_main^(0+128)+1)
  1598  0659  30B1               	movlw	177
  1599  065A  00D2               	movwf	??_main^(0+128)
  1600  065B                     u2257:	
  1601  065B  0BD2               	decfsz	??_main^(0+128),f
  1602  065C  2E5B               	goto	u2257
  1603  065D  0BD3               	decfsz	(??_main^(0+128)+1),f
  1604  065E  2E5B               	goto	u2257
  1605  065F  0BD4               	decfsz	(??_main^(0+128)+2),f
  1606  0660  2E5B               	goto	u2257
  1607  0661  2E62               	nop2
  1608  0662  2E4D               	goto	l2550
  1609  0663                     __end_of_main:	
  1610                           
  1611                           	psect	text1
  1612  06BD                     __ptext1:	
  1613 ;; *************** function _system_init *****************
  1614 ;; Defined at:
  1615 ;;		line 48 in file "system.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;		None               void
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1629 ;;      Params:         0       0       0       0
  1630 ;;      Locals:         0       0       0       0
  1631 ;;      Temps:          0       0       3       0
  1632 ;;      Totals:         0       0       3       0
  1633 ;;Total ram usage:        3 bytes
  1634 ;; Hardware stack levels used:    1
  1635 ;; Hardware stack levels required when called:   11
  1636 ;; This function calls:
  1637 ;;		_ConfigureOscillator
  1638 ;;		_Lcd4_Init
  1639 ;;		_initUart
  1640 ;;		_init_interrupt
  1641 ;;		_init_timer_0
  1642 ;;		_init_timer_2
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _system_init
  1650  06BD                     _system_init:	
  1651                           
  1652                           ;system.c: 50: TRISA = 0x0;
  1653                           
  1654                           ;incstack = 0
  1655 ;; hardware stack exceeded
  1656                           ; Regs used in _system_init: [wreg+status,2+status,0+pclath+cstack]
  1657  06BD  1683               	bsf	3,5	;RP0=1, select bank1
  1658  06BE  1303               	bcf	3,6	;RP1=0, select bank1
  1659  06BF  0185               	clrf	5	;volatile
  1660                           
  1661                           ;system.c: 51: TRISB = 0x0;
  1662  06C0  0186               	clrf	6	;volatile
  1663                           
  1664                           ;system.c: 52: TRISC = 0x0;
  1665  06C1  0187               	clrf	7	;volatile
  1666                           
  1667                           ;system.c: 55: PORTA = 0x00;
  1668  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1669  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1670  06C4  0185               	clrf	5	;volatile
  1671                           
  1672                           ;system.c: 56: PORTB = 0x00;
  1673  06C5  0186               	clrf	6	;volatile
  1674                           
  1675                           ;system.c: 57: PORTC = 0x00;
  1676  06C6  0187               	clrf	7	;volatile
  1677                           
  1678                           ;system.c: 60: ConfigureOscillator();
  1679  06C7  158A  26B9  118A   	fcall	_ConfigureOscillator
  1680                           
  1681                           ;system.c: 61: init_interrupt();
  1682  06CA  158A  269B  118A   	fcall	_init_interrupt
  1683                           
  1684                           ;system.c: 62: init_timer_0();
  1685  06CD  158A  26AA  118A   	fcall	_init_timer_0
  1686                           
  1687                           ;system.c: 64: init_timer_2();
  1688  06D0  158A  26EE  118A   	fcall	_init_timer_2
  1689                           
  1690                           ;system.c: 65: initUart();
  1691  06D3  158A  279B  118A   	fcall	_initUart
  1692                           
  1693                           ;system.c: 67: _delay((unsigned long)((500)*(8000000UL/4000.0)));
  1694  06D6  3006               	movlw	6
  1695  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  1696  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  1697  06D9  00A8               	movwf	(??_system_init^(0+128)+2)
  1698  06DA  3013               	movlw	19
  1699  06DB  00A7               	movwf	(??_system_init^(0+128)+1)
  1700  06DC  30B1               	movlw	177
  1701  06DD  00A6               	movwf	??_system_init^(0+128)
  1702  06DE                     u2267:	
  1703  06DE  0BA6               	decfsz	??_system_init^(0+128),f
  1704  06DF  2EDE               	goto	u2267
  1705  06E0  0BA7               	decfsz	(??_system_init^(0+128)+1),f
  1706  06E1  2EDE               	goto	u2267
  1707  06E2  0BA8               	decfsz	(??_system_init^(0+128)+2),f
  1708  06E3  2EDE               	goto	u2267
  1709  06E4  2EE5               	nop2
  1710                           
  1711                           ;system.c: 68: Lcd4_Init();
  1712  06E5  118A  25A4         	fcall	_Lcd4_Init
  1713  06E7  0008               	return
  1714  06E8                     __end_of_system_init:	
  1715                           
  1716                           	psect	text2
  1717  0EEE                     __ptext2:	
  1718 ;; *************** function _init_timer_2 *****************
  1719 ;; Defined at:
  1720 ;;		line 57 in file "timer.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;		None               void
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1734 ;;      Params:         0       0       0       0
  1735 ;;      Locals:         0       0       0       0
  1736 ;;      Temps:          0       0       0       0
  1737 ;;      Totals:         0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:    7
  1741 ;; This function calls:
  1742 ;;		Nothing
  1743 ;; This function is called by:
  1744 ;;		_system_init
  1745 ;; This function uses a non-reentrant model
  1746 ;;
  1747                           
  1748                           
  1749                           ;psect for function _init_timer_2
  1750  0EEE                     _init_timer_2:	
  1751                           
  1752                           ;timer.c: 58: TMR2ON = 1;
  1753                           
  1754                           ;incstack = 0
  1755 ;; hardware stack exceeded
  1756                           ; Regs used in _init_timer_2: [wreg+status,2+status,0]
  1757  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  1758  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  1759  0EF0  1512               	bsf	18,2	;volatile
  1760                           
  1761                           ;timer.c: 62: T2CONbits.T2CKPS=3;
  1762  0EF1  3003               	movlw	3
  1763  0EF2  0492               	iorwf	18,f	;volatile
  1764                           
  1765                           ;timer.c: 65: T2CONbits.TOUTPS = 9;
  1766  0EF3  0812               	movf	18,w	;volatile
  1767  0EF4  3987               	andlw	-121
  1768  0EF5  3848               	iorlw	72
  1769  0EF6  0092               	movwf	18	;volatile
  1770                           
  1771                           ;timer.c: 68: PR2 = 8000000UL/4/16/1000;
  1772  0EF7  307D               	movlw	125
  1773  0EF8  1683               	bsf	3,5	;RP0=1, select bank1
  1774  0EF9  1303               	bcf	3,6	;RP1=0, select bank1
  1775  0EFA  0092               	movwf	18	;volatile
  1776                           
  1777                           ;timer.c: 71: PIE1bits.TMR2IE = 1;
  1778  0EFB  148C               	bsf	12,1	;volatile
  1779  0EFC  0008               	return
  1780  0EFD                     __end_of_init_timer_2:	
  1781                           
  1782                           	psect	text3
  1783  0EAA                     __ptext3:	
  1784 ;; *************** function _init_timer_0 *****************
  1785 ;; Defined at:
  1786 ;;		line 10 in file "timer.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;		None               void
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1800 ;;      Params:         0       0       0       0
  1801 ;;      Locals:         0       0       0       0
  1802 ;;      Temps:          0       0       0       0
  1803 ;;      Totals:         0       0       0       0
  1804 ;;Total ram usage:        0 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    7
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_system_init
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           
  1815                           ;psect for function _init_timer_0
  1816  0EAA                     _init_timer_0:	
  1817                           
  1818                           ;timer.c: 12: OPTION_REGbits.T0CS = 0;
  1819                           
  1820                           ;incstack = 0
  1821 ;; hardware stack exceeded
  1822                           ; Regs used in _init_timer_0: [wreg+status,2+status,0]
  1823  0EAA  1683               	bsf	3,5	;RP0=1, select bank1
  1824  0EAB  1303               	bcf	3,6	;RP1=0, select bank1
  1825  0EAC  1281               	bcf	1,5	;volatile
  1826                           
  1827                           ;timer.c: 14: OPTION_REGbits.PSA = 0;
  1828  0EAD  1181               	bcf	1,3	;volatile
  1829                           
  1830                           ;timer.c: 16: OPTION_REGbits.PS = 0x7;
  1831  0EAE  3007               	movlw	7
  1832  0EAF  0481               	iorwf	1,f	;volatile
  1833  0EB0  0008               	return
  1834  0EB1                     __end_of_init_timer_0:	
  1835                           
  1836                           	psect	text4
  1837  0E9B                     __ptext4:	
  1838 ;; *************** function _init_interrupt *****************
  1839 ;; Defined at:
  1840 ;;		line 36 in file "interrupts.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		None
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1854 ;;      Params:         0       0       0       0
  1855 ;;      Locals:         0       0       0       0
  1856 ;;      Temps:          0       0       0       0
  1857 ;;      Totals:         0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    7
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_system_init
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _init_interrupt
  1870  0E9B                     _init_interrupt:	
  1871                           
  1872                           ;interrupts.c: 38: INTCONbits.GIE = 1;
  1873                           
  1874                           ;incstack = 0
  1875 ;; hardware stack exceeded
  1876                           ; Regs used in _init_interrupt: []
  1877  0E9B  178B               	bsf	11,7	;volatile
  1878                           
  1879                           ;interrupts.c: 39: INTCONbits.PEIE =1;
  1880  0E9C  170B               	bsf	11,6	;volatile
  1881  0E9D  0008               	return
  1882  0E9E                     __end_of_init_interrupt:	
  1883                           
  1884                           	psect	text5
  1885  0F9B                     __ptext5:	
  1886 ;; *************** function _initUart *****************
  1887 ;; Defined at:
  1888 ;;		line 25 in file "UART.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;		None
  1893 ;; Return value:  Size  Location     Type
  1894 ;;		None               void
  1895 ;; Registers used:
  1896 ;;		wreg, status,2
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1902 ;;      Params:         0       0       0       0
  1903 ;;      Locals:         0       0       0       0
  1904 ;;      Temps:          0       0       0       0
  1905 ;;      Totals:         0       0       0       0
  1906 ;;Total ram usage:        0 bytes
  1907 ;; Hardware stack levels used:    1
  1908 ;; Hardware stack levels required when called:    7
  1909 ;; This function calls:
  1910 ;;		Nothing
  1911 ;; This function is called by:
  1912 ;;		_system_init
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           
  1917                           ;psect for function _initUart
  1918  0F9B                     _initUart:	
  1919                           
  1920                           ;UART.c: 28: PIE1bits.RCIE =1;
  1921                           
  1922                           ;incstack = 0
  1923 ;; hardware stack exceeded
  1924                           ; Regs used in _initUart: [wreg+status,2]
  1925  0F9B  1683               	bsf	3,5	;RP0=1, select bank1
  1926  0F9C  1303               	bcf	3,6	;RP1=0, select bank1
  1927  0F9D  168C               	bsf	12,5	;volatile
  1928                           
  1929                           ;UART.c: 30: TXSTAbits.TXEN = 0;
  1930  0F9E  1298               	bcf	24,5	;volatile
  1931                           
  1932                           ;UART.c: 34: SPBRG = (8000000UL/9600/64)-1;
  1933  0F9F  300C               	movlw	12
  1934  0FA0  0099               	movwf	25	;volatile
  1935                           
  1936                           ;UART.c: 36: SPBRGH = 0x00;
  1937  0FA1  019A               	clrf	26	;volatile
  1938                           
  1939                           ;UART.c: 38: ANSEL =0;
  1940  0FA2  1283               	bcf	3,5	;RP0=0, select bank2
  1941  0FA3  1703               	bsf	3,6	;RP1=1, select bank2
  1942  0FA4  019E               	clrf	30	;volatile
  1943                           
  1944                           ;UART.c: 39: ANSELH= 0;
  1945  0FA5  019F               	clrf	31	;volatile
  1946                           
  1947                           ;UART.c: 42: TRISBbits.TRISB5 = 1;
  1948  0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  1949  0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  1950  0FA8  1686               	bsf	6,5	;volatile
  1951                           
  1952                           ;UART.c: 43: TRISBbits.TRISB7 = 0;
  1953  0FA9  1386               	bcf	6,7	;volatile
  1954                           
  1955                           ;UART.c: 48: TXSTAbits.TX9 = 0;
  1956  0FAA  1318               	bcf	24,6	;volatile
  1957                           
  1958                           ;UART.c: 51: TXSTAbits.SYNC = 0;
  1959  0FAB  1218               	bcf	24,4	;volatile
  1960                           
  1961                           ;UART.c: 52: TXREG = 0;
  1962  0FAC  1283               	bcf	3,5	;RP0=0, select bank0
  1963  0FAD  1303               	bcf	3,6	;RP1=0, select bank0
  1964  0FAE  0199               	clrf	25	;volatile
  1965                           
  1966                           ;UART.c: 55: TXSTAbits.BRGH = 0;
  1967  0FAF  1683               	bsf	3,5	;RP0=1, select bank1
  1968  0FB0  1303               	bcf	3,6	;RP1=0, select bank1
  1969  0FB1  1118               	bcf	24,2	;volatile
  1970                           
  1971                           ;UART.c: 56: BAUDCTLbits.BRG16 = 0;
  1972  0FB2  119B               	bcf	27,3	;volatile
  1973                           
  1974                           ;UART.c: 58: BAUDCTLbits.ABDEN = 0;
  1975  0FB3  101B               	bcf	27,0	;volatile
  1976                           
  1977                           ;UART.c: 63: TXSTAbits.TXEN = 1;
  1978  0FB4  1698               	bsf	24,5	;volatile
  1979                           
  1980                           ;UART.c: 64: RCSTAbits.CREN = 1;
  1981  0FB5  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0FB6  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0FB7  1618               	bsf	24,4	;volatile
  1984                           
  1985                           ;UART.c: 65: RCSTAbits.SPEN = 1;
  1986  0FB8  1798               	bsf	24,7	;volatile
  1987  0FB9  0008               	return
  1988  0FBA                     __end_of_initUart:	
  1989                           
  1990                           	psect	text6
  1991  05A4                     __ptext6:	
  1992 ;; *************** function _Lcd4_Init *****************
  1993 ;; Defined at:
  1994 ;;		line 57 in file "LCD_screen.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;		None               void
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2008 ;;      Params:         0       0       0       0
  2009 ;;      Locals:         0       0       0       0
  2010 ;;      Temps:          0       0       2       0
  2011 ;;      Totals:         0       0       2       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:   10
  2015 ;; This function calls:
  2016 ;;		_Lcd4_Clear
  2017 ;;		_Lcd4_Cmd
  2018 ;; This function is called by:
  2019 ;;		_system_init
  2020 ;; This function uses a non-reentrant model
  2021 ;;
  2022                           
  2023                           
  2024                           ;psect for function _Lcd4_Init
  2025  05A4                     _Lcd4_Init:	
  2026                           
  2027                           ;LCD_screen.c: 60: RA5 = 0;
  2028                           
  2029                           ;incstack = 0
  2030 ;; hardware stack exceeded
  2031                           ; Regs used in _Lcd4_Init: [wreg+status,2+status,0+pclath+cstack]
  2032  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  2033  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  2034  05A6  1285               	bcf	5,5	;volatile
  2035                           
  2036                           ;LCD_screen.c: 61: RA2 = 0;
  2037  05A7  1105               	bcf	5,2	;volatile
  2038                           
  2039                           ;LCD_screen.c: 63: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  2040  05A8  301A               	movlw	26
  2041  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  2042  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  2043  05AB  00A5               	movwf	(??_Lcd4_Init^(0+128)+1)
  2044  05AC  30F8               	movlw	248
  2045  05AD  00A4               	movwf	??_Lcd4_Init^(0+128)
  2046  05AE                     u2277:	
  2047  05AE  0BA4               	decfsz	??_Lcd4_Init^(0+128),f
  2048  05AF  2DAE               	goto	u2277
  2049  05B0  0BA5               	decfsz	(??_Lcd4_Init^(0+128)+1),f
  2050  05B1  2DAE               	goto	u2277
  2051  05B2  0000               	nop
  2052                           
  2053                           ;LCD_screen.c: 64: Lcd4_Cmd(0x02);
  2054  05B3  3002               	movlw	2
  2055  05B4  158A  275F  118A   	fcall	_Lcd4_Cmd
  2056                           
  2057                           ;LCD_screen.c: 67: Lcd4_Cmd(0x02);
  2058  05B7  3002               	movlw	2
  2059  05B8  158A  275F  118A   	fcall	_Lcd4_Cmd
  2060                           
  2061                           ;LCD_screen.c: 68: Lcd4_Cmd(0x0C);
  2062  05BB  300C               	movlw	12
  2063  05BC  158A  275F  118A   	fcall	_Lcd4_Cmd
  2064                           
  2065                           ;LCD_screen.c: 71: Lcd4_Cmd(0x00);
  2066  05BF  3000               	movlw	0
  2067  05C0  158A  275F  118A   	fcall	_Lcd4_Cmd
  2068                           
  2069                           ;LCD_screen.c: 72: Lcd4_Cmd(0x0F);
  2070  05C3  300F               	movlw	15
  2071  05C4  158A  275F  118A   	fcall	_Lcd4_Cmd
  2072                           
  2073                           ;LCD_screen.c: 75: _delay((unsigned long)((10)*(8000000UL/4000.0)));
  2074  05C7  301A               	movlw	26
  2075  05C8  1683               	bsf	3,5	;RP0=1, select bank1
  2076  05C9  1303               	bcf	3,6	;RP1=0, select bank1
  2077  05CA  00A5               	movwf	(??_Lcd4_Init^(0+128)+1)
  2078  05CB  30F8               	movlw	248
  2079  05CC  00A4               	movwf	??_Lcd4_Init^(0+128)
  2080  05CD                     u2287:	
  2081  05CD  0BA4               	decfsz	??_Lcd4_Init^(0+128),f
  2082  05CE  2DCD               	goto	u2287
  2083  05CF  0BA5               	decfsz	(??_Lcd4_Init^(0+128)+1),f
  2084  05D0  2DCD               	goto	u2287
  2085  05D1  0000               	nop
  2086                           
  2087                           ;LCD_screen.c: 78: Lcd4_Clear();
  2088  05D2  158A  26C1         	fcall	_Lcd4_Clear
  2089  05D4  0008               	return
  2090  05D5                     __end_of_Lcd4_Init:	
  2091                           
  2092                           	psect	text7
  2093  0EC1                     __ptext7:	
  2094 ;; *************** function _Lcd4_Clear *****************
  2095 ;; Defined at:
  2096 ;;		line 42 in file "LCD_screen.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  2  235[COMMON] int 
  2103 ;; Registers used:
  2104 ;;		wreg, status,2, status,0, pclath, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2110 ;;      Params:         0       0       0       0
  2111 ;;      Locals:         0       0       0       0
  2112 ;;      Temps:          0       0       0       0
  2113 ;;      Totals:         0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    9
  2117 ;; This function calls:
  2118 ;;		_Lcd4_Cmd
  2119 ;; This function is called by:
  2120 ;;		_Lcd4_Init
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _Lcd4_Clear
  2126  0EC1                     _Lcd4_Clear:	
  2127                           
  2128                           ;LCD_screen.c: 44: Lcd4_Cmd(0);
  2129                           
  2130                           ;incstack = 0
  2131 ;; hardware stack exceeded
  2132                           ; Regs used in _Lcd4_Clear: [wreg+status,2+status,0+pclath+cstack]
  2133  0EC1  3000               	movlw	0
  2134  0EC2  158A  275F  158A   	fcall	_Lcd4_Cmd
  2135                           
  2136                           ;LCD_screen.c: 45: Lcd4_Cmd(1);
  2137  0EC5  3001               	movlw	1
  2138  0EC6  158A  275F         	fcall	_Lcd4_Cmd
  2139  0EC8  0008               	return
  2140  0EC9                     __end_of_Lcd4_Clear:	
  2141                           
  2142                           	psect	text8
  2143  0EB9                     __ptext8:	
  2144 ;; *************** function _ConfigureOscillator *****************
  2145 ;; Defined at:
  2146 ;;		line 32 in file "system.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2160 ;;      Params:         0       0       0       0
  2161 ;;      Locals:         0       0       0       0
  2162 ;;      Temps:          0       0       0       0
  2163 ;;      Totals:         0       0       0       0
  2164 ;;Total ram usage:        0 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    7
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_system_init
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           
  2174                           
  2175                           ;psect for function _ConfigureOscillator
  2176  0EB9                     _ConfigureOscillator:	
  2177                           
  2178                           ;system.c: 36: OSCCONbits.SCS=0x1;
  2179                           
  2180                           ;incstack = 0
  2181 ;; hardware stack exceeded
  2182                           ; Regs used in _ConfigureOscillator: [wreg+status,2+status,0]
  2183  0EB9  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0EBA  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0EBB  140F               	bsf	15,0	;volatile
  2186                           
  2187                           ;system.c: 37: OSCCONbits.IRCF=0x7;
  2188  0EBC  3070               	movlw	112
  2189  0EBD  048F               	iorwf	15,f	;volatile
  2190  0EBE                     l101:	
  2191                           ;system.c: 41: {
  2192                           ;system.c: 42: ;
  2193                           
  2194                           ;system.c: 40: while(OSCCONbits.HTS==0)
  2195                           
  2196  0EBE  190F               	btfsc	15,2	;volatile
  2197  0EBF  0008               	return
  2198  0EC0  2EBE               	goto	l101
  2199  0EC1                     __end_of_ConfigureOscillator:	
  2200                           
  2201                           	psect	text9
  2202  010A                     __ptext9:	
  2203 ;; *************** function _initiate_game *****************
  2204 ;; Defined at:
  2205 ;;		line 9 in file "game_timer/src/game_timer.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  player_nb       1    wreg     unsigned char 
  2208 ;;  type_of_game    1   39[BANK1 ] enum E271
  2209 ;;  game_time       2   40[BANK1 ] unsigned int 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  player_nb       1   47[BANK1 ] unsigned char 
  2212 ;;  i               2   48[BANK1 ] int 
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  2   39[BANK1 ] int 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2222 ;;      Params:         0       0       3       0
  2223 ;;      Locals:         0       0       3       0
  2224 ;;      Temps:          0       0       5       0
  2225 ;;      Totals:         0       0      11       0
  2226 ;;Total ram usage:       11 bytes
  2227 ;; Hardware stack levels used:    1
  2228 ;; Hardware stack levels required when called:   12
  2229 ;; This function calls:
  2230 ;;		___awmod
  2231 ;;		_display_player_nbr
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _initiate_game
  2239  010A                     _initiate_game:	
  2240                           
  2241                           ;incstack = 0
  2242 ;; hardware stack exceeded
  2243                           ; Regs used in _initiate_game: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2244                           ;initiate_game@player_nb stored from wreg
  2245  010A  1683               	bsf	3,5	;RP0=1, select bank1
  2246  010B  1303               	bcf	3,6	;RP1=0, select bank1
  2247  010C  00CF               	movwf	initiate_game@player_nb^(0+128)
  2248                           
  2249                           ;game_timer.c: 13: extern game_type_t gtype_of_game;
  2250                           ;game_timer.c: 14: extern unsigned int ggame_time;
  2251                           ;game_timer.c: 15: extern player * gcurrent_player;
  2252                           ;game_timer.c: 17: extern player player_array[10];
  2253                           ;game_timer.c: 20: for (int i =0;i<player_nb;i++)
  2254  010D  01D0               	clrf	initiate_game@i^(0+128)
  2255  010E  01D1               	clrf	(initiate_game@i+1)^(0+128)
  2256  010F                     l2484:	
  2257  010F  0851               	movf	(initiate_game@i+1)^(0+128),w
  2258  0110  3A80               	xorlw	128
  2259  0111  00CA               	movwf	??_initiate_game^(0+128)
  2260  0112  3080               	movlw	128
  2261  0113  024A               	subwf	??_initiate_game^(0+128),w
  2262  0114  1D03               	skipz
  2263  0115  2918               	goto	u2135
  2264  0116  084F               	movf	initiate_game@player_nb^(0+128),w
  2265  0117  0250               	subwf	initiate_game@i^(0+128),w
  2266  0118                     u2135:	
  2267  0118  1803               	btfsc	3,0
  2268  0119  2974               	goto	l2486
  2269                           
  2270                           ;game_timer.c: 21: {
  2271                           ;game_timer.c: 22: player_array[i].played_time = 0;
  2272  011A  1683               	bsf	3,5	;RP0=1, select bank1
  2273  011B  1303               	bcf	3,6	;RP1=0, select bank1
  2274  011C  0850               	movf	initiate_game@i^(0+128),w
  2275  011D  00CA               	movwf	??_initiate_game^(0+128)
  2276  011E  3001               	movlw	1
  2277  011F                     u2095:	
  2278  011F  1003               	clrc
  2279  0120  0DCA               	rlf	??_initiate_game^(0+128),f
  2280  0121  3EFF               	addlw	-1
  2281  0122  1D03               	skipz
  2282  0123  291F               	goto	u2095
  2283  0124  1003               	clrc
  2284  0125  0D4A               	rlf	??_initiate_game^(0+128),w
  2285  0126  3E01               	addlw	1
  2286  0127  3E20               	addlw	_player_array& (0+255)
  2287  0128  0084               	movwf	4
  2288  0129  1783               	bsf	3,7	;select IRP bank2
  2289  012A  0180               	clrf	0
  2290  012B  0A84               	incf	4,f
  2291  012C  0180               	clrf	0
  2292                           
  2293                           ;game_timer.c: 23: player_array[i].player_number = i;
  2294  012D  0850               	movf	initiate_game@i^(0+128),w
  2295  012E  00CA               	movwf	??_initiate_game^(0+128)
  2296  012F  0850               	movf	initiate_game@i^(0+128),w
  2297  0130  00CB               	movwf	(??_initiate_game+1)^(0+128)
  2298  0131  3001               	movlw	1
  2299  0132                     u2105:	
  2300  0132  1003               	clrc
  2301  0133  0DCB               	rlf	(??_initiate_game+1)^(0+128),f
  2302  0134  3EFF               	addlw	-1
  2303  0135  1D03               	skipz
  2304  0136  2932               	goto	u2105
  2305  0137  1003               	clrc
  2306  0138  0D4B               	rlf	(??_initiate_game+1)^(0+128),w
  2307  0139  3E20               	addlw	_player_array& (0+255)
  2308  013A  0084               	movwf	4
  2309  013B  084A               	movf	??_initiate_game^(0+128),w
  2310  013C  0080               	movwf	0
  2311                           
  2312                           ;game_timer.c: 24: player_array[i].next_player = &player_array[(i+1)%player_nb];
  2313  013D  084F               	movf	initiate_game@player_nb^(0+128),w
  2314  013E  00CA               	movwf	??_initiate_game^(0+128)
  2315  013F  01CB               	clrf	(??_initiate_game^(0+128)+1)
  2316  0140  084A               	movf	??_initiate_game^(0+128),w
  2317  0141  00A0               	movwf	___awmod@divisor^(0+128)
  2318  0142  084B               	movf	(??_initiate_game+1)^(0+128),w
  2319  0143  00A1               	movwf	(___awmod@divisor+1)^(0+128)
  2320  0144  0850               	movf	initiate_game@i^(0+128),w
  2321  0145  3E01               	addlw	1
  2322  0146  00A2               	movwf	___awmod@dividend^(0+128)
  2323  0147  0851               	movf	(initiate_game@i+1)^(0+128),w
  2324  0148  1803               	skipnc
  2325  0149  3E01               	addlw	1
  2326  014A  3E00               	addlw	0
  2327  014B  00A3               	movwf	(___awmod@dividend+1)^(0+128)
  2328  014C  118A  23A7  118A   	fcall	___awmod
  2329  014F  1683               	bsf	3,5	;RP0=1, select bank1
  2330  0150  1303               	bcf	3,6	;RP1=0, select bank1
  2331  0151  0820               	movf	?___awmod^(0+128),w
  2332  0152  00CC               	movwf	(??_initiate_game+2)^(0+128)
  2333  0153  3001               	movlw	1
  2334  0154                     u2115:	
  2335  0154  1003               	clrc
  2336  0155  0DCC               	rlf	(??_initiate_game+2)^(0+128),f
  2337  0156  3EFF               	addlw	-1
  2338  0157  1D03               	skipz
  2339  0158  2954               	goto	u2115
  2340  0159  1003               	clrc
  2341  015A  0D4C               	rlf	(??_initiate_game+2)^(0+128),w
  2342  015B  3E20               	addlw	_player_array& (0+255)
  2343  015C  00CD               	movwf	(??_initiate_game+3)^(0+128)
  2344  015D  0850               	movf	initiate_game@i^(0+128),w
  2345  015E  00CE               	movwf	(??_initiate_game+4)^(0+128)
  2346  015F  3001               	movlw	1
  2347  0160                     u2125:	
  2348  0160  1003               	clrc
  2349  0161  0DCE               	rlf	(??_initiate_game+4)^(0+128),f
  2350  0162  3EFF               	addlw	-1
  2351  0163  1D03               	skipz
  2352  0164  2960               	goto	u2125
  2353  0165  1003               	clrc
  2354  0166  0D4E               	rlf	(??_initiate_game+4)^(0+128),w
  2355  0167  3E03               	addlw	3
  2356  0168  3E20               	addlw	_player_array& (0+255)
  2357  0169  0084               	movwf	4
  2358  016A  084D               	movf	(??_initiate_game+3)^(0+128),w
  2359  016B  1783               	bsf	3,7	;select IRP bank2
  2360  016C  0080               	movwf	0
  2361  016D  3001               	movlw	1
  2362  016E  07D0               	addwf	initiate_game@i^(0+128),f
  2363  016F  1803               	skipnc
  2364  0170  0AD1               	incf	(initiate_game@i+1)^(0+128),f
  2365  0171  3000               	movlw	0
  2366  0172  07D1               	addwf	(initiate_game@i+1)^(0+128),f
  2367  0173  290F               	goto	l2484
  2368  0174                     l2486:	
  2369                           
  2370                           ;game_timer.c: 25: }
  2371                           ;game_timer.c: 27: gcurrent_player = &player_array[0];
  2372  0174  3020               	movlw	_player_array& (0+255)
  2373  0175  1683               	bsf	3,5	;RP0=1, select bank1
  2374  0176  1303               	bcf	3,6	;RP1=0, select bank1
  2375  0177  00CA               	movwf	??_initiate_game^(0+128)
  2376  0178  084A               	movf	??_initiate_game^(0+128),w
  2377  0179  00D8               	movwf	_gcurrent_player^(0+128)
  2378                           
  2379                           ;game_timer.c: 28: display_player_nbr(gcurrent_player->player_number);
  2380  017A  0858               	movf	_gcurrent_player^(0+128),w
  2381  017B  0084               	movwf	4
  2382  017C  1783               	bsf	3,7	;select IRP bank2
  2383  017D  0800               	movf	0,w
  2384  017E  118A  25D5         	fcall	_display_player_nbr
  2385                           
  2386                           ;game_timer.c: 30: gtype_of_game = type_of_game;
  2387  0180  1683               	bsf	3,5	;RP0=1, select bank1
  2388  0181  1303               	bcf	3,6	;RP1=0, select bank1
  2389  0182  0847               	movf	initiate_game@type_of_game^(0+128),w
  2390  0183  00CA               	movwf	??_initiate_game^(0+128)
  2391  0184  084A               	movf	??_initiate_game^(0+128),w
  2392  0185  00D7               	movwf	_gtype_of_game^(0+128)
  2393                           
  2394                           ;game_timer.c: 31: ggame_time = game_time;
  2395  0186  0849               	movf	(initiate_game@game_time+1)^(0+128),w
  2396  0187  1283               	bcf	3,5	;RP0=0, select bank0
  2397  0188  1303               	bcf	3,6	;RP1=0, select bank0
  2398  0189  01CF               	clrf	_ggame_time+1
  2399  018A  07CF               	addwf	_ggame_time+1,f
  2400  018B  1683               	bsf	3,5	;RP0=1, select bank1
  2401  018C  1303               	bcf	3,6	;RP1=0, select bank1
  2402  018D  0848               	movf	initiate_game@game_time^(0+128),w
  2403  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2404  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0190  01CE               	clrf	_ggame_time
  2406  0191  07CE               	addwf	_ggame_time,f
  2407  0192  0008               	return
  2408  0193                     __end_of_initiate_game:	
  2409                           ;game_timer.c: 33: return OK;
  2410                           ;	Return value of _initiate_game is never used
  2411                           
  2412                           
  2413                           	psect	text10
  2414  05D5                     __ptext10:	
  2415 ;; *************** function _display_player_nbr *****************
  2416 ;; Defined at:
  2417 ;;		line 56 in file "game_timer/src/game_timer.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  player_numbe    1    wreg     unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  player_numbe    1   36[BANK1 ] unsigned char 
  2422 ;;  string         16   20[BANK1 ] unsigned char [16]
  2423 ;;  string_playe    2   37[BANK1 ] unsigned char [2]
  2424 ;; Return value:  Size  Location     Type
  2425 ;;		None               void
  2426 ;; Registers used:
  2427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2433 ;;      Params:         0       0       0       0
  2434 ;;      Locals:         0       0      19       0
  2435 ;;      Temps:          0       0       2       0
  2436 ;;      Totals:         0       0      21       0
  2437 ;;Total ram usage:       21 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:   11
  2440 ;; This function calls:
  2441 ;;		_Lcd4_Set_Cursor
  2442 ;;		_Lcd4_Write_String
  2443 ;;		_strcat
  2444 ;;		_strcpy
  2445 ;;		_utoa
  2446 ;; This function is called by:
  2447 ;;		_initiate_game
  2448 ;; This function uses a non-reentrant model
  2449 ;;
  2450                           
  2451                           
  2452                           ;psect for function _display_player_nbr
  2453  05D5                     _display_player_nbr:	
  2454                           
  2455                           ;incstack = 0
  2456 ;; hardware stack exceeded
  2457                           ; Regs used in _display_player_nbr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2458                           ;display_player_nbr@player_number stored from wreg
  2459  05D5  1683               	bsf	3,5	;RP0=1, select bank1
  2460  05D6  1303               	bcf	3,6	;RP1=0, select bank1
  2461  05D7  00C4               	movwf	display_player_nbr@player_number^(0+128)
  2462                           
  2463                           ;game_timer.c: 58: char string[16];
  2464                           ;game_timer.c: 59: char string_player_number [2];
  2465                           ;game_timer.c: 60: strcpy(string, "Joueur ");
  2466  05D8  300E               	movlw	(STR_2-__stringbase)& (0+255)
  2467  05D9  00B2               	movwf	??_display_player_nbr^(0+128)
  2468  05DA  0832               	movf	??_display_player_nbr^(0+128),w
  2469  05DB  00A0               	movwf	strcpy@from^(0+128)
  2470  05DC  30B4               	movlw	display_player_nbr@string& (0+255)
  2471  05DD  158A  277D  118A   	fcall	_strcpy
  2472                           
  2473                           ;game_timer.c: 61: utoa(string_player_number,player_number,10);
  2474  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  2475  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  2476  05E2  0844               	movf	display_player_nbr@player_number^(0+128),w
  2477  05E3  00B2               	movwf	??_display_player_nbr^(0+128)
  2478  05E4  01B3               	clrf	(??_display_player_nbr^(0+128)+1)
  2479  05E5  0832               	movf	??_display_player_nbr^(0+128),w
  2480  05E6  00A8               	movwf	utoa@val^(0+128)
  2481  05E7  0833               	movf	(??_display_player_nbr+1)^(0+128),w
  2482  05E8  00A9               	movwf	(utoa@val+1)^(0+128)
  2483  05E9  300A               	movlw	10
  2484  05EA  00AA               	movwf	utoa@base^(0+128)
  2485  05EB  3000               	movlw	0
  2486  05EC  00AB               	movwf	(utoa@base^(0+128)+1)
  2487  05ED  30C5               	movlw	display_player_nbr@string_player_number& (0+255)
  2488  05EE  118A  2193  118A   	fcall	_utoa
  2489                           
  2490                           ;game_timer.c: 62: strcat (string, string_player_number);
  2491  05F1  30C5               	movlw	display_player_nbr@string_player_number& (0+255)
  2492  05F2  1683               	bsf	3,5	;RP0=1, select bank1
  2493  05F3  1303               	bcf	3,6	;RP1=0, select bank1
  2494  05F4  00B2               	movwf	??_display_player_nbr^(0+128)
  2495  05F5  0832               	movf	??_display_player_nbr^(0+128),w
  2496  05F6  00A0               	movwf	strcat@from^(0+128)
  2497  05F7  30B4               	movlw	display_player_nbr@string& (0+255)
  2498  05F8  118A  2760  118A   	fcall	_strcat
  2499                           
  2500                           ;game_timer.c: 64: Lcd4_Set_Cursor(1,0);
  2501  05FB  1683               	bsf	3,5	;RP0=1, select bank1
  2502  05FC  1303               	bcf	3,6	;RP1=0, select bank1
  2503  05FD  01A4               	clrf	Lcd4_Set_Cursor@pixel_nb^(0+128)
  2504  05FE  3001               	movlw	1
  2505  05FF  118A  2691  118A   	fcall	_Lcd4_Set_Cursor
  2506                           
  2507                           ;game_timer.c: 65: Lcd4_Write_String(string);
  2508  0602  30B4               	movlw	display_player_nbr@string& (0+255)
  2509  0603  118A  2786         	fcall	_Lcd4_Write_String
  2510  0605  0008               	return
  2511  0606                     __end_of_display_player_nbr:	
  2512                           
  2513                           	psect	text11
  2514  0193                     __ptext11:	
  2515 ;; *************** function _utoa *****************
  2516 ;; Defined at:
  2517 ;;		line 17 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\itoa.c"
  2518 ;; Parameters:    Size  Location     Type
  2519 ;;  buf             1    wreg     PTR unsigned char 
  2520 ;;		 -> display_player_nbr@string_player_number(2), time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapp
      +ing@secondes_buf(2), 
  2521 ;;		 -> isr@string(8), 
  2522 ;;  val             2    8[BANK1 ] unsigned int 
  2523 ;;  base            2   10[BANK1 ] int 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  buf             1   16[BANK1 ] PTR unsigned char 
  2526 ;;		 -> display_player_nbr@string_player_number(2), time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapp
      +ing@secondes_buf(2), 
  2527 ;;		 -> isr@string(8), 
  2528 ;;  v               2   13[BANK1 ] unsigned int 
  2529 ;;  c               1   15[BANK1 ] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      PTR unsigned char 
  2532 ;; Registers used:
  2533 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2539 ;;      Params:         0       0       4       0
  2540 ;;      Locals:         0       0       4       0
  2541 ;;      Temps:          0       0       1       0
  2542 ;;      Totals:         0       0       9       0
  2543 ;;Total ram usage:        9 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; Hardware stack levels required when called:    8
  2546 ;; This function calls:
  2547 ;;		___lwdiv
  2548 ;;		___lwmod
  2549 ;; This function is called by:
  2550 ;;		_display_player_nbr
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _utoa
  2556  0193                     _utoa:	
  2557                           
  2558                           ;incstack = 0
  2559 ;; hardware stack exceeded
  2560                           ; Regs used in _utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2561                           ;utoa@buf stored from wreg
  2562  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2563  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2564  0195  00B0               	movwf	utoa@buf^(0+128)
  2565  0196  0829               	movf	(utoa@val+1)^(0+128),w
  2566  0197  01AE               	clrf	(utoa@v+1)^(0+128)
  2567  0198  07AE               	addwf	(utoa@v+1)^(0+128),f
  2568  0199  0828               	movf	utoa@val^(0+128),w
  2569  019A  01AD               	clrf	utoa@v^(0+128)
  2570  019B  07AD               	addwf	utoa@v^(0+128),f
  2571  019C                     l2074:	
  2572  019C  082B               	movf	(utoa@base+1)^(0+128),w
  2573  019D  01A1               	clrf	(___lwdiv@divisor+1)^(0+128)
  2574  019E  07A1               	addwf	(___lwdiv@divisor+1)^(0+128),f
  2575  019F  082A               	movf	utoa@base^(0+128),w
  2576  01A0  01A0               	clrf	___lwdiv@divisor^(0+128)
  2577  01A1  07A0               	addwf	___lwdiv@divisor^(0+128),f
  2578  01A2  082E               	movf	(utoa@v+1)^(0+128),w
  2579  01A3  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  2580  01A4  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2581  01A5  082D               	movf	utoa@v^(0+128),w
  2582  01A6  01A2               	clrf	___lwdiv@dividend^(0+128)
  2583  01A7  07A2               	addwf	___lwdiv@dividend^(0+128),f
  2584  01A8  118A  2489  118A   	fcall	___lwdiv
  2585  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  2586  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  2587  01AD  0821               	movf	(?___lwdiv+1)^(0+128),w
  2588  01AE  01AE               	clrf	(utoa@v+1)^(0+128)
  2589  01AF  07AE               	addwf	(utoa@v+1)^(0+128),f
  2590  01B0  0820               	movf	?___lwdiv^(0+128),w
  2591  01B1  01AD               	clrf	utoa@v^(0+128)
  2592  01B2  07AD               	addwf	utoa@v^(0+128),f
  2593  01B3  3001               	movlw	1
  2594  01B4  00AC               	movwf	??_utoa^(0+128)
  2595  01B5  082C               	movf	??_utoa^(0+128),w
  2596  01B6  07B0               	addwf	utoa@buf^(0+128),f
  2597  01B7  082E               	movf	(utoa@v+1)^(0+128),w
  2598  01B8  042D               	iorwf	utoa@v^(0+128),w
  2599  01B9  1D03               	skipz
  2600  01BA  299C               	goto	l2074
  2601  01BB  0830               	movf	utoa@buf^(0+128),w
  2602  01BC  0084               	movwf	4
  2603  01BD  1383               	bcf	3,7	;select IRP bank0
  2604  01BE  0180               	clrf	0
  2605  01BF  3001               	movlw	1
  2606  01C0  02B0               	subwf	utoa@buf^(0+128),f
  2607  01C1                     l2084:	
  2608  01C1  082B               	movf	(utoa@base+1)^(0+128),w
  2609  01C2  01A1               	clrf	(___lwmod@divisor+1)^(0+128)
  2610  01C3  07A1               	addwf	(___lwmod@divisor+1)^(0+128),f
  2611  01C4  082A               	movf	utoa@base^(0+128),w
  2612  01C5  01A0               	clrf	___lwmod@divisor^(0+128)
  2613  01C6  07A0               	addwf	___lwmod@divisor^(0+128),f
  2614  01C7  0829               	movf	(utoa@val+1)^(0+128),w
  2615  01C8  01A3               	clrf	(___lwmod@dividend+1)^(0+128)
  2616  01C9  07A3               	addwf	(___lwmod@dividend+1)^(0+128),f
  2617  01CA  0828               	movf	utoa@val^(0+128),w
  2618  01CB  01A2               	clrf	___lwmod@dividend^(0+128)
  2619  01CC  07A2               	addwf	___lwmod@dividend^(0+128),f
  2620  01CD  118A  2507  118A   	fcall	___lwmod
  2621  01D0  1683               	bsf	3,5	;RP0=1, select bank1
  2622  01D1  1303               	bcf	3,6	;RP1=0, select bank1
  2623  01D2  0820               	movf	?___lwmod^(0+128),w
  2624  01D3  00AC               	movwf	??_utoa^(0+128)
  2625  01D4  082C               	movf	??_utoa^(0+128),w
  2626  01D5  00AF               	movwf	utoa@c^(0+128)
  2627  01D6  082B               	movf	(utoa@base+1)^(0+128),w
  2628  01D7  01A1               	clrf	(___lwdiv@divisor+1)^(0+128)
  2629  01D8  07A1               	addwf	(___lwdiv@divisor+1)^(0+128),f
  2630  01D9  082A               	movf	utoa@base^(0+128),w
  2631  01DA  01A0               	clrf	___lwdiv@divisor^(0+128)
  2632  01DB  07A0               	addwf	___lwdiv@divisor^(0+128),f
  2633  01DC  0829               	movf	(utoa@val+1)^(0+128),w
  2634  01DD  01A3               	clrf	(___lwdiv@dividend+1)^(0+128)
  2635  01DE  07A3               	addwf	(___lwdiv@dividend+1)^(0+128),f
  2636  01DF  0828               	movf	utoa@val^(0+128),w
  2637  01E0  01A2               	clrf	___lwdiv@dividend^(0+128)
  2638  01E1  07A2               	addwf	___lwdiv@dividend^(0+128),f
  2639  01E2  118A  2489  118A   	fcall	___lwdiv
  2640  01E5  1683               	bsf	3,5	;RP0=1, select bank1
  2641  01E6  1303               	bcf	3,6	;RP1=0, select bank1
  2642  01E7  0821               	movf	(?___lwdiv+1)^(0+128),w
  2643  01E8  01A9               	clrf	(utoa@val+1)^(0+128)
  2644  01E9  07A9               	addwf	(utoa@val+1)^(0+128),f
  2645  01EA  0820               	movf	?___lwdiv^(0+128),w
  2646  01EB  01A8               	clrf	utoa@val^(0+128)
  2647  01EC  07A8               	addwf	utoa@val^(0+128),f
  2648  01ED  300A               	movlw	10
  2649  01EE  022F               	subwf	utoa@c^(0+128),w
  2650  01EF  1C03               	skipc
  2651  01F0  29F5               	goto	l658
  2652  01F1  3007               	movlw	7
  2653  01F2  00AC               	movwf	??_utoa^(0+128)
  2654  01F3  082C               	movf	??_utoa^(0+128),w
  2655  01F4  07AF               	addwf	utoa@c^(0+128),f
  2656  01F5                     l658:	
  2657  01F5  3030               	movlw	48
  2658  01F6  00AC               	movwf	??_utoa^(0+128)
  2659  01F7  082C               	movf	??_utoa^(0+128),w
  2660  01F8  07AF               	addwf	utoa@c^(0+128),f
  2661  01F9  082F               	movf	utoa@c^(0+128),w
  2662  01FA  00AC               	movwf	??_utoa^(0+128)
  2663  01FB  0830               	movf	utoa@buf^(0+128),w
  2664  01FC  0084               	movwf	4
  2665  01FD  082C               	movf	??_utoa^(0+128),w
  2666  01FE  1383               	bcf	3,7	;select IRP bank0
  2667  01FF  0080               	movwf	0
  2668  0200  3001               	movlw	1
  2669  0201  02B0               	subwf	utoa@buf^(0+128),f
  2670  0202  0829               	movf	(utoa@val+1)^(0+128),w
  2671  0203  0428               	iorwf	utoa@val^(0+128),w
  2672  0204  1D03               	skipz
  2673  0205  29C1               	goto	l2084
  2674                           
  2675                           ;	Return value of _utoa is never used
  2676  0206  3001               	movlw	1
  2677  0207  00AC               	movwf	??_utoa^(0+128)
  2678  0208  082C               	movf	??_utoa^(0+128),w
  2679  0209  07B0               	addwf	utoa@buf^(0+128),f
  2680  020A  0008               	return
  2681  020B                     __end_of_utoa:	
  2682                           
  2683                           	psect	text12
  2684  0507                     __ptext12:	
  2685 ;; *************** function ___lwmod *****************
  2686 ;; Defined at:
  2687 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\lwmod.c"
  2688 ;; Parameters:    Size  Location     Type
  2689 ;;  divisor         2    0[BANK1 ] unsigned int 
  2690 ;;  dividend        2    2[BANK1 ] unsigned int 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;  counter         1    5[BANK1 ] unsigned char 
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  2    0[BANK1 ] unsigned int 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2702 ;;      Params:         0       0       4       0
  2703 ;;      Locals:         0       0       1       0
  2704 ;;      Temps:          0       0       1       0
  2705 ;;      Totals:         0       0       6       0
  2706 ;;Total ram usage:        6 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    7
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_utoa
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function ___lwmod
  2718  0507                     ___lwmod:	
  2719                           
  2720                           ;incstack = 0
  2721 ;; hardware stack exceeded
  2722                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2723  0507  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0508  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0509  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2726  050A  0420               	iorwf	___lwmod@divisor^(0+128),w
  2727  050B  1903               	skipnz
  2728  050C  2D36               	goto	l1984
  2729  050D  01A5               	clrf	___lwmod@counter^(0+128)
  2730  050E  0AA5               	incf	___lwmod@counter^(0+128),f
  2731  050F                     l1974:	
  2732  050F  1BA1               	btfsc	(___lwmod@divisor+1)^(0+128),7
  2733  0510  2D1D               	goto	l1976
  2734  0511  3001               	movlw	1
  2735  0512                     u1385:	
  2736  0512  1003               	clrc
  2737  0513  0DA0               	rlf	___lwmod@divisor^(0+128),f
  2738  0514  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  2739  0515  3EFF               	addlw	-1
  2740  0516  1D03               	skipz
  2741  0517  2D12               	goto	u1385
  2742  0518  3001               	movlw	1
  2743  0519  00A4               	movwf	??___lwmod^(0+128)
  2744  051A  0824               	movf	??___lwmod^(0+128),w
  2745  051B  07A5               	addwf	___lwmod@counter^(0+128),f
  2746  051C  2D0F               	goto	l1974
  2747  051D                     l1976:	
  2748  051D  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2749  051E  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  2750  051F  1D03               	skipz
  2751  0520  2D23               	goto	u1405
  2752  0521  0820               	movf	___lwmod@divisor^(0+128),w
  2753  0522  0222               	subwf	___lwmod@dividend^(0+128),w
  2754  0523                     u1405:	
  2755  0523  1C03               	skipc
  2756  0524  2D2B               	goto	l1980
  2757  0525  0820               	movf	___lwmod@divisor^(0+128),w
  2758  0526  02A2               	subwf	___lwmod@dividend^(0+128),f
  2759  0527  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  2760  0528  1C03               	skipc
  2761  0529  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  2762  052A  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  2763  052B                     l1980:	
  2764  052B  3001               	movlw	1
  2765  052C                     u1415:	
  2766  052C  1003               	clrc
  2767  052D  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  2768  052E  0CA0               	rrf	___lwmod@divisor^(0+128),f
  2769  052F  3EFF               	addlw	-1
  2770  0530  1D03               	skipz
  2771  0531  2D2C               	goto	u1415
  2772  0532  3001               	movlw	1
  2773  0533  02A5               	subwf	___lwmod@counter^(0+128),f
  2774  0534  1D03               	btfss	3,2
  2775  0535  2D1D               	goto	l1976
  2776  0536                     l1984:	
  2777  0536  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  2778  0537  01A1               	clrf	(?___lwmod+1)^(0+128)
  2779  0538  07A1               	addwf	(?___lwmod+1)^(0+128),f
  2780  0539  0822               	movf	___lwmod@dividend^(0+128),w
  2781  053A  01A0               	clrf	?___lwmod^(0+128)
  2782  053B  07A0               	addwf	?___lwmod^(0+128),f
  2783  053C  0008               	return
  2784  053D                     __end_of___lwmod:	
  2785                           
  2786                           	psect	text13
  2787  0489                     __ptext13:	
  2788 ;; *************** function ___lwdiv *****************
  2789 ;; Defined at:
  2790 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  divisor         2    0[BANK1 ] unsigned int 
  2793 ;;  dividend        2    2[BANK1 ] unsigned int 
  2794 ;; Auto vars:     Size  Location     Type
  2795 ;;  quotient        2    5[BANK1 ] unsigned int 
  2796 ;;  counter         1    7[BANK1 ] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    0[BANK1 ] unsigned int 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2806 ;;      Params:         0       0       4       0
  2807 ;;      Locals:         0       0       3       0
  2808 ;;      Temps:          0       0       1       0
  2809 ;;      Totals:         0       0       8       0
  2810 ;;Total ram usage:        8 bytes
  2811 ;; Hardware stack levels used:    1
  2812 ;; Hardware stack levels required when called:    7
  2813 ;; This function calls:
  2814 ;;		Nothing
  2815 ;; This function is called by:
  2816 ;;		_utoa
  2817 ;; This function uses a non-reentrant model
  2818 ;;
  2819                           
  2820                           
  2821                           ;psect for function ___lwdiv
  2822  0489                     ___lwdiv:	
  2823                           
  2824                           ;incstack = 0
  2825 ;; hardware stack exceeded
  2826                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2827  0489  1683               	bsf	3,5	;RP0=1, select bank1
  2828  048A  1303               	bcf	3,6	;RP1=0, select bank1
  2829  048B  01A5               	clrf	___lwdiv@quotient^(0+128)
  2830  048C  01A6               	clrf	(___lwdiv@quotient+1)^(0+128)
  2831  048D  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2832  048E  0420               	iorwf	___lwdiv@divisor^(0+128),w
  2833  048F  1903               	skipnz
  2834  0490  2CC2               	goto	l1962
  2835  0491  01A7               	clrf	___lwdiv@counter^(0+128)
  2836  0492  0AA7               	incf	___lwdiv@counter^(0+128),f
  2837  0493                     l1950:	
  2838  0493  1BA1               	btfsc	(___lwdiv@divisor+1)^(0+128),7
  2839  0494  2CA1               	goto	l1952
  2840  0495  3001               	movlw	1
  2841  0496                     u1315:	
  2842  0496  1003               	clrc
  2843  0497  0DA0               	rlf	___lwdiv@divisor^(0+128),f
  2844  0498  0DA1               	rlf	(___lwdiv@divisor+1)^(0+128),f
  2845  0499  3EFF               	addlw	-1
  2846  049A  1D03               	skipz
  2847  049B  2C96               	goto	u1315
  2848  049C  3001               	movlw	1
  2849  049D  00A4               	movwf	??___lwdiv^(0+128)
  2850  049E  0824               	movf	??___lwdiv^(0+128),w
  2851  049F  07A7               	addwf	___lwdiv@counter^(0+128),f
  2852  04A0  2C93               	goto	l1950
  2853  04A1                     l1952:	
  2854  04A1  3001               	movlw	1
  2855  04A2                     u1335:	
  2856  04A2  1003               	clrc
  2857  04A3  0DA5               	rlf	___lwdiv@quotient^(0+128),f
  2858  04A4  0DA6               	rlf	(___lwdiv@quotient+1)^(0+128),f
  2859  04A5  3EFF               	addlw	-1
  2860  04A6  1D03               	skipz
  2861  04A7  2CA2               	goto	u1335
  2862  04A8  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2863  04A9  0223               	subwf	(___lwdiv@dividend+1)^(0+128),w
  2864  04AA  1D03               	skipz
  2865  04AB  2CAE               	goto	u1345
  2866  04AC  0820               	movf	___lwdiv@divisor^(0+128),w
  2867  04AD  0222               	subwf	___lwdiv@dividend^(0+128),w
  2868  04AE                     u1345:	
  2869  04AE  1C03               	skipc
  2870  04AF  2CB7               	goto	l1958
  2871  04B0  0820               	movf	___lwdiv@divisor^(0+128),w
  2872  04B1  02A2               	subwf	___lwdiv@dividend^(0+128),f
  2873  04B2  0821               	movf	(___lwdiv@divisor+1)^(0+128),w
  2874  04B3  1C03               	skipc
  2875  04B4  03A3               	decf	(___lwdiv@dividend+1)^(0+128),f
  2876  04B5  02A3               	subwf	(___lwdiv@dividend+1)^(0+128),f
  2877  04B6  1425               	bsf	___lwdiv@quotient^(0+128),0
  2878  04B7                     l1958:	
  2879  04B7  3001               	movlw	1
  2880  04B8                     u1355:	
  2881  04B8  1003               	clrc
  2882  04B9  0CA1               	rrf	(___lwdiv@divisor+1)^(0+128),f
  2883  04BA  0CA0               	rrf	___lwdiv@divisor^(0+128),f
  2884  04BB  3EFF               	addlw	-1
  2885  04BC  1D03               	skipz
  2886  04BD  2CB8               	goto	u1355
  2887  04BE  3001               	movlw	1
  2888  04BF  02A7               	subwf	___lwdiv@counter^(0+128),f
  2889  04C0  1D03               	btfss	3,2
  2890  04C1  2CA1               	goto	l1952
  2891  04C2                     l1962:	
  2892  04C2  0826               	movf	(___lwdiv@quotient+1)^(0+128),w
  2893  04C3  01A1               	clrf	(?___lwdiv+1)^(0+128)
  2894  04C4  07A1               	addwf	(?___lwdiv+1)^(0+128),f
  2895  04C5  0825               	movf	___lwdiv@quotient^(0+128),w
  2896  04C6  01A0               	clrf	?___lwdiv^(0+128)
  2897  04C7  07A0               	addwf	?___lwdiv^(0+128),f
  2898  04C8  0008               	return
  2899  04C9                     __end_of___lwdiv:	
  2900                           
  2901                           	psect	text14
  2902  0F7D                     __ptext14:	
  2903 ;; *************** function _strcpy *****************
  2904 ;; Defined at:
  2905 ;;		line 8 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strcpy.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  to              1    wreg     PTR unsigned char 
  2908 ;;		 -> display_player_nbr@string(16), 
  2909 ;;  from            1    0[BANK1 ] PTR const unsigned char 
  2910 ;;		 -> STR_2(8), STR_1(13), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  to              1    3[BANK1 ] PTR unsigned char 
  2913 ;;		 -> display_player_nbr@string(16), 
  2914 ;;  cp              1    2[BANK1 ] PTR unsigned char 
  2915 ;;		 -> display_player_nbr@string(16), 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      PTR unsigned char 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2925 ;;      Params:         0       0       1       0
  2926 ;;      Locals:         0       0       2       0
  2927 ;;      Temps:          0       0       1       0
  2928 ;;      Totals:         0       0       4       0
  2929 ;;Total ram usage:        4 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    7
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;;		_display_player_nbr
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function _strcpy
  2942  0F7D                     _strcpy:	
  2943                           
  2944                           ;incstack = 0
  2945 ;; using string table level
  2946                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  2947                           ;strcpy@to stored from wreg
  2948  0F7D  1683               	bsf	3,5	;RP0=1, select bank1
  2949  0F7E  1303               	bcf	3,6	;RP1=0, select bank1
  2950  0F7F  00A3               	movwf	strcpy@to^(0+128)
  2951  0F80  0823               	movf	strcpy@to^(0+128),w
  2952  0F81  00A1               	movwf	??_strcpy^(0+128)
  2953  0F82  0821               	movf	??_strcpy^(0+128),w
  2954  0F83  00A2               	movwf	strcpy@cp^(0+128)
  2955  0F84                     l2124:	
  2956  0F84  0820               	movf	strcpy@from^(0+128),w
  2957  0F85  0084               	movwf	4
  2958  0F86  158A  2000  158A   	fcall	stringdir
  2959  0F89  00A1               	movwf	??_strcpy^(0+128)
  2960  0F8A  0822               	movf	strcpy@cp^(0+128),w
  2961  0F8B  0084               	movwf	4
  2962  0F8C  0821               	movf	??_strcpy^(0+128),w
  2963  0F8D  1383               	bcf	3,7	;select IRP bank0
  2964  0F8E  0080               	movwf	0
  2965  0F8F  0880               	movf	0,f
  2966  0F90  1903               	btfsc	3,2
  2967  0F91  0008               	return
  2968  0F92  3001               	movlw	1
  2969  0F93  00A1               	movwf	??_strcpy^(0+128)
  2970  0F94  0821               	movf	??_strcpy^(0+128),w
  2971  0F95  07A2               	addwf	strcpy@cp^(0+128),f
  2972  0F96  3001               	movlw	1
  2973  0F97  00A1               	movwf	??_strcpy^(0+128)
  2974  0F98  0821               	movf	??_strcpy^(0+128),w
  2975  0F99  07A0               	addwf	strcpy@from^(0+128),f
  2976  0F9A  2F84               	goto	l2124
  2977  0F9B                     __end_of_strcpy:	
  2978                           ;	Return value of _strcpy is never used
  2979                           
  2980                           
  2981                           	psect	text15
  2982  0760                     __ptext15:	
  2983 ;; *************** function _strcat *****************
  2984 ;; Defined at:
  2985 ;;		line 8 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strcat.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  to              1    wreg     PTR unsigned char 
  2988 ;;		 -> display_player_nbr@string(16), 
  2989 ;;  from            1    0[BANK1 ] PTR const unsigned char 
  2990 ;;		 -> display_player_nbr@string_player_number(2), 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  to              1    2[BANK1 ] PTR unsigned char 
  2993 ;;		 -> display_player_nbr@string(16), 
  2994 ;;  cp              1    3[BANK1 ] PTR unsigned char 
  2995 ;;		 -> display_player_nbr@string(16), 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      PTR unsigned char 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3005 ;;      Params:         0       0       1       0
  3006 ;;      Locals:         0       0       2       0
  3007 ;;      Temps:          0       0       1       0
  3008 ;;      Totals:         0       0       4       0
  3009 ;;Total ram usage:        4 bytes
  3010 ;; Hardware stack levels used:    1
  3011 ;; Hardware stack levels required when called:    7
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_display_player_nbr
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           
  3020                           ;psect for function _strcat
  3021  0760                     _strcat:	
  3022                           
  3023                           ;incstack = 0
  3024 ;; hardware stack exceeded
  3025                           ; Regs used in _strcat: [wreg-fsr0h+status,2+status,0]
  3026                           ;strcat@to stored from wreg
  3027  0760  1683               	bsf	3,5	;RP0=1, select bank1
  3028  0761  1303               	bcf	3,6	;RP1=0, select bank1
  3029  0762  00A2               	movwf	strcat@to^(0+128)
  3030  0763  0822               	movf	strcat@to^(0+128),w
  3031  0764  00A1               	movwf	??_strcat^(0+128)
  3032  0765  0821               	movf	??_strcat^(0+128),w
  3033  0766  00A3               	movwf	strcat@cp^(0+128)
  3034  0767                     l2132:	
  3035  0767  0823               	movf	strcat@cp^(0+128),w
  3036  0768  0084               	movwf	4
  3037  0769  1383               	bcf	3,7	;select IRP bank0
  3038  076A  0880               	movf	0,f
  3039  076B  1903               	btfsc	3,2
  3040  076C  2F7A               	goto	l2136
  3041  076D  3001               	movlw	1
  3042  076E  00A1               	movwf	??_strcat^(0+128)
  3043  076F  0821               	movf	??_strcat^(0+128),w
  3044  0770  07A3               	addwf	strcat@cp^(0+128),f
  3045  0771  2F67               	goto	l2132
  3046  0772                     l2134:	
  3047  0772  3001               	movlw	1
  3048  0773  00A1               	movwf	??_strcat^(0+128)
  3049  0774  0821               	movf	??_strcat^(0+128),w
  3050  0775  07A3               	addwf	strcat@cp^(0+128),f
  3051  0776  3001               	movlw	1
  3052  0777  00A1               	movwf	??_strcat^(0+128)
  3053  0778  0821               	movf	??_strcat^(0+128),w
  3054  0779  07A0               	addwf	strcat@from^(0+128),f
  3055  077A                     l2136:	
  3056  077A  0820               	movf	strcat@from^(0+128),w
  3057  077B  0084               	movwf	4
  3058  077C  0800               	movf	0,w
  3059  077D  00A1               	movwf	??_strcat^(0+128)
  3060  077E  0823               	movf	strcat@cp^(0+128),w
  3061  077F  0084               	movwf	4
  3062  0780  0821               	movf	??_strcat^(0+128),w
  3063  0781  0080               	movwf	0
  3064  0782  0880               	movf	0,f
  3065  0783  1903               	btfsc	3,2
  3066                           
  3067                           ;	Return value of _strcat is never used
  3068  0784  0008               	return
  3069  0785  2F72               	goto	l2134
  3070  0786                     __end_of_strcat:	
  3071                           
  3072                           	psect	text16
  3073  0786                     __ptext16:	
  3074 ;; *************** function _Lcd4_Write_String *****************
  3075 ;; Defined at:
  3076 ;;		line 101 in file "LCD_screen.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;  a               1    wreg     PTR unsigned char 
  3079 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3080 ;; Auto vars:     Size  Location     Type
  3081 ;;  a               1   17[BANK1 ] PTR unsigned char 
  3082 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3083 ;;  i               2   15[BANK1 ] int 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;		None               void
  3086 ;; Registers used:
  3087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3093 ;;      Params:         0       0       0       0
  3094 ;;      Locals:         0       0       3       0
  3095 ;;      Temps:          0       0       1       0
  3096 ;;      Totals:         0       0       4       0
  3097 ;;Total ram usage:        4 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:   10
  3100 ;; This function calls:
  3101 ;;		_LOG
  3102 ;;		_Lcd4_Write_Char
  3103 ;; This function is called by:
  3104 ;;		_display_player_nbr
  3105 ;; This function uses a non-reentrant model
  3106 ;;
  3107                           
  3108                           
  3109                           ;psect for function _Lcd4_Write_String
  3110  0786                     _Lcd4_Write_String:	
  3111                           
  3112                           ;incstack = 0
  3113 ;; hardware stack exceeded
  3114                           ; Regs used in _Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3115                           ;Lcd4_Write_String@a stored from wreg
  3116  0786  1683               	bsf	3,5	;RP0=1, select bank1
  3117  0787  1303               	bcf	3,6	;RP1=0, select bank1
  3118  0788  00B1               	movwf	Lcd4_Write_String@a^(0+128)
  3119                           
  3120                           ;LCD_screen.c: 103: int i;
  3121                           ;LCD_screen.c: 104: for(i=0;a[i]!='\0';i++)
  3122  0789  01AF               	clrf	Lcd4_Write_String@i^(0+128)
  3123  078A  01B0               	clrf	(Lcd4_Write_String@i+1)^(0+128)
  3124  078B                     l2116:	
  3125  078B  082F               	movf	Lcd4_Write_String@i^(0+128),w
  3126  078C  0731               	addwf	Lcd4_Write_String@a^(0+128),w
  3127  078D  00AE               	movwf	??_Lcd4_Write_String^(0+128)
  3128  078E  082E               	movf	??_Lcd4_Write_String^(0+128),w
  3129  078F  0084               	movwf	4
  3130  0790  1383               	bcf	3,7	;select IRP bank0
  3131  0791  0880               	movf	0,f
  3132  0792  1903               	btfsc	3,2
  3133  0793  2FA7               	goto	l2118
  3134                           
  3135                           ;LCD_screen.c: 105: Lcd4_Write_Char(a[i]);
  3136  0794  082F               	movf	Lcd4_Write_String@i^(0+128),w
  3137  0795  0731               	addwf	Lcd4_Write_String@a^(0+128),w
  3138  0796  00AE               	movwf	??_Lcd4_Write_String^(0+128)
  3139  0797  082E               	movf	??_Lcd4_Write_String^(0+128),w
  3140  0798  0084               	movwf	4
  3141  0799  1383               	bcf	3,7	;select IRP bank0
  3142  079A  0800               	movf	0,w
  3143  079B  118A  2355  118A   	fcall	_Lcd4_Write_Char
  3144  079E  3001               	movlw	1
  3145  079F  1683               	bsf	3,5	;RP0=1, select bank1
  3146  07A0  1303               	bcf	3,6	;RP1=0, select bank1
  3147  07A1  07AF               	addwf	Lcd4_Write_String@i^(0+128),f
  3148  07A2  1803               	skipnc
  3149  07A3  0AB0               	incf	(Lcd4_Write_String@i+1)^(0+128),f
  3150  07A4  3000               	movlw	0
  3151  07A5  07B0               	addwf	(Lcd4_Write_String@i+1)^(0+128),f
  3152  07A6  2F8B               	goto	l2116
  3153  07A7                     l2118:	
  3154                           
  3155                           ;LCD_screen.c: 106: LOG(a,0);
  3156  07A7  01AC               	clrf	LOG@level^(0+128)
  3157  07A8  0831               	movf	Lcd4_Write_String@a^(0+128),w
  3158  07A9  158A  26A3         	fcall	_LOG
  3159  07AB  0008               	return
  3160  07AC                     __end_of_Lcd4_Write_String:	
  3161                           
  3162                           	psect	text17
  3163  0355                     __ptext17:	
  3164 ;; *************** function _Lcd4_Write_Char *****************
  3165 ;; Defined at:
  3166 ;;		line 84 in file "LCD_screen.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  a               1    wreg     unsigned char 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;  a               1    5[BANK1 ] unsigned char 
  3171 ;;  y               1    4[BANK1 ] unsigned char 
  3172 ;;  temp            1    3[BANK1 ] unsigned char 
  3173 ;; Return value:  Size  Location     Type
  3174 ;;		None               void
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, pclath, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 0/0
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3182 ;;      Params:         0       0       0       0
  3183 ;;      Locals:         0       0       3       0
  3184 ;;      Temps:          0       0       2       0
  3185 ;;      Totals:         0       0       5       0
  3186 ;;Total ram usage:        5 bytes
  3187 ;; Hardware stack levels used:    1
  3188 ;; Hardware stack levels required when called:    8
  3189 ;; This function calls:
  3190 ;;		_Lcd4_Port
  3191 ;; This function is called by:
  3192 ;;		_Lcd4_Write_String
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function _Lcd4_Write_Char
  3198  0355                     _Lcd4_Write_Char:	
  3199                           
  3200                           ;incstack = 0
  3201 ;; hardware stack exceeded
  3202                           ; Regs used in _Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3203                           ;Lcd4_Write_Char@a stored from wreg
  3204  0355  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0356  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0357  00A5               	movwf	Lcd4_Write_Char@a^(0+128)
  3207                           
  3208                           ;LCD_screen.c: 86: char temp,y;
  3209                           ;LCD_screen.c: 87: temp = a&0x0F;
  3210  0358  0825               	movf	Lcd4_Write_Char@a^(0+128),w
  3211  0359  390F               	andlw	15
  3212  035A  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3213  035B  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3214  035C  00A3               	movwf	Lcd4_Write_Char@temp^(0+128)
  3215                           
  3216                           ;LCD_screen.c: 88: y = a&0xF0;
  3217  035D  0825               	movf	Lcd4_Write_Char@a^(0+128),w
  3218  035E  39F0               	andlw	240
  3219  035F  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3220  0360  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3221  0361  00A4               	movwf	Lcd4_Write_Char@y^(0+128)
  3222                           
  3223                           ;LCD_screen.c: 89: RA2 = 1;
  3224  0362  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0363  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0364  1505               	bsf	5,2	;volatile
  3227                           
  3228                           ;LCD_screen.c: 90: Lcd4_Port(y>>4);
  3229  0365  1683               	bsf	3,5	;RP0=1, select bank1
  3230  0366  1303               	bcf	3,6	;RP1=0, select bank1
  3231  0367  0824               	movf	Lcd4_Write_Char@y^(0+128),w
  3232  0368  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3233  0369  3004               	movlw	4
  3234  036A                     u1295:	
  3235  036A  1003               	clrc
  3236  036B  0CA1               	rrf	??_Lcd4_Write_Char^(0+128),f
  3237  036C  3EFF               	addlw	-1
  3238  036D  1D03               	skipz
  3239  036E  2B6A               	goto	u1295
  3240  036F  0821               	movf	??_Lcd4_Write_Char^(0+128),w
  3241  0370  118A  2663  118A   	fcall	_Lcd4_Port
  3242                           
  3243                           ;LCD_screen.c: 91: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3244  0373  300D               	movlw	13
  3245  0374  1683               	bsf	3,5	;RP0=1, select bank1
  3246  0375  1303               	bcf	3,6	;RP1=0, select bank1
  3247  0376  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3248  0377  30FB               	movlw	251
  3249  0378  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3250  0379                     u2297:	
  3251  0379  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3252  037A  2B79               	goto	u2297
  3253  037B  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3254  037C  2B79               	goto	u2297
  3255  037D  2B7E               	nop2
  3256                           
  3257                           ;LCD_screen.c: 92: RC0 = 1;
  3258  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3259  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3260  0380  1407               	bsf	7,0	;volatile
  3261                           
  3262                           ;LCD_screen.c: 93: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3263  0381  300D               	movlw	13
  3264  0382  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0383  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0384  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3267  0385  30FB               	movlw	251
  3268  0386  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3269  0387                     u2307:	
  3270  0387  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3271  0388  2B87               	goto	u2307
  3272  0389  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3273  038A  2B87               	goto	u2307
  3274  038B  2B8C               	nop2
  3275                           
  3276                           ;LCD_screen.c: 94: RC0 = 0;
  3277  038C  1283               	bcf	3,5	;RP0=0, select bank0
  3278  038D  1303               	bcf	3,6	;RP1=0, select bank0
  3279  038E  1007               	bcf	7,0	;volatile
  3280                           
  3281                           ;LCD_screen.c: 95: Lcd4_Port(temp);
  3282  038F  1683               	bsf	3,5	;RP0=1, select bank1
  3283  0390  1303               	bcf	3,6	;RP1=0, select bank1
  3284  0391  0823               	movf	Lcd4_Write_Char@temp^(0+128),w
  3285  0392  118A  2663  118A   	fcall	_Lcd4_Port
  3286                           
  3287                           ;LCD_screen.c: 96: RC0 = 1;
  3288  0395  1283               	bcf	3,5	;RP0=0, select bank0
  3289  0396  1303               	bcf	3,6	;RP1=0, select bank0
  3290  0397  1407               	bsf	7,0	;volatile
  3291                           
  3292                           ;LCD_screen.c: 97: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  3293  0398  300D               	movlw	13
  3294  0399  1683               	bsf	3,5	;RP0=1, select bank1
  3295  039A  1303               	bcf	3,6	;RP1=0, select bank1
  3296  039B  00A2               	movwf	(??_Lcd4_Write_Char^(0+128)+1)
  3297  039C  30FB               	movlw	251
  3298  039D  00A1               	movwf	??_Lcd4_Write_Char^(0+128)
  3299  039E                     u2317:	
  3300  039E  0BA1               	decfsz	??_Lcd4_Write_Char^(0+128),f
  3301  039F  2B9E               	goto	u2317
  3302  03A0  0BA2               	decfsz	(??_Lcd4_Write_Char^(0+128)+1),f
  3303  03A1  2B9E               	goto	u2317
  3304  03A2  2BA3               	nop2
  3305                           
  3306                           ;LCD_screen.c: 98: RC0 = 0;
  3307  03A3  1283               	bcf	3,5	;RP0=0, select bank0
  3308  03A4  1303               	bcf	3,6	;RP1=0, select bank0
  3309  03A5  1007               	bcf	7,0	;volatile
  3310  03A6  0008               	return
  3311  03A7                     __end_of_Lcd4_Write_Char:	
  3312                           
  3313                           	psect	text18
  3314  0EA3                     __ptext18:	
  3315 ;; *************** function _LOG *****************
  3316 ;; Defined at:
  3317 ;;		line 65 in file "misc.c"
  3318 ;; Parameters:    Size  Location     Type
  3319 ;;  string          1    wreg     PTR unsigned char 
  3320 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3321 ;;  level           1   12[BANK1 ] unsigned char 
  3322 ;; Auto vars:     Size  Location     Type
  3323 ;;  string          1   13[BANK1 ] PTR unsigned char 
  3324 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3325 ;; Return value:  Size  Location     Type
  3326 ;;		None               void
  3327 ;; Registers used:
  3328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3334 ;;      Params:         0       0       1       0
  3335 ;;      Locals:         0       0       1       0
  3336 ;;      Temps:          0       0       0       0
  3337 ;;      Totals:         0       0       2       0
  3338 ;;Total ram usage:        2 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; Hardware stack levels required when called:    9
  3341 ;; This function calls:
  3342 ;;		_uart_printf
  3343 ;; This function is called by:
  3344 ;;		_Lcd4_Write_String
  3345 ;; This function uses a non-reentrant model
  3346 ;;
  3347                           
  3348                           
  3349                           ;psect for function _LOG
  3350  0EA3                     _LOG:	
  3351                           
  3352                           ;incstack = 0
  3353 ;; hardware stack exceeded
  3354                           ; Regs used in _LOG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3355                           ;LOG@string stored from wreg
  3356  0EA3  1683               	bsf	3,5	;RP0=1, select bank1
  3357  0EA4  1303               	bcf	3,6	;RP1=0, select bank1
  3358  0EA5  00AD               	movwf	LOG@string^(0+128)
  3359                           
  3360                           ;misc.c: 68: {
  3361                           ;misc.c: 69: uart_printf(string);
  3362  0EA6  082D               	movf	LOG@string^(0+128),w
  3363  0EA7  118A  26E8         	fcall	_uart_printf
  3364  0EA9  0008               	return
  3365  0EAA                     __end_of_LOG:	
  3366                           
  3367                           	psect	text19
  3368  06E8                     __ptext19:	
  3369 ;; *************** function _uart_printf *****************
  3370 ;; Defined at:
  3371 ;;		line 77 in file "UART.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  string          1    wreg     PTR unsigned char 
  3374 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  string          1   11[BANK1 ] PTR unsigned char 
  3377 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3378 ;;  i               2    9[BANK1 ] int 
  3379 ;; Return value:  Size  Location     Type
  3380 ;;		None               void
  3381 ;; Registers used:
  3382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3383 ;; Tracked objects:
  3384 ;;		On entry : 0/0
  3385 ;;		On exit  : 0/0
  3386 ;;		Unchanged: 0/0
  3387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3388 ;;      Params:         0       0       0       0
  3389 ;;      Locals:         0       0       3       0
  3390 ;;      Temps:          0       0       1       0
  3391 ;;      Totals:         0       0       4       0
  3392 ;;Total ram usage:        4 bytes
  3393 ;; Hardware stack levels used:    1
  3394 ;; Hardware stack levels required when called:    8
  3395 ;; This function calls:
  3396 ;;		_strlen
  3397 ;;		_uart_putc
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;;		_LOG
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           
  3405                           ;psect for function _uart_printf
  3406  06E8                     _uart_printf:	
  3407                           
  3408                           ;incstack = 0
  3409 ;; hardware stack exceeded
  3410                           ; Regs used in _uart_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3411                           ;uart_printf@string stored from wreg
  3412  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3413  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  3414  06EA  00AB               	movwf	uart_printf@string^(0+128)
  3415                           
  3416                           ;UART.c: 78: int i = 0;
  3417  06EB  01A9               	clrf	uart_printf@i^(0+128)
  3418  06EC  01AA               	clrf	(uart_printf@i+1)^(0+128)
  3419                           
  3420                           ;UART.c: 79: for (i=0; i<strlen(string); i++){
  3421  06ED  01A9               	clrf	uart_printf@i^(0+128)
  3422  06EE  01AA               	clrf	(uart_printf@i+1)^(0+128)
  3423  06EF                     l1874:	
  3424  06EF  082B               	movf	uart_printf@string^(0+128),w
  3425  06F0  118A  2710  118A   	fcall	_strlen
  3426  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3427  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  3428  06F5  0821               	movf	(?_strlen+1)^(0+128),w
  3429  06F6  022A               	subwf	(uart_printf@i+1)^(0+128),w
  3430  06F7  1D03               	skipz
  3431  06F8  2EFB               	goto	u1195
  3432  06F9  0820               	movf	?_strlen^(0+128),w
  3433  06FA  0229               	subwf	uart_printf@i^(0+128),w
  3434  06FB                     u1195:	
  3435  06FB  1803               	btfsc	3,0
  3436  06FC  0008               	return
  3437                           
  3438                           ;UART.c: 80: uart_putc(string[i]);
  3439  06FD  0829               	movf	uart_printf@i^(0+128),w
  3440  06FE  072B               	addwf	uart_printf@string^(0+128),w
  3441  06FF  00A8               	movwf	??_uart_printf^(0+128)
  3442  0700  0828               	movf	??_uart_printf^(0+128),w
  3443  0701  0084               	movwf	4
  3444  0702  1383               	bcf	3,7	;select IRP bank0
  3445  0703  0800               	movf	0,w
  3446  0704  158A  26D3  118A   	fcall	_uart_putc
  3447  0707  3001               	movlw	1
  3448  0708  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0709  1303               	bcf	3,6	;RP1=0, select bank1
  3450  070A  07A9               	addwf	uart_printf@i^(0+128),f
  3451  070B  1803               	skipnc
  3452  070C  0AAA               	incf	(uart_printf@i+1)^(0+128),f
  3453  070D  3000               	movlw	0
  3454  070E  07AA               	addwf	(uart_printf@i+1)^(0+128),f
  3455  070F  2EEF               	goto	l1874
  3456  0710                     __end_of_uart_printf:	
  3457                           
  3458                           	psect	text20
  3459  0ED3                     __ptext20:	
  3460 ;; *************** function _uart_putc *****************
  3461 ;; Defined at:
  3462 ;;		line 69 in file "UART.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;  data            1    wreg     unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  data            1    0[BANK1 ] unsigned char 
  3467 ;; Return value:  Size  Location     Type
  3468 ;;		None               void
  3469 ;; Registers used:
  3470 ;;		wreg
  3471 ;; Tracked objects:
  3472 ;;		On entry : 0/0
  3473 ;;		On exit  : 0/0
  3474 ;;		Unchanged: 0/0
  3475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3476 ;;      Params:         0       0       0       0
  3477 ;;      Locals:         0       0       1       0
  3478 ;;      Temps:          0       0       0       0
  3479 ;;      Totals:         0       0       1       0
  3480 ;;Total ram usage:        1 bytes
  3481 ;; Hardware stack levels used:    1
  3482 ;; Hardware stack levels required when called:    7
  3483 ;; This function calls:
  3484 ;;		Nothing
  3485 ;; This function is called by:
  3486 ;;		_uart_printf
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           
  3491                           ;psect for function _uart_putc
  3492  0ED3                     _uart_putc:	
  3493                           
  3494                           ;incstack = 0
  3495 ;; hardware stack exceeded
  3496                           ; Regs used in _uart_putc: [wreg]
  3497                           ;uart_putc@data stored from wreg
  3498  0ED3  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0ED4  1303               	bcf	3,6	;RP1=0, select bank1
  3500  0ED5  00A0               	movwf	uart_putc@data^(0+128)
  3501  0ED6                     l176:	
  3502                           ;UART.c: 71: continue;
  3503                           
  3504                           ;UART.c: 70: while( ! TXIF)
  3505                           
  3506  0ED6  1283               	bcf	3,5	;RP0=0, select bank0
  3507  0ED7  1E0C               	btfss	12,4	;volatile
  3508  0ED8  2ED6               	goto	l176
  3509                           
  3510                           ;UART.c: 72: TXREG = data;
  3511  0ED9  1683               	bsf	3,5	;RP0=1, select bank1
  3512  0EDA  1303               	bcf	3,6	;RP1=0, select bank1
  3513  0EDB  0820               	movf	uart_putc@data^(0+128),w
  3514  0EDC  1283               	bcf	3,5	;RP0=0, select bank0
  3515  0EDD  1303               	bcf	3,6	;RP1=0, select bank0
  3516  0EDE  0099               	movwf	25	;volatile
  3517  0EDF  0008               	return
  3518  0EE0                     __end_of_uart_putc:	
  3519                           
  3520                           	psect	text21
  3521  0710                     __ptext21:	
  3522 ;; *************** function _strlen *****************
  3523 ;; Defined at:
  3524 ;;		line 4 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strlen.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;  s               1    wreg     PTR const unsigned char 
  3527 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  s               1    6[BANK1 ] PTR const unsigned char 
  3530 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3531 ;;  cp              1    7[BANK1 ] PTR const unsigned char 
  3532 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  2    0[BANK1 ] unsigned int 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3542 ;;      Params:         0       0       2       0
  3543 ;;      Locals:         0       0       2       0
  3544 ;;      Temps:          0       0       4       0
  3545 ;;      Totals:         0       0       8       0
  3546 ;;Total ram usage:        8 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    7
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_uart_printf
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           
  3557                           ;psect for function _strlen
  3558  0710                     _strlen:	
  3559                           
  3560                           ;incstack = 0
  3561 ;; hardware stack exceeded
  3562                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  3563                           ;strlen@s stored from wreg
  3564  0710  1683               	bsf	3,5	;RP0=1, select bank1
  3565  0711  1303               	bcf	3,6	;RP1=0, select bank1
  3566  0712  00A6               	movwf	strlen@s^(0+128)
  3567  0713  0826               	movf	strlen@s^(0+128),w
  3568  0714  00A2               	movwf	??_strlen^(0+128)
  3569  0715  0822               	movf	??_strlen^(0+128),w
  3570  0716  00A7               	movwf	strlen@cp^(0+128)
  3571  0717                     l1848:	
  3572  0717  0827               	movf	strlen@cp^(0+128),w
  3573  0718  0084               	movwf	4
  3574  0719  1383               	bcf	3,7	;select IRP bank0
  3575  071A  0880               	movf	0,f
  3576  071B  1903               	btfsc	3,2
  3577  071C  2F22               	goto	l1850
  3578  071D  3001               	movlw	1
  3579  071E  00A2               	movwf	??_strlen^(0+128)
  3580  071F  0822               	movf	??_strlen^(0+128),w
  3581  0720  07A7               	addwf	strlen@cp^(0+128),f
  3582  0721  2F17               	goto	l1848
  3583  0722                     l1850:	
  3584  0722  0826               	movf	strlen@s^(0+128),w
  3585  0723  00A2               	movwf	??_strlen^(0+128)
  3586  0724  3000               	movlw	0
  3587  0725  00A3               	movwf	(??_strlen^(0+128)+1)
  3588  0726  09A2               	comf	??_strlen^(0+128),f
  3589  0727  09A3               	comf	(??_strlen^(0+128)+1),f
  3590  0728  0AA2               	incf	??_strlen^(0+128),f
  3591  0729  1903               	skipnz
  3592  072A  0AA3               	incf	(??_strlen^(0+128)+1),f
  3593  072B  0827               	movf	strlen@cp^(0+128),w
  3594  072C  00A4               	movwf	(??_strlen+2)^(0+128)
  3595  072D  3000               	movlw	0
  3596  072E  00A5               	movwf	((??_strlen+2)^(0+128)+1)
  3597  072F  0822               	movf	??_strlen^(0+128),w
  3598  0730  0724               	addwf	(??_strlen+2)^(0+128),w
  3599  0731  00A0               	movwf	?_strlen^(0+128)
  3600  0732  0823               	movf	(??_strlen+1)^(0+128),w
  3601  0733  1803               	skipnc
  3602  0734  0A23               	incf	(??_strlen+1)^(0+128),w
  3603  0735  0725               	addwf	(??_strlen+3)^(0+128),w
  3604  0736  00A1               	movwf	(?_strlen+1)^(0+128)
  3605  0737  0008               	return
  3606  0738                     __end_of_strlen:	
  3607                           
  3608                           	psect	text22
  3609  0691                     __ptext22:	
  3610 ;; *************** function _Lcd4_Set_Cursor *****************
  3611 ;; Defined at:
  3612 ;;		line 48 in file "LCD_screen.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  ligne           1    wreg     unsigned char 
  3615 ;;  pixel_nb        1    4[BANK1 ] unsigned char 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  ligne           1    9[BANK1 ] unsigned char 
  3618 ;;  lCmdLsb         1   11[BANK1 ] unsigned char 
  3619 ;;  lCmdMsb         1   10[BANK1 ] unsigned char 
  3620 ;; Return value:  Size  Location     Type
  3621 ;;		None               void
  3622 ;; Registers used:
  3623 ;;		wreg, status,2, status,0, pclath, cstack
  3624 ;; Tracked objects:
  3625 ;;		On entry : 0/0
  3626 ;;		On exit  : 0/0
  3627 ;;		Unchanged: 0/0
  3628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3629 ;;      Params:         0       0       1       0
  3630 ;;      Locals:         0       0       3       0
  3631 ;;      Temps:          0       0       4       0
  3632 ;;      Totals:         0       0       8       0
  3633 ;;Total ram usage:        8 bytes
  3634 ;; Hardware stack levels used:    1
  3635 ;; Hardware stack levels required when called:    9
  3636 ;; This function calls:
  3637 ;;		_Lcd4_Cmd
  3638 ;; This function is called by:
  3639 ;;		_display_player_nbr
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function _Lcd4_Set_Cursor
  3645  0691                     _Lcd4_Set_Cursor:	
  3646                           
  3647                           ;incstack = 0
  3648 ;; hardware stack exceeded
  3649                           ; Regs used in _Lcd4_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3650                           ;Lcd4_Set_Cursor@ligne stored from wreg
  3651  0691  1683               	bsf	3,5	;RP0=1, select bank1
  3652  0692  1303               	bcf	3,6	;RP1=0, select bank1
  3653  0693  00A9               	movwf	Lcd4_Set_Cursor@ligne^(0+128)
  3654                           
  3655                           ;LCD_screen.c: 50: char lCmdMsb,lCmdLsb;
  3656                           ;LCD_screen.c: 51: lCmdMsb = 0x08 | (ligne <<2) | ( ((pixel_nb)& (0x30)) >> 4);
  3657  0694  0824               	movf	Lcd4_Set_Cursor@pixel_nb^(0+128),w
  3658  0695  00A5               	movwf	??_Lcd4_Set_Cursor^(0+128)
  3659  0696  3004               	movlw	4
  3660  0697                     u1605:	
  3661  0697  1003               	clrc
  3662  0698  0CA5               	rrf	??_Lcd4_Set_Cursor^(0+128),f
  3663  0699  3EFF               	addlw	-1
  3664  069A  1D03               	skipz
  3665  069B  2E97               	goto	u1605
  3666  069C  3003               	movlw	3
  3667  069D  0525               	andwf	??_Lcd4_Set_Cursor^(0+128),w
  3668  069E  00A6               	movwf	(??_Lcd4_Set_Cursor+1)^(0+128)
  3669  069F  0829               	movf	Lcd4_Set_Cursor@ligne^(0+128),w
  3670  06A0  00A7               	movwf	(??_Lcd4_Set_Cursor+2)^(0+128)
  3671  06A1  3001               	movlw	1
  3672  06A2                     u1615:	
  3673  06A2  1003               	clrc
  3674  06A3  0DA7               	rlf	(??_Lcd4_Set_Cursor+2)^(0+128),f
  3675  06A4  3EFF               	addlw	-1
  3676  06A5  1D03               	skipz
  3677  06A6  2EA2               	goto	u1615
  3678  06A7  1003               	clrc
  3679  06A8  0D27               	rlf	(??_Lcd4_Set_Cursor+2)^(0+128),w
  3680  06A9  0426               	iorwf	(??_Lcd4_Set_Cursor+1)^(0+128),w
  3681  06AA  3808               	iorlw	8
  3682  06AB  00A8               	movwf	(??_Lcd4_Set_Cursor+3)^(0+128)
  3683  06AC  0828               	movf	(??_Lcd4_Set_Cursor+3)^(0+128),w
  3684  06AD  00AA               	movwf	Lcd4_Set_Cursor@lCmdMsb^(0+128)
  3685                           
  3686                           ;LCD_screen.c: 52: lCmdLsb = pixel_nb & 0x0F;
  3687  06AE  0824               	movf	Lcd4_Set_Cursor@pixel_nb^(0+128),w
  3688  06AF  390F               	andlw	15
  3689  06B0  00A5               	movwf	??_Lcd4_Set_Cursor^(0+128)
  3690  06B1  0825               	movf	??_Lcd4_Set_Cursor^(0+128),w
  3691  06B2  00AB               	movwf	Lcd4_Set_Cursor@lCmdLsb^(0+128)
  3692                           
  3693                           ;LCD_screen.c: 53: Lcd4_Cmd(lCmdMsb);
  3694  06B3  082A               	movf	Lcd4_Set_Cursor@lCmdMsb^(0+128),w
  3695  06B4  158A  275F  118A   	fcall	_Lcd4_Cmd
  3696                           
  3697                           ;LCD_screen.c: 54: Lcd4_Cmd(lCmdLsb);
  3698  06B7  1683               	bsf	3,5	;RP0=1, select bank1
  3699  06B8  1303               	bcf	3,6	;RP1=0, select bank1
  3700  06B9  082B               	movf	Lcd4_Set_Cursor@lCmdLsb^(0+128),w
  3701  06BA  158A  275F         	fcall	_Lcd4_Cmd
  3702  06BC  0008               	return
  3703  06BD                     __end_of_Lcd4_Set_Cursor:	
  3704                           
  3705                           	psect	text23
  3706  0F5F                     __ptext23:	
  3707 ;; *************** function _Lcd4_Cmd *****************
  3708 ;; Defined at:
  3709 ;;		line 33 in file "LCD_screen.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  a               1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  a               1    3[BANK1 ] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;		None               void
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3723 ;;      Params:         0       0       0       0
  3724 ;;      Locals:         0       0       1       0
  3725 ;;      Temps:          0       0       2       0
  3726 ;;      Totals:         0       0       3       0
  3727 ;;Total ram usage:        3 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    8
  3730 ;; This function calls:
  3731 ;;		_Lcd4_Port
  3732 ;; This function is called by:
  3733 ;;		_Lcd4_Clear
  3734 ;;		_Lcd4_Set_Cursor
  3735 ;;		_Lcd4_Init
  3736 ;;		_Lcd4_Shift_Right
  3737 ;;		_Lcd4_Shift_Left
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           
  3742                           ;psect for function _Lcd4_Cmd
  3743  0F5F                     _Lcd4_Cmd:	
  3744                           
  3745                           ;incstack = 0
  3746 ;; hardware stack exceeded
  3747                           ; Regs used in _Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3748                           ;Lcd4_Cmd@a stored from wreg
  3749  0F5F  1683               	bsf	3,5	;RP0=1, select bank1
  3750  0F60  1303               	bcf	3,6	;RP1=0, select bank1
  3751  0F61  00A3               	movwf	Lcd4_Cmd@a^(0+128)
  3752                           
  3753                           ;LCD_screen.c: 35: RA2 = 0;
  3754  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  3755  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0F64  1105               	bcf	5,2	;volatile
  3757                           
  3758                           ;LCD_screen.c: 36: Lcd4_Port(a);
  3759  0F65  1683               	bsf	3,5	;RP0=1, select bank1
  3760  0F66  1303               	bcf	3,6	;RP1=0, select bank1
  3761  0F67  0823               	movf	Lcd4_Cmd@a^(0+128),w
  3762  0F68  118A  2663  158A   	fcall	_Lcd4_Port
  3763                           
  3764                           ;LCD_screen.c: 37: RC0 = 1;
  3765  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  3766  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  3767  0F6D  1407               	bsf	7,0	;volatile
  3768                           
  3769                           ;LCD_screen.c: 38: _delay((unsigned long)((4)*(8000000UL/4000.0)));
  3770  0F6E  300B               	movlw	11
  3771  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  3772  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  3773  0F71  00A2               	movwf	(??_Lcd4_Cmd^(0+128)+1)
  3774  0F72  3062               	movlw	98
  3775  0F73  00A1               	movwf	??_Lcd4_Cmd^(0+128)
  3776  0F74                     u2327:	
  3777  0F74  0BA1               	decfsz	??_Lcd4_Cmd^(0+128),f
  3778  0F75  2F74               	goto	u2327
  3779  0F76  0BA2               	decfsz	(??_Lcd4_Cmd^(0+128)+1),f
  3780  0F77  2F74               	goto	u2327
  3781  0F78  0000               	nop
  3782                           
  3783                           ;LCD_screen.c: 39: RC0 = 0;
  3784  0F79  1283               	bcf	3,5	;RP0=0, select bank0
  3785  0F7A  1303               	bcf	3,6	;RP1=0, select bank0
  3786  0F7B  1007               	bcf	7,0	;volatile
  3787  0F7C  0008               	return
  3788  0F7D                     __end_of_Lcd4_Cmd:	
  3789                           
  3790                           	psect	text24
  3791  0663                     __ptext24:	
  3792 ;; *************** function _Lcd4_Port *****************
  3793 ;; Defined at:
  3794 ;;		line 11 in file "LCD_screen.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  a               1    wreg     unsigned char 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  a               1    0[BANK1 ] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;		None               void
  3801 ;; Registers used:
  3802 ;;		wreg
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3808 ;;      Params:         0       0       0       0
  3809 ;;      Locals:         0       0       1       0
  3810 ;;      Temps:          0       0       0       0
  3811 ;;      Totals:         0       0       1       0
  3812 ;;Total ram usage:        1 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    7
  3815 ;; This function calls:
  3816 ;;		Nothing
  3817 ;; This function is called by:
  3818 ;;		_Lcd4_Cmd
  3819 ;;		_Lcd4_Write_Char
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           
  3824                           ;psect for function _Lcd4_Port
  3825  0663                     _Lcd4_Port:	
  3826                           
  3827                           ;incstack = 0
  3828 ;; hardware stack exceeded
  3829                           ; Regs used in _Lcd4_Port: [wreg]
  3830                           ;Lcd4_Port@a stored from wreg
  3831  0663  1683               	bsf	3,5	;RP0=1, select bank1
  3832  0664  1303               	bcf	3,6	;RP1=0, select bank1
  3833  0665  00A0               	movwf	Lcd4_Port@a^(0+128)
  3834                           
  3835                           ;LCD_screen.c: 13: if(a & 1)
  3836  0666  1C20               	btfss	Lcd4_Port@a^(0+128),0
  3837  0667  2E6C               	goto	l222
  3838                           
  3839                           ;LCD_screen.c: 14: RC3 = 1;
  3840  0668  1283               	bcf	3,5	;RP0=0, select bank0
  3841  0669  1303               	bcf	3,6	;RP1=0, select bank0
  3842  066A  1587               	bsf	7,3	;volatile
  3843  066B  2E6F               	goto	l223
  3844  066C                     l222:	
  3845                           
  3846                           ;LCD_screen.c: 15: else
  3847                           ;LCD_screen.c: 16: RC3 = 0;
  3848  066C  1283               	bcf	3,5	;RP0=0, select bank0
  3849  066D  1303               	bcf	3,6	;RP1=0, select bank0
  3850  066E  1187               	bcf	7,3	;volatile
  3851  066F                     l223:	
  3852                           
  3853                           ;LCD_screen.c: 18: if(a & 2)
  3854  066F  1683               	bsf	3,5	;RP0=1, select bank1
  3855  0670  1303               	bcf	3,6	;RP1=0, select bank1
  3856  0671  1CA0               	btfss	Lcd4_Port@a^(0+128),1
  3857  0672  2E77               	goto	l224
  3858                           
  3859                           ;LCD_screen.c: 19: RB4 = 1;
  3860  0673  1283               	bcf	3,5	;RP0=0, select bank0
  3861  0674  1303               	bcf	3,6	;RP1=0, select bank0
  3862  0675  1606               	bsf	6,4	;volatile
  3863  0676  2E7A               	goto	l225
  3864  0677                     l224:	
  3865                           
  3866                           ;LCD_screen.c: 20: else
  3867                           ;LCD_screen.c: 21: RB4 = 0;
  3868  0677  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0678  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0679  1206               	bcf	6,4	;volatile
  3871  067A                     l225:	
  3872                           
  3873                           ;LCD_screen.c: 23: if(a & 4)
  3874  067A  1683               	bsf	3,5	;RP0=1, select bank1
  3875  067B  1303               	bcf	3,6	;RP1=0, select bank1
  3876  067C  1D20               	btfss	Lcd4_Port@a^(0+128),2
  3877  067D  2E82               	goto	l226
  3878                           
  3879                           ;LCD_screen.c: 24: RC6 = 1;
  3880  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3881  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3882  0680  1707               	bsf	7,6	;volatile
  3883  0681  2E85               	goto	l227
  3884  0682                     l226:	
  3885                           
  3886                           ;LCD_screen.c: 25: else
  3887                           ;LCD_screen.c: 26: RC6 = 0;
  3888  0682  1283               	bcf	3,5	;RP0=0, select bank0
  3889  0683  1303               	bcf	3,6	;RP1=0, select bank0
  3890  0684  1307               	bcf	7,6	;volatile
  3891  0685                     l227:	
  3892                           
  3893                           ;LCD_screen.c: 28: if(a & 8)
  3894  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0687  1DA0               	btfss	Lcd4_Port@a^(0+128),3
  3897  0688  2E8D               	goto	l228
  3898                           
  3899                           ;LCD_screen.c: 29: RB6 = 1;
  3900  0689  1283               	bcf	3,5	;RP0=0, select bank0
  3901  068A  1303               	bcf	3,6	;RP1=0, select bank0
  3902  068B  1706               	bsf	6,6	;volatile
  3903  068C  0008               	return
  3904  068D                     l228:	
  3905                           
  3906                           ;LCD_screen.c: 30: else
  3907                           ;LCD_screen.c: 31: RB6 = 0;
  3908  068D  1283               	bcf	3,5	;RP0=0, select bank0
  3909  068E  1303               	bcf	3,6	;RP1=0, select bank0
  3910  068F  1306               	bcf	6,6	;volatile
  3911  0690  0008               	return
  3912  0691                     __end_of_Lcd4_Port:	
  3913                           
  3914                           	psect	text25
  3915  03A7                     __ptext25:	
  3916 ;; *************** function ___awmod *****************
  3917 ;; Defined at:
  3918 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\awmod.c"
  3919 ;; Parameters:    Size  Location     Type
  3920 ;;  divisor         2    0[BANK1 ] int 
  3921 ;;  dividend        2    2[BANK1 ] int 
  3922 ;; Auto vars:     Size  Location     Type
  3923 ;;  sign            1    6[BANK1 ] unsigned char 
  3924 ;;  counter         1    5[BANK1 ] unsigned char 
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  2    0[BANK1 ] int 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3934 ;;      Params:         0       0       4       0
  3935 ;;      Locals:         0       0       2       0
  3936 ;;      Temps:          0       0       1       0
  3937 ;;      Totals:         0       0       7       0
  3938 ;;Total ram usage:        7 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    7
  3941 ;; This function calls:
  3942 ;;		Nothing
  3943 ;; This function is called by:
  3944 ;;		_initiate_game
  3945 ;; This function uses a non-reentrant model
  3946 ;;
  3947                           
  3948                           
  3949                           ;psect for function ___awmod
  3950  03A7                     ___awmod:	
  3951                           
  3952                           ;incstack = 0
  3953 ;; hardware stack exceeded
  3954                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3955  03A7  1683               	bsf	3,5	;RP0=1, select bank1
  3956  03A8  1303               	bcf	3,6	;RP1=0, select bank1
  3957  03A9  01A6               	clrf	___awmod@sign^(0+128)
  3958  03AA  1FA3               	btfss	(___awmod@dividend+1)^(0+128),7
  3959  03AB  2BB3               	goto	l2402
  3960  03AC  09A2               	comf	___awmod@dividend^(0+128),f
  3961  03AD  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  3962  03AE  0AA2               	incf	___awmod@dividend^(0+128),f
  3963  03AF  1903               	skipnz
  3964  03B0  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  3965  03B1  01A6               	clrf	___awmod@sign^(0+128)
  3966  03B2  0AA6               	incf	___awmod@sign^(0+128),f
  3967  03B3                     l2402:	
  3968  03B3  1FA1               	btfss	(___awmod@divisor+1)^(0+128),7
  3969  03B4  2BBA               	goto	l2406
  3970  03B5  09A0               	comf	___awmod@divisor^(0+128),f
  3971  03B6  09A1               	comf	(___awmod@divisor+1)^(0+128),f
  3972  03B7  0AA0               	incf	___awmod@divisor^(0+128),f
  3973  03B8  1903               	skipnz
  3974  03B9  0AA1               	incf	(___awmod@divisor+1)^(0+128),f
  3975  03BA                     l2406:	
  3976  03BA  0821               	movf	(___awmod@divisor+1)^(0+128),w
  3977  03BB  0420               	iorwf	___awmod@divisor^(0+128),w
  3978  03BC  1903               	skipnz
  3979  03BD  2BE7               	goto	l2424
  3980  03BE  01A5               	clrf	___awmod@counter^(0+128)
  3981  03BF  0AA5               	incf	___awmod@counter^(0+128),f
  3982  03C0                     l2414:	
  3983  03C0  1BA1               	btfsc	(___awmod@divisor+1)^(0+128),7
  3984  03C1  2BCE               	goto	l2416
  3985  03C2  3001               	movlw	1
  3986  03C3                     u2015:	
  3987  03C3  1003               	clrc
  3988  03C4  0DA0               	rlf	___awmod@divisor^(0+128),f
  3989  03C5  0DA1               	rlf	(___awmod@divisor+1)^(0+128),f
  3990  03C6  3EFF               	addlw	-1
  3991  03C7  1D03               	skipz
  3992  03C8  2BC3               	goto	u2015
  3993  03C9  3001               	movlw	1
  3994  03CA  00A4               	movwf	??___awmod^(0+128)
  3995  03CB  0824               	movf	??___awmod^(0+128),w
  3996  03CC  07A5               	addwf	___awmod@counter^(0+128),f
  3997  03CD  2BC0               	goto	l2414
  3998  03CE                     l2416:	
  3999  03CE  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4000  03CF  0223               	subwf	(___awmod@dividend+1)^(0+128),w
  4001  03D0  1D03               	skipz
  4002  03D1  2BD4               	goto	u2035
  4003  03D2  0820               	movf	___awmod@divisor^(0+128),w
  4004  03D3  0222               	subwf	___awmod@dividend^(0+128),w
  4005  03D4                     u2035:	
  4006  03D4  1C03               	skipc
  4007  03D5  2BDC               	goto	l2420
  4008  03D6  0820               	movf	___awmod@divisor^(0+128),w
  4009  03D7  02A2               	subwf	___awmod@dividend^(0+128),f
  4010  03D8  0821               	movf	(___awmod@divisor+1)^(0+128),w
  4011  03D9  1C03               	skipc
  4012  03DA  03A3               	decf	(___awmod@dividend+1)^(0+128),f
  4013  03DB  02A3               	subwf	(___awmod@dividend+1)^(0+128),f
  4014  03DC                     l2420:	
  4015  03DC  3001               	movlw	1
  4016  03DD                     u2045:	
  4017  03DD  1003               	clrc
  4018  03DE  0CA1               	rrf	(___awmod@divisor+1)^(0+128),f
  4019  03DF  0CA0               	rrf	___awmod@divisor^(0+128),f
  4020  03E0  3EFF               	addlw	-1
  4021  03E1  1D03               	skipz
  4022  03E2  2BDD               	goto	u2045
  4023  03E3  3001               	movlw	1
  4024  03E4  02A5               	subwf	___awmod@counter^(0+128),f
  4025  03E5  1D03               	btfss	3,2
  4026  03E6  2BCE               	goto	l2416
  4027  03E7                     l2424:	
  4028  03E7  0826               	movf	___awmod@sign^(0+128),w
  4029  03E8  1903               	btfsc	3,2
  4030  03E9  2BEF               	goto	l2428
  4031  03EA  09A2               	comf	___awmod@dividend^(0+128),f
  4032  03EB  09A3               	comf	(___awmod@dividend+1)^(0+128),f
  4033  03EC  0AA2               	incf	___awmod@dividend^(0+128),f
  4034  03ED  1903               	skipnz
  4035  03EE  0AA3               	incf	(___awmod@dividend+1)^(0+128),f
  4036  03EF                     l2428:	
  4037  03EF  0823               	movf	(___awmod@dividend+1)^(0+128),w
  4038  03F0  01A1               	clrf	(?___awmod+1)^(0+128)
  4039  03F1  07A1               	addwf	(?___awmod+1)^(0+128),f
  4040  03F2  0822               	movf	___awmod@dividend^(0+128),w
  4041  03F3  01A0               	clrf	?___awmod^(0+128)
  4042  03F4  07A0               	addwf	?___awmod^(0+128),f
  4043  03F5  0008               	return
  4044  03F6                     __end_of___awmod:	
  4045                           
  4046                           	psect	text26
  4047  0283                     __ptext26:	
  4048 ;; *************** function _isr *****************
  4049 ;; Defined at:
  4050 ;;		line 42 in file "interrupts.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  string          9    0        unsigned char [9]
  4055 ;;  string          8   36[BANK0 ] unsigned char [8]
  4056 ;; Return value:  Size  Location     Type
  4057 ;;		None               void
  4058 ;; Registers used:
  4059 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4065 ;;      Params:         0       0       0       0
  4066 ;;      Locals:         0       8       0       0
  4067 ;;      Temps:          0       4       0       0
  4068 ;;      Totals:         0      12       0       0
  4069 ;;Total ram usage:       12 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    6
  4072 ;; This function calls:
  4073 ;;		_game_phase
  4074 ;;		_set_tick_period_timer1_us
  4075 ;;		_switch_player
  4076 ;;		_uart_getc
  4077 ;;		i1_Lcd4_Set_Cursor
  4078 ;;		i1_Lcd4_Write_String
  4079 ;;		i1_uart_putc
  4080 ;;		i1_utoa
  4081 ;; This function is called by:
  4082 ;;		Interrupt level 1
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           
  4087                           ;psect for function _isr
  4088  0283                     _isr:	
  4089                           
  4090                           ;interrupts.c: 46: if (PIR1bits.RCIF)
  4091  0283  1E8C               	btfss	12,5	;volatile
  4092  0284  2A94               	goto	i1l40
  4093                           
  4094                           ;interrupts.c: 47: {
  4095                           ;interrupts.c: 49: if (RCSTAbits.FERR)
  4096  0285  1D18               	btfss	24,2	;volatile
  4097  0286  2A8A               	goto	i1l2502
  4098                           
  4099                           ;interrupts.c: 50: {
  4100                           ;interrupts.c: 51: RCSTAbits.SPEN = 0;
  4101  0287  1398               	bcf	24,7	;volatile
  4102                           
  4103                           ;interrupts.c: 52: RCSTAbits.SPEN = 1;
  4104  0288  1798               	bsf	24,7	;volatile
  4105                           
  4106                           ;interrupts.c: 53: return;
  4107  0289  2AEB               	goto	i1l42
  4108  028A                     i1l2502:	
  4109                           
  4110                           ;interrupts.c: 54: }
  4111                           ;interrupts.c: 58: uart_putc(uart_getc());
  4112  028A  158A  26C9  118A   	fcall	_uart_getc
  4113  028D  158A  26B1  118A   	fcall	i1_uart_putc
  4114                           
  4115                           ;interrupts.c: 59: switch_player();
  4116  0290  158A  26FD  118A   	fcall	_switch_player
  4117                           
  4118                           ;interrupts.c: 60: return;
  4119  0293  2AEB               	goto	i1l42
  4120  0294                     i1l40:	
  4121                           
  4122                           ;interrupts.c: 64: }
  4123                           ;interrupts.c: 67: if (TMR1IF)
  4124  0294  1C0C               	btfss	12,0	;volatile
  4125  0295  2AD0               	goto	i1l43
  4126                           
  4127                           ;interrupts.c: 68: {
  4128                           ;interrupts.c: 69: char string [8];
  4129                           ;interrupts.c: 70: TMR1IF = 0;
  4130  0296  100C               	bcf	12,0	;volatile
  4131                           
  4132                           ;interrupts.c: 71: set_tick_period_timer1_us(1000);
  4133  0297  30E8               	movlw	232
  4134  0298  00F0               	movwf	set_tick_period_timer1_us@period_us
  4135  0299  3003               	movlw	3
  4136  029A  00F1               	movwf	set_tick_period_timer1_us@period_us+1
  4137  029B  158A  26E0  118A   	fcall	_set_tick_period_timer1_us
  4138                           
  4139                           ;interrupts.c: 72: timer1_tick_nbr ++;
  4140  029E  3001               	movlw	1
  4141  029F  1283               	bcf	3,5	;RP0=0, select bank0
  4142  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  4143  02A1  07D0               	addwf	_timer1_tick_nbr,f
  4144  02A2  1803               	skipnc
  4145  02A3  0AD1               	incf	_timer1_tick_nbr+1,f
  4146  02A4  3000               	movlw	0
  4147  02A5  07D1               	addwf	_timer1_tick_nbr+1,f
  4148                           
  4149                           ;interrupts.c: 73: if (timer1_tick_nbr== 1000){
  4150  02A6  3003               	movlw	3
  4151  02A7  0651               	xorwf	_timer1_tick_nbr+1,w
  4152  02A8  1D03               	skipz
  4153  02A9  2AAC               	goto	u217_25
  4154  02AA  30E8               	movlw	232
  4155  02AB  0650               	xorwf	_timer1_tick_nbr,w
  4156  02AC                     u217_25:	
  4157  02AC  1D03               	skipz
  4158  02AD  2AEB               	goto	i1l42
  4159                           
  4160                           ;interrupts.c: 74: timer1_tick_nbr = 0;
  4161  02AE  01D0               	clrf	_timer1_tick_nbr
  4162  02AF  01D1               	clrf	_timer1_tick_nbr+1
  4163                           
  4164                           ;interrupts.c: 75: elapsed_time++;
  4165  02B0  3001               	movlw	1
  4166  02B1  07CC               	addwf	_elapsed_time,f
  4167  02B2  1803               	skipnc
  4168  02B3  0ACD               	incf	_elapsed_time+1,f
  4169  02B4  3000               	movlw	0
  4170  02B5  07CD               	addwf	_elapsed_time+1,f
  4171                           
  4172                           ;interrupts.c: 76: RC2 = 1- RC2;
  4173  02B6  3004               	movlw	4
  4174  02B7  0687               	xorwf	7,f
  4175                           
  4176                           ;interrupts.c: 77: utoa (string, elapsed_time, 10);
  4177  02B8  084D               	movf	_elapsed_time+1,w
  4178  02B9  01F9               	clrf	i1utoa@val+1
  4179  02BA  07F9               	addwf	i1utoa@val+1,f
  4180  02BB  084C               	movf	_elapsed_time,w
  4181  02BC  01F8               	clrf	i1utoa@val
  4182  02BD  07F8               	addwf	i1utoa@val,f
  4183  02BE  300A               	movlw	10
  4184  02BF  00FA               	movwf	i1utoa@base
  4185  02C0  3000               	movlw	0
  4186  02C1  00FB               	movwf	i1utoa@base+1
  4187  02C2  3044               	movlw	isr@string& (0+255)
  4188  02C3  118A  220B  118A   	fcall	i1_utoa
  4189                           
  4190                           ;interrupts.c: 78: Lcd4_Set_Cursor(0,0);
  4191  02C6  01F4               	clrf	i1Lcd4_Set_Cursor@pixel_nb
  4192  02C7  3000               	movlw	0
  4193  02C8  118A  2738  118A   	fcall	i1_Lcd4_Set_Cursor
  4194                           
  4195                           ;interrupts.c: 79: Lcd4_Write_String(string);
  4196  02CB  3044               	movlw	isr@string& (0+255)
  4197  02CC  118A  27AC  118A   	fcall	i1_Lcd4_Write_String
  4198                           
  4199                           ;interrupts.c: 80: }
  4200                           ;interrupts.c: 81: return;
  4201  02CF  2AEB               	goto	i1l42
  4202  02D0                     i1l43:	
  4203                           
  4204                           ;interrupts.c: 82: }
  4205                           ;interrupts.c: 86: if (TMR2IF)
  4206  02D0  1C8C               	btfss	12,1	;volatile
  4207  02D1  2AEB               	goto	i1l42
  4208                           
  4209                           ;interrupts.c: 87: {
  4210                           ;interrupts.c: 88: char string [9];
  4211                           ;interrupts.c: 90: TMR2IF = 0;
  4212  02D2  108C               	bcf	12,1	;volatile
  4213                           
  4214                           ;interrupts.c: 91: timer2_tick_nbr ++;
  4215  02D3  3001               	movlw	1
  4216  02D4  07D2               	addwf	_timer2_tick_nbr,f
  4217  02D5  1803               	skipnc
  4218  02D6  0AD3               	incf	_timer2_tick_nbr+1,f
  4219  02D7  3000               	movlw	0
  4220  02D8  07D3               	addwf	_timer2_tick_nbr+1,f
  4221                           
  4222                           ;interrupts.c: 93: if (timer2_tick_nbr== 100){
  4223  02D9  3064               	movlw	100
  4224  02DA  0652               	xorwf	_timer2_tick_nbr,w
  4225  02DB  0453               	iorwf	_timer2_tick_nbr+1,w
  4226  02DC  1D03               	skipz
  4227  02DD  2AEB               	goto	i1l42
  4228                           
  4229                           ;interrupts.c: 94: timer2_tick_nbr = 0;
  4230  02DE  01D2               	clrf	_timer2_tick_nbr
  4231  02DF  01D3               	clrf	_timer2_tick_nbr+1
  4232                           
  4233                           ;interrupts.c: 95: elapsed_time++;
  4234  02E0  3001               	movlw	1
  4235  02E1  07CC               	addwf	_elapsed_time,f
  4236  02E2  1803               	skipnc
  4237  02E3  0ACD               	incf	_elapsed_time+1,f
  4238  02E4  3000               	movlw	0
  4239  02E5  07CD               	addwf	_elapsed_time+1,f
  4240                           
  4241                           ;interrupts.c: 96: RC2 = 1- RC2;
  4242  02E6  3004               	movlw	4
  4243  02E7  0687               	xorwf	7,f
  4244                           
  4245                           ;interrupts.c: 97: game_phase();
  4246  02E8  118A  2571  118A   	fcall	_game_phase
  4247  02EB                     i1l42:	
  4248                           ;interrupts.c: 98: }
  4249                           ;interrupts.c: 100: return;
  4250                           
  4251  02EB  1283               	bcf	3,5	;RP0=0, select bank0
  4252  02EC  1303               	bcf	3,6	;RP1=0, select bank0
  4253  02ED  0843               	movf	??_isr+3,w
  4254  02EE  00FF               	movwf	127
  4255  02EF  0842               	movf	??_isr+2,w
  4256  02F0  008A               	movwf	10
  4257  02F1  0841               	movf	??_isr+1,w
  4258  02F2  0084               	movwf	4
  4259  02F3  0E40               	swapf	??_isr^0,w
  4260  02F4  0083               	movwf	3
  4261  02F5  0EFE               	swapf	126,f
  4262  02F6  0E7E               	swapf	126,w
  4263  02F7  0009               	retfie
  4264  02F8                     __end_of_isr:	
  4265                           
  4266                           	psect	intentry
  4267  0004                     __pintentry:	
  4268                           ;incstack = 0
  4269 ;; hardware stack exceeded
  4270                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4271                           
  4272  0004                     interrupt_function:	
  4273  007E                     saved_w	set	btemp
  4274  0004  00FE               	movwf	btemp
  4275  0005  0E03               	swapf	3,w
  4276  0006  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0007  1303               	bcf	3,6	;RP1=0, select bank0
  4278  0008  00C0               	movwf	??_isr
  4279  0009  0804               	movf	4,w
  4280  000A  00C1               	movwf	??_isr+1
  4281  000B  080A               	movf	10,w
  4282  000C  00C2               	movwf	??_isr+2
  4283  000D  087F               	movf	btemp+1,w
  4284  000E  00C3               	movwf	??_isr+3
  4285  000F  118A  2A83         	ljmp	_isr
  4286                           
  4287                           	psect	text27
  4288  0EC9                     __ptext27:	
  4289 ;; *************** function _uart_getc *****************
  4290 ;; Defined at:
  4291 ;;		line 84 in file "UART.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4305 ;;      Params:         0       0       0       0
  4306 ;;      Locals:         0       0       0       0
  4307 ;;      Temps:          0       0       0       0
  4308 ;;      Totals:         0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_isr
  4315 ;;		_uart_get_str
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           
  4320                           ;psect for function _uart_getc
  4321  0EC9                     _uart_getc:	
  4322                           
  4323                           ;UART.c: 85: if (RCSTAbits.OERR){
  4324                           
  4325                           ;incstack = 0
  4326                           ; Regs used in _uart_getc: [wreg]
  4327  0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  4328  0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  4329  0ECB  1C98               	btfss	24,1	;volatile
  4330  0ECC  2ECF               	goto	i1l189
  4331                           
  4332                           ;UART.c: 86: RCSTAbits.CREN = 0;
  4333  0ECD  1218               	bcf	24,4	;volatile
  4334                           
  4335                           ;UART.c: 87: RCSTAbits.CREN = 1;
  4336  0ECE  1618               	bsf	24,4	;volatile
  4337  0ECF                     i1l189:	
  4338                           ;UART.c: 91: ;
  4339                           
  4340                           ;UART.c: 88: }
  4341                           ;UART.c: 90: while(!RCIF)
  4342                           
  4343  0ECF  1E8C               	btfss	12,5	;volatile
  4344  0ED0  2ECF               	goto	i1l189
  4345                           
  4346                           ;UART.c: 92: return RCREG;
  4347  0ED1  081A               	movf	26,w	;volatile
  4348  0ED2  0008               	return
  4349  0ED3                     __end_of_uart_getc:	
  4350                           
  4351                           	psect	text28
  4352  0EFD                     __ptext28:	
  4353 ;; *************** function _switch_player *****************
  4354 ;; Defined at:
  4355 ;;		line 49 in file "game_timer/src/game_timer.c"
  4356 ;; Parameters:    Size  Location     Type
  4357 ;;		None
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;		None
  4360 ;; Return value:  Size  Location     Type
  4361 ;;		None               void
  4362 ;; Registers used:
  4363 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4369 ;;      Params:         0       0       0       0
  4370 ;;      Locals:         0       0       0       0
  4371 ;;      Temps:          0       1       0       0
  4372 ;;      Totals:         0       1       0       0
  4373 ;;Total ram usage:        1 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; Hardware stack levels required when called:    5
  4376 ;; This function calls:
  4377 ;;		i1_display_player_nbr
  4378 ;; This function is called by:
  4379 ;;		_isr
  4380 ;; This function uses a non-reentrant model
  4381 ;;
  4382                           
  4383                           
  4384                           ;psect for function _switch_player
  4385  0EFD                     _switch_player:	
  4386                           
  4387                           ;game_timer.c: 50: extern player * gcurrent_player;
  4388                           ;game_timer.c: 52: gcurrent_player = (gcurrent_player->next_player);
  4389                           
  4390                           ;incstack = 0
  4391 ;; hardware stack exceeded
  4392                           ; Regs used in _switch_player: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4393  0EFD  1683               	bsf	3,5	;RP0=1, select bank1
  4394  0EFE  1303               	bcf	3,6	;RP1=0, select bank1
  4395  0EFF  0858               	movf	_gcurrent_player^(0+128),w
  4396  0F00  3E03               	addlw	3
  4397  0F01  0084               	movwf	4
  4398  0F02  1783               	bsf	3,7	;select IRP bank2
  4399  0F03  0800               	movf	0,w
  4400  0F04  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0F05  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0F06  00B9               	movwf	??_switch_player
  4403  0F07  0839               	movf	??_switch_player,w
  4404  0F08  1683               	bsf	3,5	;RP0=1, select bank1
  4405  0F09  1303               	bcf	3,6	;RP1=0, select bank1
  4406  0F0A  00D8               	movwf	_gcurrent_player^(0+128)
  4407                           
  4408                           ;game_timer.c: 53: display_player_nbr(gcurrent_player->player_number);
  4409  0F0B  0858               	movf	_gcurrent_player^(0+128),w
  4410  0F0C  0084               	movwf	4
  4411  0F0D  0800               	movf	0,w
  4412  0F0E  118A  2606         	fcall	i1_display_player_nbr
  4413  0F10  0008               	return
  4414  0F11                     __end_of_switch_player:	
  4415                           
  4416                           	psect	text29
  4417  0606                     __ptext29:	
  4418 ;; *************** function i1_display_player_nbr *****************
  4419 ;; Defined at:
  4420 ;;		line 56 in file "game_timer/src/game_timer.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;  player_numbe    1    wreg     unsigned char 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  player_numbe    1   24[BANK0 ] unsigned char 
  4425 ;;  display_play   16    6[BANK0 ] unsigned char [16]
  4426 ;;  display_play    2   22[BANK0 ] unsigned char [2]
  4427 ;; Return value:  Size  Location     Type
  4428 ;;		None               void
  4429 ;; Registers used:
  4430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4436 ;;      Params:         0       0       0       0
  4437 ;;      Locals:         0      19       0       0
  4438 ;;      Temps:          0       2       0       0
  4439 ;;      Totals:         0      21       0       0
  4440 ;;Total ram usage:       21 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    4
  4443 ;; This function calls:
  4444 ;;		i1_Lcd4_Set_Cursor
  4445 ;;		i1_Lcd4_Write_String
  4446 ;;		i1_strcat
  4447 ;;		i1_strcpy
  4448 ;;		i1_utoa
  4449 ;; This function is called by:
  4450 ;;		_switch_player
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function i1_display_player_nbr
  4456  0606                     i1_display_player_nbr:	
  4457                           
  4458                           ;incstack = 0
  4459 ;; hardware stack exceeded
  4460                           ; Regs used in i1_display_player_nbr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4461                           ;i1display_player_nbr@player_number stored from wreg
  4462  0606  1283               	bcf	3,5	;RP0=0, select bank0
  4463  0607  1303               	bcf	3,6	;RP1=0, select bank0
  4464  0608  00B8               	movwf	i1display_player_nbr@player_number
  4465                           
  4466                           ;game_timer.c: 58: char string[16];
  4467                           ;game_timer.c: 59: char string_player_number [2];
  4468                           ;game_timer.c: 60: strcpy(string, "Joueur ");
  4469  0609  300E               	movlw	(STR_2-__stringbase)& (0+255)
  4470  060A  00A4               	movwf	??i1_display_player_nbr
  4471  060B  0824               	movf	??i1_display_player_nbr,w
  4472  060C  00F0               	movwf	i1strcpy@from
  4473  060D  3026               	movlw	i1display_player_nbr@string& (0+255)
  4474  060E  158A  2743  118A   	fcall	i1_strcpy
  4475                           
  4476                           ;game_timer.c: 61: utoa(string_player_number,player_number,10);
  4477  0611  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0612  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0613  0838               	movf	i1display_player_nbr@player_number,w
  4480  0614  00A4               	movwf	??i1_display_player_nbr
  4481  0615  01A5               	clrf	??i1_display_player_nbr+1
  4482  0616  0824               	movf	??i1_display_player_nbr,w
  4483  0617  00F8               	movwf	i1utoa@val
  4484  0618  0825               	movf	??i1_display_player_nbr+1,w
  4485  0619  00F9               	movwf	i1utoa@val+1
  4486  061A  300A               	movlw	10
  4487  061B  00FA               	movwf	i1utoa@base
  4488  061C  3000               	movlw	0
  4489  061D  00FB               	movwf	i1utoa@base+1
  4490  061E  3036               	movlw	i1display_player_nbr@string_player_number& (0+255)
  4491  061F  118A  220B  118A   	fcall	i1_utoa
  4492                           
  4493                           ;game_timer.c: 62: strcat (string, string_player_number);
  4494  0622  3036               	movlw	i1display_player_nbr@string_player_number& (0+255)
  4495  0623  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0624  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0625  00A4               	movwf	??i1_display_player_nbr
  4498  0626  0824               	movf	??i1_display_player_nbr,w
  4499  0627  00F0               	movwf	i1strcat@from
  4500  0628  3026               	movlw	i1display_player_nbr@string& (0+255)
  4501  0629  158A  27DC  118A   	fcall	i1_strcat
  4502                           
  4503                           ;game_timer.c: 64: Lcd4_Set_Cursor(1,0);
  4504  062C  01F4               	clrf	i1Lcd4_Set_Cursor@pixel_nb
  4505  062D  3001               	movlw	1
  4506  062E  118A  2738  118A   	fcall	i1_Lcd4_Set_Cursor
  4507                           
  4508                           ;game_timer.c: 65: Lcd4_Write_String(string);
  4509  0631  3026               	movlw	i1display_player_nbr@string& (0+255)
  4510  0632  118A  27AC         	fcall	i1_Lcd4_Write_String
  4511  0634  0008               	return
  4512  0635                     __end_ofi1_display_player_nbr:	
  4513                           
  4514                           	psect	text30
  4515  0F43                     __ptext30:	
  4516 ;; *************** function i1_strcpy *****************
  4517 ;; Defined at:
  4518 ;;		line 8 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strcpy.c"
  4519 ;; Parameters:    Size  Location     Type
  4520 ;;  to              1    wreg     PTR unsigned char 
  4521 ;;		 -> display_player_nbr@string(16), 
  4522 ;;  from            1    0[COMMON] PTR const unsigned char 
  4523 ;;		 -> STR_2(8), STR_1(13), 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  to              1    2[COMMON] PTR unsigned char 
  4526 ;;		 -> display_player_nbr@string(16), 
  4527 ;;  strcpy          1    3[COMMON] PTR unsigned char 
  4528 ;;		 -> display_player_nbr@string(16), 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      PTR unsigned char 
  4531 ;; Registers used:
  4532 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4538 ;;      Params:         1       0       0       0
  4539 ;;      Locals:         2       0       0       0
  4540 ;;      Temps:          1       0       0       0
  4541 ;;      Totals:         4       0       0       0
  4542 ;;Total ram usage:        4 bytes
  4543 ;; Hardware stack levels used:    2
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		i1_display_player_nbr
  4548 ;; This function uses a non-reentrant model
  4549 ;;
  4550                           
  4551                           
  4552                           ;psect for function i1_strcpy
  4553  0F43                     i1_strcpy:	
  4554                           
  4555                           ;incstack = 0
  4556 ;; hardware stack exceeded
  4557                           ; Regs used in i1_strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  4558                           ;i1strcpy@to stored from wreg
  4559  0F43  00F2               	movwf	i1strcpy@to
  4560  0F44  0872               	movf	i1strcpy@to,w
  4561  0F45  00F1               	movwf	??i1_strcpy
  4562  0F46  0871               	movf	??i1_strcpy,w
  4563  0F47  00F3               	movwf	i1strcpy@cp
  4564  0F48                     i1l2282:	
  4565  0F48  0870               	movf	i1strcpy@from,w
  4566  0F49  0084               	movwf	4
  4567  0F4A  158A  2000  158A   	fcall	stringdir
  4568  0F4D  00F1               	movwf	??i1_strcpy
  4569  0F4E  0873               	movf	i1strcpy@cp,w
  4570  0F4F  0084               	movwf	4
  4571  0F50  0871               	movf	??i1_strcpy,w
  4572  0F51  1383               	bcf	3,7	;select IRP bank0
  4573  0F52  0080               	movwf	0
  4574  0F53  0880               	movf	0,f
  4575  0F54  1903               	btfsc	3,2
  4576  0F55  0008               	return
  4577  0F56  3001               	movlw	1
  4578  0F57  00F1               	movwf	??i1_strcpy
  4579  0F58  0871               	movf	??i1_strcpy,w
  4580  0F59  07F3               	addwf	i1strcpy@cp,f
  4581  0F5A  3001               	movlw	1
  4582  0F5B  00F1               	movwf	??i1_strcpy
  4583  0F5C  0871               	movf	??i1_strcpy,w
  4584  0F5D  07F0               	addwf	i1strcpy@from,f
  4585  0F5E  2F48               	goto	i1l2282
  4586  0F5F                     __end_ofi1_strcpy:	
  4587                           ;	Return value of i1_strcpy is never used
  4588                           
  4589                           
  4590                           	psect	text31
  4591  0FDC                     __ptext31:	
  4592 ;; *************** function i1_strcat *****************
  4593 ;; Defined at:
  4594 ;;		line 8 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strcat.c"
  4595 ;; Parameters:    Size  Location     Type
  4596 ;;  to              1    wreg     PTR unsigned char 
  4597 ;;		 -> display_player_nbr@string(16), 
  4598 ;;  from            1    0[COMMON] PTR const unsigned char 
  4599 ;;		 -> display_player_nbr@string_player_number(2), 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;  to              1    2[COMMON] PTR unsigned char 
  4602 ;;		 -> display_player_nbr@string(16), 
  4603 ;;  strcat          1    3[COMMON] PTR unsigned char 
  4604 ;;		 -> display_player_nbr@string(16), 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  1    wreg      PTR unsigned char 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4614 ;;      Params:         1       0       0       0
  4615 ;;      Locals:         2       0       0       0
  4616 ;;      Temps:          1       0       0       0
  4617 ;;      Totals:         4       0       0       0
  4618 ;;Total ram usage:        4 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		i1_display_player_nbr
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           
  4628                           ;psect for function i1_strcat
  4629  0FDC                     i1_strcat:	
  4630                           
  4631                           ;incstack = 0
  4632 ;; hardware stack exceeded
  4633                           ; Regs used in i1_strcat: [wreg-fsr0h+status,2+status,0]
  4634                           ;i1strcat@to stored from wreg
  4635  0FDC  00F2               	movwf	i1strcat@to
  4636  0FDD  0872               	movf	i1strcat@to,w
  4637  0FDE  00F1               	movwf	??i1_strcat
  4638  0FDF  0871               	movf	??i1_strcat,w
  4639  0FE0  00F3               	movwf	i1strcat@cp
  4640  0FE1                     i1l2272:	
  4641  0FE1  0873               	movf	i1strcat@cp,w
  4642  0FE2  0084               	movwf	4
  4643  0FE3  1383               	bcf	3,7	;select IRP bank0
  4644  0FE4  0880               	movf	0,f
  4645  0FE5  1903               	btfsc	3,2
  4646  0FE6  2FF4               	goto	i1l2276
  4647  0FE7  3001               	movlw	1
  4648  0FE8  00F1               	movwf	??i1_strcat
  4649  0FE9  0871               	movf	??i1_strcat,w
  4650  0FEA  07F3               	addwf	i1strcat@cp,f
  4651  0FEB  2FE1               	goto	i1l2272
  4652  0FEC                     i1l2274:	
  4653  0FEC  3001               	movlw	1
  4654  0FED  00F1               	movwf	??i1_strcat
  4655  0FEE  0871               	movf	??i1_strcat,w
  4656  0FEF  07F3               	addwf	i1strcat@cp,f
  4657  0FF0  3001               	movlw	1
  4658  0FF1  00F1               	movwf	??i1_strcat
  4659  0FF2  0871               	movf	??i1_strcat,w
  4660  0FF3  07F0               	addwf	i1strcat@from,f
  4661  0FF4                     i1l2276:	
  4662  0FF4  0870               	movf	i1strcat@from,w
  4663  0FF5  0084               	movwf	4
  4664  0FF6  0800               	movf	0,w
  4665  0FF7  00F1               	movwf	??i1_strcat
  4666  0FF8  0873               	movf	i1strcat@cp,w
  4667  0FF9  0084               	movwf	4
  4668  0FFA  0871               	movf	??i1_strcat,w
  4669  0FFB  0080               	movwf	0
  4670  0FFC  0880               	movf	0,f
  4671  0FFD  1903               	btfsc	3,2
  4672                           
  4673                           ;	Return value of i1_strcat is never used
  4674  0FFE  0008               	return
  4675  0FFF  2FEC               	goto	i1l2274
  4676  1000                     __end_ofi1_strcat:	
  4677                           
  4678                           	psect	text32
  4679  0EE0                     __ptext32:	
  4680 ;; *************** function _set_tick_period_timer1_us *****************
  4681 ;; Defined at:
  4682 ;;		line 42 in file "timer.c"
  4683 ;; Parameters:    Size  Location     Type
  4684 ;;  period_us       2    0[COMMON] unsigned int 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;		None
  4687 ;; Return value:  Size  Location     Type
  4688 ;;		None               void
  4689 ;; Registers used:
  4690 ;;		wreg, status,2, status,0
  4691 ;; Tracked objects:
  4692 ;;		On entry : 0/0
  4693 ;;		On exit  : 0/0
  4694 ;;		Unchanged: 0/0
  4695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4696 ;;      Params:         2       0       0       0
  4697 ;;      Locals:         0       0       0       0
  4698 ;;      Temps:          2       0       0       0
  4699 ;;      Totals:         4       0       0       0
  4700 ;;Total ram usage:        4 bytes
  4701 ;; Hardware stack levels used:    1
  4702 ;; This function calls:
  4703 ;;		Nothing
  4704 ;; This function is called by:
  4705 ;;		_isr
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _set_tick_period_timer1_us
  4711  0EE0                     _set_tick_period_timer1_us:	
  4712                           
  4713                           ;timer.c: 45: TMR1 = (0x10000UL - 8000000UL/4/2/1000000UL*period_us);
  4714                           
  4715                           ;incstack = 0
  4716                           ; Regs used in _set_tick_period_timer1_us: [wreg+status,2+status,0]
  4717  0EE0  0970               	comf	set_tick_period_timer1_us@period_us,w
  4718  0EE1  00F2               	movwf	??_set_tick_period_timer1_us
  4719  0EE2  0971               	comf	set_tick_period_timer1_us@period_us+1,w
  4720  0EE3  00F3               	movwf	??_set_tick_period_timer1_us+1
  4721  0EE4  0AF2               	incf	??_set_tick_period_timer1_us,f
  4722  0EE5  1903               	skipnz
  4723  0EE6  0AF3               	incf	??_set_tick_period_timer1_us+1,f
  4724  0EE7  0872               	movf	??_set_tick_period_timer1_us,w
  4725  0EE8  1283               	bcf	3,5	;RP0=0, select bank0
  4726  0EE9  1303               	bcf	3,6	;RP1=0, select bank0
  4727  0EEA  008E               	movwf	14	;volatile
  4728  0EEB  0873               	movf	??_set_tick_period_timer1_us+1,w
  4729  0EEC  008F               	movwf	15	;volatile
  4730  0EED  0008               	return
  4731  0EEE                     __end_of_set_tick_period_timer1_us:	
  4732                           
  4733                           	psect	text33
  4734  0571                     __ptext33:	
  4735 ;; *************** function _game_phase *****************
  4736 ;; Defined at:
  4737 ;;		line 36 in file "game_timer/src/game_timer.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  time_str        9   21[BANK0 ] unsigned char [9]
  4742 ;;  remaining_ti    2   30[BANK0 ] unsigned int 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;		None               void
  4745 ;; Registers used:
  4746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4752 ;;      Params:         0       0       0       0
  4753 ;;      Locals:         0      11       0       0
  4754 ;;      Temps:          0       2       0       0
  4755 ;;      Totals:         0      13       0       0
  4756 ;;Total ram usage:       13 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    4
  4759 ;; This function calls:
  4760 ;;		_time_shapping
  4761 ;;		i1_Lcd4_Set_Cursor
  4762 ;;		i1_Lcd4_Write_String
  4763 ;; This function is called by:
  4764 ;;		_isr
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768                           
  4769                           ;psect for function _game_phase
  4770  0571                     _game_phase:	
  4771                           
  4772                           ;game_timer.c: 37: extern player * gcurrent_player;
  4773                           ;game_timer.c: 38: extern unsigned int ggame_time;
  4774                           ;game_timer.c: 39: unsigned int remaining_time;
  4775                           ;game_timer.c: 40: char time_str[9];
  4776                           ;game_timer.c: 42: (gcurrent_player->played_time) ++;
  4777                           
  4778                           ;incstack = 0
  4779 ;; hardware stack exceeded
  4780                           ; Regs used in _game_phase: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4781  0571  1683               	bsf	3,5	;RP0=1, select bank1
  4782  0572  1303               	bcf	3,6	;RP1=0, select bank1
  4783  0573  0A58               	incf	_gcurrent_player^(0+128),w
  4784  0574  0084               	movwf	4
  4785  0575  3001               	movlw	1
  4786  0576  1783               	bsf	3,7	;select IRP bank2
  4787  0577  0780               	addwf	0,f
  4788  0578  0A84               	incf	4,f
  4789  0579  1803               	skipnc
  4790  057A  0A80               	incf	0,f
  4791                           
  4792                           ;game_timer.c: 43: remaining_time = ggame_time - (gcurrent_player->played_time);
  4793  057B  0A58               	incf	_gcurrent_player^(0+128),w
  4794  057C  0084               	movwf	4
  4795  057D  0800               	movf	0,w
  4796  057E  1283               	bcf	3,5	;RP0=0, select bank0
  4797  057F  1303               	bcf	3,6	;RP1=0, select bank0
  4798  0580  00B3               	movwf	??_game_phase
  4799  0581  0A84               	incf	4,f
  4800  0582  0800               	movf	0,w
  4801  0583  00B4               	movwf	??_game_phase+1
  4802  0584  09B3               	comf	??_game_phase,f
  4803  0585  09B4               	comf	??_game_phase+1,f
  4804  0586  0AB3               	incf	??_game_phase,f
  4805  0587  1903               	skipnz
  4806  0588  0AB4               	incf	??_game_phase+1,f
  4807  0589  084E               	movf	_ggame_time,w
  4808  058A  0733               	addwf	??_game_phase,w
  4809  058B  00BE               	movwf	game_phase@remaining_time
  4810  058C  084F               	movf	_ggame_time+1,w
  4811  058D  1803               	skipnc
  4812  058E  0A4F               	incf	_ggame_time+1,w
  4813  058F  0734               	addwf	??_game_phase+1,w
  4814  0590  00BF               	movwf	game_phase@remaining_time+1
  4815                           
  4816                           ;game_timer.c: 44: time_shapping(time_str, remaining_time);
  4817  0591  083F               	movf	game_phase@remaining_time+1,w
  4818  0592  01A5               	clrf	time_shapping@time+1
  4819  0593  07A5               	addwf	time_shapping@time+1,f
  4820  0594  083E               	movf	game_phase@remaining_time,w
  4821  0595  01A4               	clrf	time_shapping@time
  4822  0596  07A4               	addwf	time_shapping@time,f
  4823  0597  3035               	movlw	game_phase@time_str& (0+255)
  4824  0598  118A  202E  118A   	fcall	_time_shapping
  4825                           
  4826                           ;game_timer.c: 45: Lcd4_Set_Cursor(0,0);
  4827  059B  01F4               	clrf	i1Lcd4_Set_Cursor@pixel_nb
  4828  059C  3000               	movlw	0
  4829  059D  118A  2738  118A   	fcall	i1_Lcd4_Set_Cursor
  4830                           
  4831                           ;game_timer.c: 46: Lcd4_Write_String(time_str);
  4832  05A0  3035               	movlw	game_phase@time_str& (0+255)
  4833  05A1  118A  27AC         	fcall	i1_Lcd4_Write_String
  4834  05A3  0008               	return
  4835  05A4                     __end_of_game_phase:	
  4836                           
  4837                           	psect	text34
  4838  07AC                     __ptext34:	
  4839 ;; *************** function i1_Lcd4_Write_String *****************
  4840 ;; Defined at:
  4841 ;;		line 101 in file "LCD_screen.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  a               1    wreg     PTR unsigned char 
  4844 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;  a               1    1[BANK0 ] PTR unsigned char 
  4847 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  4848 ;;  Lcd4_Write_S    2    2[BANK0 ] int 
  4849 ;; Return value:  Size  Location     Type
  4850 ;;		None               void
  4851 ;; Registers used:
  4852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4858 ;;      Params:         0       0       0       0
  4859 ;;      Locals:         0       3       0       0
  4860 ;;      Temps:          0       1       0       0
  4861 ;;      Totals:         0       4       0       0
  4862 ;;Total ram usage:        4 bytes
  4863 ;; Hardware stack levels used:    1
  4864 ;; Hardware stack levels required when called:    3
  4865 ;; This function calls:
  4866 ;;		i1_LOG
  4867 ;;		i1_Lcd4_Write_Char
  4868 ;; This function is called by:
  4869 ;;		_isr
  4870 ;;		_game_phase
  4871 ;;		i1_display_player_nbr
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function i1_Lcd4_Write_String
  4877  07AC                     i1_Lcd4_Write_String:	
  4878                           
  4879                           ;incstack = 0
  4880 ;; hardware stack exceeded
  4881                           ; Regs used in i1_Lcd4_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4882                           ;i1Lcd4_Write_String@a stored from wreg
  4883  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  4884  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  4885  07AE  00A1               	movwf	i1Lcd4_Write_String@a
  4886                           
  4887                           ;LCD_screen.c: 103: int i;
  4888                           ;LCD_screen.c: 104: for(i=0;a[i]!='\0';i++)
  4889  07AF  01A2               	clrf	i1Lcd4_Write_String@i
  4890  07B0  01A3               	clrf	i1Lcd4_Write_String@i+1
  4891  07B1                     i1l2196:	
  4892  07B1  0822               	movf	i1Lcd4_Write_String@i,w
  4893  07B2  0721               	addwf	i1Lcd4_Write_String@a,w
  4894  07B3  00A0               	movwf	??i1_Lcd4_Write_String
  4895  07B4  0820               	movf	??i1_Lcd4_Write_String,w
  4896  07B5  0084               	movwf	4
  4897  07B6  1383               	bcf	3,7	;select IRP bank0
  4898  07B7  0880               	movf	0,f
  4899  07B8  1903               	btfsc	3,2
  4900  07B9  2FCD               	goto	i1l2198
  4901                           
  4902                           ;LCD_screen.c: 105: Lcd4_Write_Char(a[i]);
  4903  07BA  0822               	movf	i1Lcd4_Write_String@i,w
  4904  07BB  0721               	addwf	i1Lcd4_Write_String@a,w
  4905  07BC  00A0               	movwf	??i1_Lcd4_Write_String
  4906  07BD  0820               	movf	??i1_Lcd4_Write_String,w
  4907  07BE  0084               	movwf	4
  4908  07BF  1383               	bcf	3,7	;select IRP bank0
  4909  07C0  0800               	movf	0,w
  4910  07C1  118A  2443  118A   	fcall	i1_Lcd4_Write_Char
  4911  07C4  3001               	movlw	1
  4912  07C5  1283               	bcf	3,5	;RP0=0, select bank0
  4913  07C6  1303               	bcf	3,6	;RP1=0, select bank0
  4914  07C7  07A2               	addwf	i1Lcd4_Write_String@i,f
  4915  07C8  1803               	skipnc
  4916  07C9  0AA3               	incf	i1Lcd4_Write_String@i+1,f
  4917  07CA  3000               	movlw	0
  4918  07CB  07A3               	addwf	i1Lcd4_Write_String@i+1,f
  4919  07CC  2FB1               	goto	i1l2196
  4920  07CD                     i1l2198:	
  4921                           
  4922                           ;LCD_screen.c: 106: LOG(a,0);
  4923  07CD  01FC               	clrf	i1LOG@level
  4924  07CE  0821               	movf	i1Lcd4_Write_String@a,w
  4925  07CF  158A  269E         	fcall	i1_LOG
  4926  07D1  0008               	return
  4927  07D2                     __end_ofi1_Lcd4_Write_String:	
  4928                           
  4929                           	psect	text35
  4930  0443                     __ptext35:	
  4931 ;; *************** function i1_Lcd4_Write_Char *****************
  4932 ;; Defined at:
  4933 ;;		line 84 in file "LCD_screen.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  a               1    wreg     unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  a               1    5[COMMON] unsigned char 
  4938 ;;  Lcd4_Write_C    1    4[COMMON] unsigned char 
  4939 ;;  Lcd4_Write_C    1    3[COMMON] unsigned char 
  4940 ;; Return value:  Size  Location     Type
  4941 ;;		None               void
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0, pclath, cstack
  4944 ;; Tracked objects:
  4945 ;;		On entry : 0/0
  4946 ;;		On exit  : 0/0
  4947 ;;		Unchanged: 0/0
  4948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4949 ;;      Params:         0       0       0       0
  4950 ;;      Locals:         3       0       0       0
  4951 ;;      Temps:          2       0       0       0
  4952 ;;      Totals:         5       0       0       0
  4953 ;;Total ram usage:        5 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    1
  4956 ;; This function calls:
  4957 ;;		i1_Lcd4_Port
  4958 ;; This function is called by:
  4959 ;;		i1_Lcd4_Write_String
  4960 ;; This function uses a non-reentrant model
  4961 ;;
  4962                           
  4963                           
  4964                           ;psect for function i1_Lcd4_Write_Char
  4965  0443                     i1_Lcd4_Write_Char:	
  4966                           
  4967                           ;incstack = 0
  4968 ;; hardware stack exceeded
  4969                           ; Regs used in i1_Lcd4_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  4970                           ;i1Lcd4_Write_Char@a stored from wreg
  4971  0443  00F5               	movwf	i1Lcd4_Write_Char@a
  4972                           
  4973                           ;LCD_screen.c: 86: char temp,y;
  4974                           ;LCD_screen.c: 87: temp = a&0x0F;
  4975  0444  0875               	movf	i1Lcd4_Write_Char@a,w
  4976  0445  390F               	andlw	15
  4977  0446  00F1               	movwf	??i1_Lcd4_Write_Char
  4978  0447  0871               	movf	??i1_Lcd4_Write_Char,w
  4979  0448  00F3               	movwf	i1Lcd4_Write_Char@temp
  4980                           
  4981                           ;LCD_screen.c: 88: y = a&0xF0;
  4982  0449  0875               	movf	i1Lcd4_Write_Char@a,w
  4983  044A  39F0               	andlw	240
  4984  044B  00F1               	movwf	??i1_Lcd4_Write_Char
  4985  044C  0871               	movf	??i1_Lcd4_Write_Char,w
  4986  044D  00F4               	movwf	i1Lcd4_Write_Char@y
  4987                           
  4988                           ;LCD_screen.c: 89: RA2 = 1;
  4989  044E  1283               	bcf	3,5	;RP0=0, select bank0
  4990  044F  1303               	bcf	3,6	;RP1=0, select bank0
  4991  0450  1505               	bsf	5,2	;volatile
  4992                           
  4993                           ;LCD_screen.c: 90: Lcd4_Port(y>>4);
  4994  0451  0874               	movf	i1Lcd4_Write_Char@y,w
  4995  0452  00F1               	movwf	??i1_Lcd4_Write_Char
  4996  0453  3004               	movlw	4
  4997  0454                     u143_25:	
  4998  0454  1003               	clrc
  4999  0455  0CF1               	rrf	??i1_Lcd4_Write_Char,f
  5000  0456  3EFF               	addlw	-1
  5001  0457  1D03               	skipz
  5002  0458  2C54               	goto	u143_25
  5003  0459  0871               	movf	??i1_Lcd4_Write_Char,w
  5004  045A  158A  2729  118A   	fcall	i1_Lcd4_Port
  5005                           
  5006                           ;LCD_screen.c: 91: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  5007  045D  300D               	movlw	13
  5008  045E  00F2               	movwf	??i1_Lcd4_Write_Char+1
  5009  045F  30FB               	movlw	251
  5010  0460  00F1               	movwf	??i1_Lcd4_Write_Char
  5011  0461                     u233_27:	
  5012  0461  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  5013  0462  2C61               	goto	u233_27
  5014  0463  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  5015  0464  2C61               	goto	u233_27
  5016  0465  2C66               	nop2
  5017                           
  5018                           ;LCD_screen.c: 92: RC0 = 1;
  5019  0466  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0467  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0468  1407               	bsf	7,0	;volatile
  5022                           
  5023                           ;LCD_screen.c: 93: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  5024  0469  300D               	movlw	13
  5025  046A  00F2               	movwf	??i1_Lcd4_Write_Char+1
  5026  046B  30FB               	movlw	251
  5027  046C  00F1               	movwf	??i1_Lcd4_Write_Char
  5028  046D                     u234_27:	
  5029  046D  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  5030  046E  2C6D               	goto	u234_27
  5031  046F  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  5032  0470  2C6D               	goto	u234_27
  5033  0471  2C72               	nop2
  5034                           
  5035                           ;LCD_screen.c: 94: RC0 = 0;
  5036  0472  1283               	bcf	3,5	;RP0=0, select bank0
  5037  0473  1303               	bcf	3,6	;RP1=0, select bank0
  5038  0474  1007               	bcf	7,0	;volatile
  5039                           
  5040                           ;LCD_screen.c: 95: Lcd4_Port(temp);
  5041  0475  0873               	movf	i1Lcd4_Write_Char@temp,w
  5042  0476  158A  2729  118A   	fcall	i1_Lcd4_Port
  5043                           
  5044                           ;LCD_screen.c: 96: RC0 = 1;
  5045  0479  1283               	bcf	3,5	;RP0=0, select bank0
  5046  047A  1303               	bcf	3,6	;RP1=0, select bank0
  5047  047B  1407               	bsf	7,0	;volatile
  5048                           
  5049                           ;LCD_screen.c: 97: _delay((unsigned long)((5)*(8000000UL/4000.0)));
  5050  047C  300D               	movlw	13
  5051  047D  00F2               	movwf	??i1_Lcd4_Write_Char+1
  5052  047E  30FB               	movlw	251
  5053  047F  00F1               	movwf	??i1_Lcd4_Write_Char
  5054  0480                     u235_27:	
  5055  0480  0BF1               	decfsz	??i1_Lcd4_Write_Char,f
  5056  0481  2C80               	goto	u235_27
  5057  0482  0BF2               	decfsz	??i1_Lcd4_Write_Char+1,f
  5058  0483  2C80               	goto	u235_27
  5059  0484  2C85               	nop2
  5060                           
  5061                           ;LCD_screen.c: 98: RC0 = 0;
  5062  0485  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0486  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0487  1007               	bcf	7,0	;volatile
  5065  0488  0008               	return
  5066  0489                     __end_ofi1_Lcd4_Write_Char:	
  5067                           
  5068                           	psect	text36
  5069  0E9E                     __ptext36:	
  5070 ;; *************** function i1_LOG *****************
  5071 ;; Defined at:
  5072 ;;		line 65 in file "misc.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  string          1    wreg     PTR unsigned char 
  5075 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5076 ;;  level           1   12[COMMON] unsigned char 
  5077 ;; Auto vars:     Size  Location     Type
  5078 ;;  string          1   13[COMMON] PTR unsigned char 
  5079 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5080 ;; Return value:  Size  Location     Type
  5081 ;;		None               void
  5082 ;; Registers used:
  5083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5089 ;;      Params:         1       0       0       0
  5090 ;;      Locals:         1       0       0       0
  5091 ;;      Temps:          0       0       0       0
  5092 ;;      Totals:         2       0       0       0
  5093 ;;Total ram usage:        2 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    2
  5096 ;; This function calls:
  5097 ;;		i1_uart_printf
  5098 ;; This function is called by:
  5099 ;;		i1_Lcd4_Write_String
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           
  5104                           ;psect for function i1_LOG
  5105  0E9E                     i1_LOG:	
  5106                           
  5107                           ;incstack = 0
  5108 ;; hardware stack exceeded
  5109                           ; Regs used in i1_LOG: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5110                           ;i1LOG@string stored from wreg
  5111  0E9E  00FD               	movwf	i1LOG@string
  5112                           
  5113                           ;misc.c: 68: {
  5114                           ;misc.c: 69: uart_printf(string);
  5115  0E9F  087D               	movf	i1LOG@string,w
  5116  0EA0  158A  27BA         	fcall	i1_uart_printf
  5117  0EA2  0008               	return
  5118  0EA3                     __end_ofi1_LOG:	
  5119                           
  5120                           	psect	text37
  5121  0FBA                     __ptext37:	
  5122 ;; *************** function i1_uart_printf *****************
  5123 ;; Defined at:
  5124 ;;		line 77 in file "UART.c"
  5125 ;; Parameters:    Size  Location     Type
  5126 ;;  string          1    wreg     PTR unsigned char 
  5127 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5128 ;; Auto vars:     Size  Location     Type
  5129 ;;  string          1    9[COMMON] PTR unsigned char 
  5130 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5131 ;;  uart_printf     2   10[COMMON] int 
  5132 ;; Return value:  Size  Location     Type
  5133 ;;		None               void
  5134 ;; Registers used:
  5135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5136 ;; Tracked objects:
  5137 ;;		On entry : 0/0
  5138 ;;		On exit  : 0/0
  5139 ;;		Unchanged: 0/0
  5140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5141 ;;      Params:         0       0       0       0
  5142 ;;      Locals:         3       0       0       0
  5143 ;;      Temps:          1       0       0       0
  5144 ;;      Totals:         4       0       0       0
  5145 ;;Total ram usage:        4 bytes
  5146 ;; Hardware stack levels used:    1
  5147 ;; Hardware stack levels required when called:    1
  5148 ;; This function calls:
  5149 ;;		i1_strlen
  5150 ;;		i1_uart_putc
  5151 ;; This function is called by:
  5152 ;;		i1_LOG
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           
  5157                           ;psect for function i1_uart_printf
  5158  0FBA                     i1_uart_printf:	
  5159                           
  5160                           ;incstack = 0
  5161 ;; hardware stack exceeded
  5162                           ; Regs used in i1_uart_printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5163                           ;i1uart_printf@string stored from wreg
  5164  0FBA  00F9               	movwf	i1uart_printf@string
  5165                           
  5166                           ;UART.c: 78: int i = 0;
  5167  0FBB  01FA               	clrf	i1uart_printf@i
  5168  0FBC  01FB               	clrf	i1uart_printf@i+1
  5169                           
  5170                           ;UART.c: 79: for (i=0; i<strlen(string); i++){
  5171  0FBD  01FA               	clrf	i1uart_printf@i
  5172  0FBE  01FB               	clrf	i1uart_printf@i+1
  5173  0FBF                     i1l1892:	
  5174  0FBF  0879               	movf	i1uart_printf@string,w
  5175  0FC0  118A  27D2  158A   	fcall	i1_strlen
  5176  0FC3  0871               	movf	?i1_strlen+1,w
  5177  0FC4  027B               	subwf	i1uart_printf@i+1,w
  5178  0FC5  1D03               	skipz
  5179  0FC6  2FC9               	goto	u124_25
  5180  0FC7  0870               	movf	?i1_strlen,w
  5181  0FC8  027A               	subwf	i1uart_printf@i,w
  5182  0FC9                     u124_25:	
  5183  0FC9  1803               	btfsc	3,0
  5184  0FCA  0008               	return
  5185                           
  5186                           ;UART.c: 80: uart_putc(string[i]);
  5187  0FCB  087A               	movf	i1uart_printf@i,w
  5188  0FCC  0779               	addwf	i1uart_printf@string,w
  5189  0FCD  00F8               	movwf	??i1_uart_printf
  5190  0FCE  0878               	movf	??i1_uart_printf,w
  5191  0FCF  0084               	movwf	4
  5192  0FD0  1383               	bcf	3,7	;select IRP bank0
  5193  0FD1  0800               	movf	0,w
  5194  0FD2  158A  26B1  158A   	fcall	i1_uart_putc
  5195  0FD5  3001               	movlw	1
  5196  0FD6  07FA               	addwf	i1uart_printf@i,f
  5197  0FD7  1803               	skipnc
  5198  0FD8  0AFB               	incf	i1uart_printf@i+1,f
  5199  0FD9  3000               	movlw	0
  5200  0FDA  07FB               	addwf	i1uart_printf@i+1,f
  5201  0FDB  2FBF               	goto	i1l1892
  5202  0FDC                     __end_ofi1_uart_printf:	
  5203                           
  5204                           	psect	text38
  5205  0EB1                     __ptext38:	
  5206 ;; *************** function i1_uart_putc *****************
  5207 ;; Defined at:
  5208 ;;		line 69 in file "UART.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  data            1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  data            1    0[COMMON] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5222 ;;      Params:         0       0       0       0
  5223 ;;      Locals:         1       0       0       0
  5224 ;;      Temps:          0       0       0       0
  5225 ;;      Totals:         1       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_isr
  5232 ;;		i1_uart_printf
  5233 ;; This function uses a non-reentrant model
  5234 ;;
  5235                           
  5236                           
  5237                           ;psect for function i1_uart_putc
  5238  0EB1                     i1_uart_putc:	
  5239                           
  5240                           ;incstack = 0
  5241                           ; Regs used in i1_uart_putc: [wreg]
  5242                           ;i1uart_putc@data stored from wreg
  5243  0EB1  00F0               	movwf	i1uart_putc@data
  5244  0EB2                     i1l176:	
  5245                           ;UART.c: 71: continue;
  5246                           
  5247                           ;UART.c: 70: while( ! TXIF)
  5248                           
  5249  0EB2  1283               	bcf	3,5	;RP0=0, select bank0
  5250  0EB3  1303               	bcf	3,6	;RP1=0, select bank0
  5251  0EB4  1E0C               	btfss	12,4	;volatile
  5252  0EB5  2EB2               	goto	i1l176
  5253                           
  5254                           ;UART.c: 72: TXREG = data;
  5255  0EB6  0870               	movf	i1uart_putc@data,w
  5256  0EB7  0099               	movwf	25	;volatile
  5257  0EB8  0008               	return
  5258  0EB9                     __end_ofi1_uart_putc:	
  5259                           
  5260                           	psect	text39
  5261  07D2                     __ptext39:	
  5262 ;; *************** function i1_strlen *****************
  5263 ;; Defined at:
  5264 ;;		line 4 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\strlen.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  s               1    wreg     PTR const unsigned char 
  5267 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  s               1    6[COMMON] PTR const unsigned char 
  5270 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5271 ;;  strlen          1    7[COMMON] PTR const unsigned char 
  5272 ;;		 -> display_player_nbr@string(16), game_phase@time_str(9), isr@string(8), 
  5273 ;; Return value:  Size  Location     Type
  5274 ;;                  2    0[COMMON] unsigned int 
  5275 ;; Registers used:
  5276 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5277 ;; Tracked objects:
  5278 ;;		On entry : 0/0
  5279 ;;		On exit  : 0/0
  5280 ;;		Unchanged: 0/0
  5281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5282 ;;      Params:         2       0       0       0
  5283 ;;      Locals:         2       0       0       0
  5284 ;;      Temps:          4       0       0       0
  5285 ;;      Totals:         8       0       0       0
  5286 ;;Total ram usage:        8 bytes
  5287 ;; Hardware stack levels used:    1
  5288 ;; This function calls:
  5289 ;;		Nothing
  5290 ;; This function is called by:
  5291 ;;		i1_uart_printf
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           
  5296                           ;psect for function i1_strlen
  5297  07D2                     i1_strlen:	
  5298                           
  5299                           ;incstack = 0
  5300 ;; hardware stack exceeded
  5301                           ; Regs used in i1_strlen: [wreg-fsr0h+status,2+status,0]
  5302                           ;i1strlen@s stored from wreg
  5303  07D2  00F6               	movwf	i1strlen@s
  5304  07D3  0876               	movf	i1strlen@s,w
  5305  07D4  00F2               	movwf	??i1_strlen
  5306  07D5  0872               	movf	??i1_strlen,w
  5307  07D6  00F7               	movwf	i1strlen@cp
  5308  07D7                     i1l1862:	
  5309  07D7  0877               	movf	i1strlen@cp,w
  5310  07D8  0084               	movwf	4
  5311  07D9  1383               	bcf	3,7	;select IRP bank0
  5312  07DA  0880               	movf	0,f
  5313  07DB  1903               	btfsc	3,2
  5314  07DC  2FE2               	goto	i1l1864
  5315  07DD  3001               	movlw	1
  5316  07DE  00F2               	movwf	??i1_strlen
  5317  07DF  0872               	movf	??i1_strlen,w
  5318  07E0  07F7               	addwf	i1strlen@cp,f
  5319  07E1  2FD7               	goto	i1l1862
  5320  07E2                     i1l1864:	
  5321  07E2  0876               	movf	i1strlen@s,w
  5322  07E3  00F2               	movwf	??i1_strlen
  5323  07E4  3000               	movlw	0
  5324  07E5  00F3               	movwf	??i1_strlen+1
  5325  07E6  09F2               	comf	??i1_strlen,f
  5326  07E7  09F3               	comf	??i1_strlen+1,f
  5327  07E8  0AF2               	incf	??i1_strlen,f
  5328  07E9  1903               	skipnz
  5329  07EA  0AF3               	incf	??i1_strlen+1,f
  5330  07EB  0877               	movf	i1strlen@cp,w
  5331  07EC  00F4               	movwf	??i1_strlen+2
  5332  07ED  3000               	movlw	0
  5333  07EE  00F5               	movwf	??i1_strlen+3
  5334  07EF  0872               	movf	??i1_strlen,w
  5335  07F0  0774               	addwf	??i1_strlen+2,w
  5336  07F1  00F0               	movwf	?i1_strlen
  5337  07F2  0873               	movf	??i1_strlen+1,w
  5338  07F3  1803               	skipnc
  5339  07F4  0A73               	incf	??i1_strlen+1,w
  5340  07F5  0775               	addwf	??i1_strlen+3,w
  5341  07F6  00F1               	movwf	?i1_strlen+1
  5342  07F7  0008               	return
  5343  07F8                     __end_ofi1_strlen:	
  5344                           
  5345                           	psect	text40
  5346  0738                     __ptext40:	
  5347 ;; *************** function i1_Lcd4_Set_Cursor *****************
  5348 ;; Defined at:
  5349 ;;		line 48 in file "LCD_screen.c"
  5350 ;; Parameters:    Size  Location     Type
  5351 ;;  ligne           1    wreg     unsigned char 
  5352 ;;  pixel_nb        1    4[COMMON] unsigned char 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  ligne           1    9[COMMON] unsigned char 
  5355 ;;  Lcd4_Set_Cur    1   11[COMMON] unsigned char 
  5356 ;;  Lcd4_Set_Cur    1   10[COMMON] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;		None               void
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0, pclath, cstack
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5366 ;;      Params:         1       0       0       0
  5367 ;;      Locals:         3       0       0       0
  5368 ;;      Temps:          4       0       0       0
  5369 ;;      Totals:         8       0       0       0
  5370 ;;Total ram usage:        8 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    2
  5373 ;; This function calls:
  5374 ;;		i1_Lcd4_Cmd
  5375 ;; This function is called by:
  5376 ;;		_isr
  5377 ;;		_game_phase
  5378 ;;		i1_display_player_nbr
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           
  5383                           ;psect for function i1_Lcd4_Set_Cursor
  5384  0738                     i1_Lcd4_Set_Cursor:	
  5385                           
  5386                           ;incstack = 0
  5387 ;; hardware stack exceeded
  5388                           ; Regs used in i1_Lcd4_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  5389                           ;i1Lcd4_Set_Cursor@ligne stored from wreg
  5390  0738  00F9               	movwf	i1Lcd4_Set_Cursor@ligne
  5391                           
  5392                           ;LCD_screen.c: 50: char lCmdMsb,lCmdLsb;
  5393                           ;LCD_screen.c: 51: lCmdMsb = 0x08 | (ligne <<2) | ( ((pixel_nb)& (0x30)) >> 4);
  5394  0739  0874               	movf	i1Lcd4_Set_Cursor@pixel_nb,w
  5395  073A  00F5               	movwf	??i1_Lcd4_Set_Cursor
  5396  073B  3004               	movlw	4
  5397  073C                     u176_25:	
  5398  073C  1003               	clrc
  5399  073D  0CF5               	rrf	??i1_Lcd4_Set_Cursor,f
  5400  073E  3EFF               	addlw	-1
  5401  073F  1D03               	skipz
  5402  0740  2F3C               	goto	u176_25
  5403  0741  3003               	movlw	3
  5404  0742  0575               	andwf	??i1_Lcd4_Set_Cursor,w
  5405  0743  00F6               	movwf	??i1_Lcd4_Set_Cursor+1
  5406  0744  0879               	movf	i1Lcd4_Set_Cursor@ligne,w
  5407  0745  00F7               	movwf	??i1_Lcd4_Set_Cursor+2
  5408  0746  3001               	movlw	1
  5409  0747                     u177_25:	
  5410  0747  1003               	clrc
  5411  0748  0DF7               	rlf	??i1_Lcd4_Set_Cursor+2,f
  5412  0749  3EFF               	addlw	-1
  5413  074A  1D03               	skipz
  5414  074B  2F47               	goto	u177_25
  5415  074C  1003               	clrc
  5416  074D  0D77               	rlf	??i1_Lcd4_Set_Cursor+2,w
  5417  074E  0476               	iorwf	??i1_Lcd4_Set_Cursor+1,w
  5418  074F  3808               	iorlw	8
  5419  0750  00F8               	movwf	??i1_Lcd4_Set_Cursor+3
  5420  0751  0878               	movf	??i1_Lcd4_Set_Cursor+3,w
  5421  0752  00FA               	movwf	i1Lcd4_Set_Cursor@lCmdMsb
  5422                           
  5423                           ;LCD_screen.c: 52: lCmdLsb = pixel_nb & 0x0F;
  5424  0753  0874               	movf	i1Lcd4_Set_Cursor@pixel_nb,w
  5425  0754  390F               	andlw	15
  5426  0755  00F5               	movwf	??i1_Lcd4_Set_Cursor
  5427  0756  0875               	movf	??i1_Lcd4_Set_Cursor,w
  5428  0757  00FB               	movwf	i1Lcd4_Set_Cursor@lCmdLsb
  5429                           
  5430                           ;LCD_screen.c: 53: Lcd4_Cmd(lCmdMsb);
  5431  0758  087A               	movf	i1Lcd4_Set_Cursor@lCmdMsb,w
  5432  0759  158A  2711  118A   	fcall	i1_Lcd4_Cmd
  5433                           
  5434                           ;LCD_screen.c: 54: Lcd4_Cmd(lCmdLsb);
  5435  075C  087B               	movf	i1Lcd4_Set_Cursor@lCmdLsb,w
  5436  075D  158A  2711         	fcall	i1_Lcd4_Cmd
  5437  075F  0008               	return
  5438  0760                     __end_ofi1_Lcd4_Set_Cursor:	
  5439                           
  5440                           	psect	text41
  5441  0F11                     __ptext41:	
  5442 ;; *************** function i1_Lcd4_Cmd *****************
  5443 ;; Defined at:
  5444 ;;		line 33 in file "LCD_screen.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  a               1    wreg     unsigned char 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  a               1    3[COMMON] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;		None               void
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, pclath, cstack
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5458 ;;      Params:         0       0       0       0
  5459 ;;      Locals:         1       0       0       0
  5460 ;;      Temps:          2       0       0       0
  5461 ;;      Totals:         3       0       0       0
  5462 ;;Total ram usage:        3 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; Hardware stack levels required when called:    1
  5465 ;; This function calls:
  5466 ;;		i1_Lcd4_Port
  5467 ;; This function is called by:
  5468 ;;		i1_Lcd4_Set_Cursor
  5469 ;; This function uses a non-reentrant model
  5470 ;;
  5471                           
  5472                           
  5473                           ;psect for function i1_Lcd4_Cmd
  5474  0F11                     i1_Lcd4_Cmd:	
  5475                           
  5476                           ;incstack = 0
  5477 ;; hardware stack exceeded
  5478                           ; Regs used in i1_Lcd4_Cmd: [wreg+status,2+status,0+pclath+cstack]
  5479                           ;i1Lcd4_Cmd@a stored from wreg
  5480  0F11  00F3               	movwf	i1Lcd4_Cmd@a
  5481                           
  5482                           ;LCD_screen.c: 35: RA2 = 0;
  5483  0F12  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0F13  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0F14  1105               	bcf	5,2	;volatile
  5486                           
  5487                           ;LCD_screen.c: 36: Lcd4_Port(a);
  5488  0F15  0873               	movf	i1Lcd4_Cmd@a,w
  5489  0F16  158A  2729  158A   	fcall	i1_Lcd4_Port
  5490                           
  5491                           ;LCD_screen.c: 37: RC0 = 1;
  5492  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0F1B  1407               	bsf	7,0	;volatile
  5495                           
  5496                           ;LCD_screen.c: 38: _delay((unsigned long)((4)*(8000000UL/4000.0)));
  5497  0F1C  300B               	movlw	11
  5498  0F1D  00F2               	movwf	??i1_Lcd4_Cmd+1
  5499  0F1E  3062               	movlw	98
  5500  0F1F  00F1               	movwf	??i1_Lcd4_Cmd
  5501  0F20                     u236_27:	
  5502  0F20  0BF1               	decfsz	??i1_Lcd4_Cmd,f
  5503  0F21  2F20               	goto	u236_27
  5504  0F22  0BF2               	decfsz	??i1_Lcd4_Cmd+1,f
  5505  0F23  2F20               	goto	u236_27
  5506  0F24  0000               	nop
  5507                           
  5508                           ;LCD_screen.c: 39: RC0 = 0;
  5509  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  5510  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  5511  0F27  1007               	bcf	7,0	;volatile
  5512  0F28  0008               	return
  5513  0F29                     __end_ofi1_Lcd4_Cmd:	
  5514                           
  5515                           	psect	text42
  5516  0F29                     __ptext42:	
  5517 ;; *************** function i1_Lcd4_Port *****************
  5518 ;; Defined at:
  5519 ;;		line 11 in file "LCD_screen.c"
  5520 ;; Parameters:    Size  Location     Type
  5521 ;;  a               1    wreg     unsigned char 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  a               1    0[COMMON] unsigned char 
  5524 ;; Return value:  Size  Location     Type
  5525 ;;		None               void
  5526 ;; Registers used:
  5527 ;;		wreg
  5528 ;; Tracked objects:
  5529 ;;		On entry : 0/0
  5530 ;;		On exit  : 0/0
  5531 ;;		Unchanged: 0/0
  5532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5533 ;;      Params:         0       0       0       0
  5534 ;;      Locals:         1       0       0       0
  5535 ;;      Temps:          0       0       0       0
  5536 ;;      Totals:         1       0       0       0
  5537 ;;Total ram usage:        1 bytes
  5538 ;; Hardware stack levels used:    1
  5539 ;; This function calls:
  5540 ;;		Nothing
  5541 ;; This function is called by:
  5542 ;;		i1_Lcd4_Cmd
  5543 ;;		i1_Lcd4_Write_Char
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547                           
  5548                           ;psect for function i1_Lcd4_Port
  5549  0F29                     i1_Lcd4_Port:	
  5550                           
  5551                           ;incstack = 0
  5552 ;; hardware stack exceeded
  5553                           ; Regs used in i1_Lcd4_Port: [wreg]
  5554                           ;i1Lcd4_Port@a stored from wreg
  5555  0F29  00F0               	movwf	i1Lcd4_Port@a
  5556                           
  5557                           ;LCD_screen.c: 13: if(a & 1)
  5558  0F2A  1C70               	btfss	i1Lcd4_Port@a,0
  5559  0F2B  2F30               	goto	i1l222
  5560                           
  5561                           ;LCD_screen.c: 14: RC3 = 1;
  5562  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  5563  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  5564  0F2E  1587               	bsf	7,3	;volatile
  5565  0F2F  2F33               	goto	i1l223
  5566  0F30                     i1l222:	
  5567                           
  5568                           ;LCD_screen.c: 15: else
  5569                           ;LCD_screen.c: 16: RC3 = 0;
  5570  0F30  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0F31  1303               	bcf	3,6	;RP1=0, select bank0
  5572  0F32  1187               	bcf	7,3	;volatile
  5573  0F33                     i1l223:	
  5574                           
  5575                           ;LCD_screen.c: 18: if(a & 2)
  5576  0F33  1CF0               	btfss	i1Lcd4_Port@a,1
  5577  0F34  2F37               	goto	i1l224
  5578                           
  5579                           ;LCD_screen.c: 19: RB4 = 1;
  5580  0F35  1606               	bsf	6,4	;volatile
  5581  0F36  2F38               	goto	i1l225
  5582  0F37                     i1l224:	
  5583                           
  5584                           ;LCD_screen.c: 20: else
  5585                           ;LCD_screen.c: 21: RB4 = 0;
  5586  0F37  1206               	bcf	6,4	;volatile
  5587  0F38                     i1l225:	
  5588                           
  5589                           ;LCD_screen.c: 23: if(a & 4)
  5590  0F38  1D70               	btfss	i1Lcd4_Port@a,2
  5591  0F39  2F3C               	goto	i1l226
  5592                           
  5593                           ;LCD_screen.c: 24: RC6 = 1;
  5594  0F3A  1707               	bsf	7,6	;volatile
  5595  0F3B  2F3D               	goto	i1l227
  5596  0F3C                     i1l226:	
  5597                           
  5598                           ;LCD_screen.c: 25: else
  5599                           ;LCD_screen.c: 26: RC6 = 0;
  5600  0F3C  1307               	bcf	7,6	;volatile
  5601  0F3D                     i1l227:	
  5602                           
  5603                           ;LCD_screen.c: 28: if(a & 8)
  5604  0F3D  1DF0               	btfss	i1Lcd4_Port@a,3
  5605  0F3E  2F41               	goto	i1l228
  5606                           
  5607                           ;LCD_screen.c: 29: RB6 = 1;
  5608  0F3F  1706               	bsf	6,6	;volatile
  5609  0F40  0008               	return
  5610  0F41                     i1l228:	
  5611                           
  5612                           ;LCD_screen.c: 30: else
  5613                           ;LCD_screen.c: 31: RB6 = 0;
  5614  0F41  1306               	bcf	6,6	;volatile
  5615  0F42  0008               	return
  5616  0F43                     __end_ofi1_Lcd4_Port:	
  5617                           
  5618                           	psect	text43
  5619  002E                     __ptext43:	
  5620 ;; *************** function _time_shapping *****************
  5621 ;; Defined at:
  5622 ;;		line 24 in file "misc.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  buffer          1    wreg     PTR unsigned char 
  5625 ;;		 -> game_phase@time_str(9), 
  5626 ;;  time            2    4[BANK0 ] int 
  5627 ;; Auto vars:     Size  Location     Type
  5628 ;;  buffer          1   18[BANK0 ] PTR unsigned char 
  5629 ;;		 -> game_phase@time_str(9), 
  5630 ;;  hours_buf       2   16[BANK0 ] unsigned char [2]
  5631 ;;  minutes_buf     2   14[BANK0 ] unsigned char [2]
  5632 ;;  secondes_buf    2   12[BANK0 ] unsigned char [2]
  5633 ;;  hours           2   10[BANK0 ] int 
  5634 ;;  minutes         2    8[BANK0 ] int 
  5635 ;;  secondes        2    6[BANK0 ] int 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5645 ;;      Params:         0       2       0       0
  5646 ;;      Locals:         0      13       0       0
  5647 ;;      Temps:          1       0       0       0
  5648 ;;      Totals:         1      15       0       0
  5649 ;;Total ram usage:       16 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    2
  5652 ;; This function calls:
  5653 ;;		___awdiv
  5654 ;;		i1___awmod
  5655 ;;		i1_utoa
  5656 ;; This function is called by:
  5657 ;;		_game_phase
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function _time_shapping
  5663  002E                     _time_shapping:	
  5664                           
  5665                           ;incstack = 0
  5666 ;; hardware stack exceeded
  5667                           ; Regs used in _time_shapping: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5668                           ;time_shapping@buffer stored from wreg
  5669  002E  1283               	bcf	3,5	;RP0=0, select bank0
  5670  002F  1303               	bcf	3,6	;RP1=0, select bank0
  5671  0030  00B2               	movwf	time_shapping@buffer
  5672                           
  5673                           ;misc.c: 25: int secondes = time % 60;
  5674  0031  303C               	movlw	60
  5675  0032  00F0               	movwf	i1___awmod@divisor
  5676  0033  3000               	movlw	0
  5677  0034  00F1               	movwf	i1___awmod@divisor+1
  5678  0035  0825               	movf	time_shapping@time+1,w
  5679  0036  01F3               	clrf	i1___awmod@dividend+1
  5680  0037  07F3               	addwf	i1___awmod@dividend+1,f
  5681  0038  0824               	movf	time_shapping@time,w
  5682  0039  01F2               	clrf	i1___awmod@dividend
  5683  003A  07F2               	addwf	i1___awmod@dividend,f
  5684  003B  118A  23F6  118A   	fcall	i1___awmod
  5685  003E  0871               	movf	?i1___awmod+1,w
  5686  003F  1283               	bcf	3,5	;RP0=0, select bank0
  5687  0040  1303               	bcf	3,6	;RP1=0, select bank0
  5688  0041  01A7               	clrf	time_shapping@secondes+1
  5689  0042  07A7               	addwf	time_shapping@secondes+1,f
  5690  0043  0870               	movf	?i1___awmod,w
  5691  0044  01A6               	clrf	time_shapping@secondes
  5692  0045  07A6               	addwf	time_shapping@secondes,f
  5693                           
  5694                           ;misc.c: 26: int minutes = (time%3600)/60;
  5695  0046  303C               	movlw	60
  5696  0047  00F7               	movwf	___awdiv@divisor
  5697  0048  3000               	movlw	0
  5698  0049  00F8               	movwf	___awdiv@divisor+1
  5699  004A  0825               	movf	time_shapping@time+1,w
  5700  004B  01F3               	clrf	i1___awmod@dividend+1
  5701  004C  07F3               	addwf	i1___awmod@dividend+1,f
  5702  004D  0824               	movf	time_shapping@time,w
  5703  004E  01F2               	clrf	i1___awmod@dividend
  5704  004F  07F2               	addwf	i1___awmod@dividend,f
  5705  0050  3010               	movlw	16
  5706  0051  00F0               	movwf	i1___awmod@divisor
  5707  0052  300E               	movlw	14
  5708  0053  00F1               	movwf	i1___awmod@divisor+1
  5709  0054  118A  23F6  118A   	fcall	i1___awmod
  5710  0057  0871               	movf	?i1___awmod+1,w
  5711  0058  01FA               	clrf	___awdiv@dividend+1
  5712  0059  07FA               	addwf	___awdiv@dividend+1,f
  5713  005A  0870               	movf	?i1___awmod,w
  5714  005B  01F9               	clrf	___awdiv@dividend
  5715  005C  07F9               	addwf	___awdiv@dividend,f
  5716  005D  118A  22F8  118A   	fcall	___awdiv
  5717  0060  0878               	movf	?___awdiv+1,w
  5718  0061  1283               	bcf	3,5	;RP0=0, select bank0
  5719  0062  1303               	bcf	3,6	;RP1=0, select bank0
  5720  0063  01A9               	clrf	time_shapping@minutes+1
  5721  0064  07A9               	addwf	time_shapping@minutes+1,f
  5722  0065  0877               	movf	?___awdiv,w
  5723  0066  01A8               	clrf	time_shapping@minutes
  5724  0067  07A8               	addwf	time_shapping@minutes,f
  5725                           
  5726                           ;misc.c: 27: int hours = time / 3600;
  5727  0068  3010               	movlw	16
  5728  0069  00F7               	movwf	___awdiv@divisor
  5729  006A  300E               	movlw	14
  5730  006B  00F8               	movwf	___awdiv@divisor+1
  5731  006C  0825               	movf	time_shapping@time+1,w
  5732  006D  01FA               	clrf	___awdiv@dividend+1
  5733  006E  07FA               	addwf	___awdiv@dividend+1,f
  5734  006F  0824               	movf	time_shapping@time,w
  5735  0070  01F9               	clrf	___awdiv@dividend
  5736  0071  07F9               	addwf	___awdiv@dividend,f
  5737  0072  118A  22F8  118A   	fcall	___awdiv
  5738  0075  0878               	movf	?___awdiv+1,w
  5739  0076  1283               	bcf	3,5	;RP0=0, select bank0
  5740  0077  1303               	bcf	3,6	;RP1=0, select bank0
  5741  0078  01AB               	clrf	time_shapping@hours+1
  5742  0079  07AB               	addwf	time_shapping@hours+1,f
  5743  007A  0877               	movf	?___awdiv,w
  5744  007B  01AA               	clrf	time_shapping@hours
  5745  007C  07AA               	addwf	time_shapping@hours,f
  5746                           
  5747                           ;misc.c: 29: char secondes_buf [2];
  5748                           ;misc.c: 30: utoa (secondes_buf, secondes, 10);
  5749  007D  0827               	movf	time_shapping@secondes+1,w
  5750  007E  01F9               	clrf	i1utoa@val+1
  5751  007F  07F9               	addwf	i1utoa@val+1,f
  5752  0080  0826               	movf	time_shapping@secondes,w
  5753  0081  01F8               	clrf	i1utoa@val
  5754  0082  07F8               	addwf	i1utoa@val,f
  5755  0083  300A               	movlw	10
  5756  0084  00FA               	movwf	i1utoa@base
  5757  0085  3000               	movlw	0
  5758  0086  00FB               	movwf	i1utoa@base+1
  5759  0087  302C               	movlw	time_shapping@secondes_buf& (0+255)
  5760  0088  118A  220B  118A   	fcall	i1_utoa
  5761                           
  5762                           ;misc.c: 31: if (secondes_buf[1] == '\0')
  5763  008B  1283               	bcf	3,5	;RP0=0, select bank0
  5764  008C  1303               	bcf	3,6	;RP1=0, select bank0
  5765  008D  08AD               	movf	time_shapping@secondes_buf+1,f
  5766  008E  1D03               	skipz
  5767  008F  2898               	goto	i1l2358
  5768                           
  5769                           ;misc.c: 32: {
  5770                           ;misc.c: 33: secondes_buf [1] = secondes_buf [0];
  5771  0090  082C               	movf	time_shapping@secondes_buf,w
  5772  0091  00FD               	movwf	??_time_shapping
  5773  0092  087D               	movf	??_time_shapping,w
  5774  0093  00AD               	movwf	time_shapping@secondes_buf+1
  5775                           
  5776                           ;misc.c: 34: secondes_buf [0] = '0';
  5777  0094  3030               	movlw	48
  5778  0095  00FD               	movwf	??_time_shapping
  5779  0096  087D               	movf	??_time_shapping,w
  5780  0097  00AC               	movwf	time_shapping@secondes_buf
  5781  0098                     i1l2358:	
  5782                           
  5783                           ;misc.c: 35: }
  5784                           ;misc.c: 37: char minutes_buf [2];
  5785                           ;misc.c: 38: utoa (minutes_buf, minutes, 10);
  5786  0098  0829               	movf	time_shapping@minutes+1,w
  5787  0099  01F9               	clrf	i1utoa@val+1
  5788  009A  07F9               	addwf	i1utoa@val+1,f
  5789  009B  0828               	movf	time_shapping@minutes,w
  5790  009C  01F8               	clrf	i1utoa@val
  5791  009D  07F8               	addwf	i1utoa@val,f
  5792  009E  300A               	movlw	10
  5793  009F  00FA               	movwf	i1utoa@base
  5794  00A0  3000               	movlw	0
  5795  00A1  00FB               	movwf	i1utoa@base+1
  5796  00A2  302E               	movlw	time_shapping@minutes_buf& (0+255)
  5797  00A3  118A  220B  118A   	fcall	i1_utoa
  5798                           
  5799                           ;misc.c: 39: if (minutes_buf[1] == '\0')
  5800  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  5801  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  5802  00A8  08AF               	movf	time_shapping@minutes_buf+1,f
  5803  00A9  1D03               	skipz
  5804  00AA  28B3               	goto	i1l2364
  5805                           
  5806                           ;misc.c: 40: {
  5807                           ;misc.c: 41: minutes_buf [1] = minutes_buf [0];
  5808  00AB  082E               	movf	time_shapping@minutes_buf,w
  5809  00AC  00FD               	movwf	??_time_shapping
  5810  00AD  087D               	movf	??_time_shapping,w
  5811  00AE  00AF               	movwf	time_shapping@minutes_buf+1
  5812                           
  5813                           ;misc.c: 42: minutes_buf [0] = '0';
  5814  00AF  3030               	movlw	48
  5815  00B0  00FD               	movwf	??_time_shapping
  5816  00B1  087D               	movf	??_time_shapping,w
  5817  00B2  00AE               	movwf	time_shapping@minutes_buf
  5818  00B3                     i1l2364:	
  5819                           
  5820                           ;misc.c: 43: }
  5821                           ;misc.c: 45: char hours_buf [2];
  5822                           ;misc.c: 46: utoa (hours_buf, hours, 10);
  5823  00B3  082B               	movf	time_shapping@hours+1,w
  5824  00B4  01F9               	clrf	i1utoa@val+1
  5825  00B5  07F9               	addwf	i1utoa@val+1,f
  5826  00B6  082A               	movf	time_shapping@hours,w
  5827  00B7  01F8               	clrf	i1utoa@val
  5828  00B8  07F8               	addwf	i1utoa@val,f
  5829  00B9  300A               	movlw	10
  5830  00BA  00FA               	movwf	i1utoa@base
  5831  00BB  3000               	movlw	0
  5832  00BC  00FB               	movwf	i1utoa@base+1
  5833  00BD  3030               	movlw	time_shapping@hours_buf& (0+255)
  5834  00BE  118A  220B  118A   	fcall	i1_utoa
  5835                           
  5836                           ;misc.c: 47: if (hours_buf[1] == '\0')
  5837  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  5838  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  5839  00C3  08B1               	movf	time_shapping@hours_buf+1,f
  5840  00C4  1D03               	skipz
  5841  00C5  28CE               	goto	i1l2370
  5842                           
  5843                           ;misc.c: 48: {
  5844                           ;misc.c: 49: hours_buf [1] = hours_buf [0];
  5845  00C6  0830               	movf	time_shapping@hours_buf,w
  5846  00C7  00FD               	movwf	??_time_shapping
  5847  00C8  087D               	movf	??_time_shapping,w
  5848  00C9  00B1               	movwf	time_shapping@hours_buf+1
  5849                           
  5850                           ;misc.c: 50: hours_buf [0] = '0';
  5851  00CA  3030               	movlw	48
  5852  00CB  00FD               	movwf	??_time_shapping
  5853  00CC  087D               	movf	??_time_shapping,w
  5854  00CD  00B0               	movwf	time_shapping@hours_buf
  5855  00CE                     i1l2370:	
  5856                           
  5857                           ;misc.c: 51: }
  5858                           ;misc.c: 53: buffer [0] = hours_buf [0];
  5859  00CE  0830               	movf	time_shapping@hours_buf,w
  5860  00CF  00FD               	movwf	??_time_shapping
  5861  00D0  0832               	movf	time_shapping@buffer,w
  5862  00D1  0084               	movwf	4
  5863  00D2  087D               	movf	??_time_shapping,w
  5864  00D3  1383               	bcf	3,7	;select IRP bank0
  5865  00D4  0080               	movwf	0
  5866                           
  5867                           ;misc.c: 54: buffer [1] = hours_buf [1];
  5868  00D5  0831               	movf	time_shapping@hours_buf+1,w
  5869  00D6  00FD               	movwf	??_time_shapping
  5870  00D7  0A32               	incf	time_shapping@buffer,w
  5871  00D8  0084               	movwf	4
  5872  00D9  087D               	movf	??_time_shapping,w
  5873  00DA  0080               	movwf	0
  5874                           
  5875                           ;misc.c: 55: buffer [2] = ':';
  5876  00DB  303A               	movlw	58
  5877  00DC  00FD               	movwf	??_time_shapping
  5878  00DD  0832               	movf	time_shapping@buffer,w
  5879  00DE  3E02               	addlw	2
  5880  00DF  0084               	movwf	4
  5881  00E0  087D               	movf	??_time_shapping,w
  5882  00E1  0080               	movwf	0
  5883                           
  5884                           ;misc.c: 56: buffer [3] = minutes_buf [0];
  5885  00E2  082E               	movf	time_shapping@minutes_buf,w
  5886  00E3  00FD               	movwf	??_time_shapping
  5887  00E4  0832               	movf	time_shapping@buffer,w
  5888  00E5  3E03               	addlw	3
  5889  00E6  0084               	movwf	4
  5890  00E7  087D               	movf	??_time_shapping,w
  5891  00E8  0080               	movwf	0
  5892                           
  5893                           ;misc.c: 57: buffer [4] = minutes_buf [1];
  5894  00E9  082F               	movf	time_shapping@minutes_buf+1,w
  5895  00EA  00FD               	movwf	??_time_shapping
  5896  00EB  0832               	movf	time_shapping@buffer,w
  5897  00EC  3E04               	addlw	4
  5898  00ED  0084               	movwf	4
  5899  00EE  087D               	movf	??_time_shapping,w
  5900  00EF  0080               	movwf	0
  5901                           
  5902                           ;misc.c: 58: buffer [5] = ':';
  5903  00F0  303A               	movlw	58
  5904  00F1  00FD               	movwf	??_time_shapping
  5905  00F2  0832               	movf	time_shapping@buffer,w
  5906  00F3  3E05               	addlw	5
  5907  00F4  0084               	movwf	4
  5908  00F5  087D               	movf	??_time_shapping,w
  5909  00F6  0080               	movwf	0
  5910                           
  5911                           ;misc.c: 59: buffer [6] = secondes_buf [0];
  5912  00F7  082C               	movf	time_shapping@secondes_buf,w
  5913  00F8  00FD               	movwf	??_time_shapping
  5914  00F9  0832               	movf	time_shapping@buffer,w
  5915  00FA  3E06               	addlw	6
  5916  00FB  0084               	movwf	4
  5917  00FC  087D               	movf	??_time_shapping,w
  5918  00FD  0080               	movwf	0
  5919                           
  5920                           ;misc.c: 60: buffer [7] = secondes_buf [1];
  5921  00FE  082D               	movf	time_shapping@secondes_buf+1,w
  5922  00FF  00FD               	movwf	??_time_shapping
  5923  0100  0832               	movf	time_shapping@buffer,w
  5924  0101  3E07               	addlw	7
  5925  0102  0084               	movwf	4
  5926  0103  087D               	movf	??_time_shapping,w
  5927  0104  0080               	movwf	0
  5928                           
  5929                           ;misc.c: 61: buffer [8] = '\0';
  5930  0105  0832               	movf	time_shapping@buffer,w
  5931  0106  3E08               	addlw	8
  5932  0107  0084               	movwf	4
  5933  0108  0180               	clrf	0
  5934  0109  0008               	return
  5935  010A                     __end_of_time_shapping:	
  5936                           
  5937                           	psect	text44
  5938  020B                     __ptext44:	
  5939 ;; *************** function i1_utoa *****************
  5940 ;; Defined at:
  5941 ;;		line 17 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\itoa.c"
  5942 ;; Parameters:    Size  Location     Type
  5943 ;;  buf             1    wreg     PTR unsigned char 
  5944 ;;		 -> display_player_nbr@string_player_number(2), time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapp
      +ing@secondes_buf(2), 
  5945 ;;		 -> isr@string(8), 
  5946 ;;  val             2    8[COMMON] unsigned int 
  5947 ;;  base            2   10[COMMON] int 
  5948 ;; Auto vars:     Size  Location     Type
  5949 ;;  buf             1    0[BANK0 ] PTR unsigned char 
  5950 ;;		 -> display_player_nbr@string_player_number(2), time_shapping@hours_buf(2), time_shapping@minutes_buf(2), time_shapp
      +ing@secondes_buf(2), 
  5951 ;;		 -> isr@string(8), 
  5952 ;;  utoa            2    1[BANK0 ] unsigned int 
  5953 ;;  utoa            1    3[BANK0 ] unsigned char 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      PTR unsigned char 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5963 ;;      Params:         4       0       0       0
  5964 ;;      Locals:         0       4       0       0
  5965 ;;      Temps:          1       0       0       0
  5966 ;;      Totals:         5       4       0       0
  5967 ;;Total ram usage:        9 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; Hardware stack levels required when called:    1
  5970 ;; This function calls:
  5971 ;;		i1___lwdiv
  5972 ;;		i1___lwmod
  5973 ;; This function is called by:
  5974 ;;		_isr
  5975 ;;		_time_shapping
  5976 ;;		i1_display_player_nbr
  5977 ;; This function uses a non-reentrant model
  5978 ;;
  5979                           
  5980                           
  5981                           ;psect for function i1_utoa
  5982  020B                     i1_utoa:	
  5983                           
  5984                           ;incstack = 0
  5985 ;; hardware stack exceeded
  5986                           ; Regs used in i1_utoa: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5987                           ;i1utoa@buf stored from wreg
  5988  020B  1283               	bcf	3,5	;RP0=0, select bank0
  5989  020C  1303               	bcf	3,6	;RP1=0, select bank0
  5990  020D  00A0               	movwf	i1utoa@buf
  5991  020E  0879               	movf	i1utoa@val+1,w
  5992  020F  01A2               	clrf	i1utoa@v+1
  5993  0210  07A2               	addwf	i1utoa@v+1,f
  5994  0211  0878               	movf	i1utoa@val,w
  5995  0212  01A1               	clrf	i1utoa@v
  5996  0213  07A1               	addwf	i1utoa@v,f
  5997  0214                     i1l2240:	
  5998  0214  087B               	movf	i1utoa@base+1,w
  5999  0215  01F1               	clrf	i1___lwdiv@divisor+1
  6000  0216  07F1               	addwf	i1___lwdiv@divisor+1,f
  6001  0217  087A               	movf	i1utoa@base,w
  6002  0218  01F0               	clrf	i1___lwdiv@divisor
  6003  0219  07F0               	addwf	i1___lwdiv@divisor,f
  6004  021A  0822               	movf	i1utoa@v+1,w
  6005  021B  01F3               	clrf	i1___lwdiv@dividend+1
  6006  021C  07F3               	addwf	i1___lwdiv@dividend+1,f
  6007  021D  0821               	movf	i1utoa@v,w
  6008  021E  01F2               	clrf	i1___lwdiv@dividend
  6009  021F  07F2               	addwf	i1___lwdiv@dividend,f
  6010  0220  118A  24C9  118A   	fcall	i1___lwdiv
  6011  0223  0871               	movf	?i1___lwdiv+1,w
  6012  0224  1283               	bcf	3,5	;RP0=0, select bank0
  6013  0225  1303               	bcf	3,6	;RP1=0, select bank0
  6014  0226  01A2               	clrf	i1utoa@v+1
  6015  0227  07A2               	addwf	i1utoa@v+1,f
  6016  0228  0870               	movf	?i1___lwdiv,w
  6017  0229  01A1               	clrf	i1utoa@v
  6018  022A  07A1               	addwf	i1utoa@v,f
  6019  022B  3001               	movlw	1
  6020  022C  00FC               	movwf	??i1_utoa
  6021  022D  087C               	movf	??i1_utoa,w
  6022  022E  07A0               	addwf	i1utoa@buf,f
  6023  022F  0822               	movf	i1utoa@v+1,w
  6024  0230  0421               	iorwf	i1utoa@v,w
  6025  0231  1D03               	skipz
  6026  0232  2A14               	goto	i1l2240
  6027  0233  0820               	movf	i1utoa@buf,w
  6028  0234  0084               	movwf	4
  6029  0235  1383               	bcf	3,7	;select IRP bank0
  6030  0236  0180               	clrf	0
  6031  0237  3001               	movlw	1
  6032  0238  02A0               	subwf	i1utoa@buf,f
  6033  0239                     i1l2250:	
  6034  0239  087B               	movf	i1utoa@base+1,w
  6035  023A  01F1               	clrf	i1___lwmod@divisor+1
  6036  023B  07F1               	addwf	i1___lwmod@divisor+1,f
  6037  023C  087A               	movf	i1utoa@base,w
  6038  023D  01F0               	clrf	i1___lwmod@divisor
  6039  023E  07F0               	addwf	i1___lwmod@divisor,f
  6040  023F  0879               	movf	i1utoa@val+1,w
  6041  0240  01F3               	clrf	i1___lwmod@dividend+1
  6042  0241  07F3               	addwf	i1___lwmod@dividend+1,f
  6043  0242  0878               	movf	i1utoa@val,w
  6044  0243  01F2               	clrf	i1___lwmod@dividend
  6045  0244  07F2               	addwf	i1___lwmod@dividend,f
  6046  0245  118A  253D  118A   	fcall	i1___lwmod
  6047  0248  0870               	movf	?i1___lwmod,w
  6048  0249  00FC               	movwf	??i1_utoa
  6049  024A  087C               	movf	??i1_utoa,w
  6050  024B  1283               	bcf	3,5	;RP0=0, select bank0
  6051  024C  1303               	bcf	3,6	;RP1=0, select bank0
  6052  024D  00A3               	movwf	i1utoa@c
  6053  024E  087B               	movf	i1utoa@base+1,w
  6054  024F  01F1               	clrf	i1___lwdiv@divisor+1
  6055  0250  07F1               	addwf	i1___lwdiv@divisor+1,f
  6056  0251  087A               	movf	i1utoa@base,w
  6057  0252  01F0               	clrf	i1___lwdiv@divisor
  6058  0253  07F0               	addwf	i1___lwdiv@divisor,f
  6059  0254  0879               	movf	i1utoa@val+1,w
  6060  0255  01F3               	clrf	i1___lwdiv@dividend+1
  6061  0256  07F3               	addwf	i1___lwdiv@dividend+1,f
  6062  0257  0878               	movf	i1utoa@val,w
  6063  0258  01F2               	clrf	i1___lwdiv@dividend
  6064  0259  07F2               	addwf	i1___lwdiv@dividend,f
  6065  025A  118A  24C9  118A   	fcall	i1___lwdiv
  6066  025D  0871               	movf	?i1___lwdiv+1,w
  6067  025E  01F9               	clrf	i1utoa@val+1
  6068  025F  07F9               	addwf	i1utoa@val+1,f
  6069  0260  0870               	movf	?i1___lwdiv,w
  6070  0261  01F8               	clrf	i1utoa@val
  6071  0262  07F8               	addwf	i1utoa@val,f
  6072  0263  300A               	movlw	10
  6073  0264  1283               	bcf	3,5	;RP0=0, select bank0
  6074  0265  1303               	bcf	3,6	;RP1=0, select bank0
  6075  0266  0223               	subwf	i1utoa@c,w
  6076  0267  1C03               	skipc
  6077  0268  2A6D               	goto	i1l658
  6078  0269  3007               	movlw	7
  6079  026A  00FC               	movwf	??i1_utoa
  6080  026B  087C               	movf	??i1_utoa,w
  6081  026C  07A3               	addwf	i1utoa@c,f
  6082  026D                     i1l658:	
  6083  026D  3030               	movlw	48
  6084  026E  00FC               	movwf	??i1_utoa
  6085  026F  087C               	movf	??i1_utoa,w
  6086  0270  07A3               	addwf	i1utoa@c,f
  6087  0271  0823               	movf	i1utoa@c,w
  6088  0272  00FC               	movwf	??i1_utoa
  6089  0273  0820               	movf	i1utoa@buf,w
  6090  0274  0084               	movwf	4
  6091  0275  087C               	movf	??i1_utoa,w
  6092  0276  1383               	bcf	3,7	;select IRP bank0
  6093  0277  0080               	movwf	0
  6094  0278  3001               	movlw	1
  6095  0279  02A0               	subwf	i1utoa@buf,f
  6096  027A  0879               	movf	i1utoa@val+1,w
  6097  027B  0478               	iorwf	i1utoa@val,w
  6098  027C  1D03               	skipz
  6099  027D  2A39               	goto	i1l2250
  6100                           
  6101                           ;	Return value of i1_utoa is never used
  6102  027E  3001               	movlw	1
  6103  027F  00FC               	movwf	??i1_utoa
  6104  0280  087C               	movf	??i1_utoa,w
  6105  0281  07A0               	addwf	i1utoa@buf,f
  6106  0282  0008               	return
  6107  0283                     __end_ofi1_utoa:	
  6108                           
  6109                           	psect	text45
  6110  053D                     __ptext45:	
  6111 ;; *************** function i1___lwmod *****************
  6112 ;; Defined at:
  6113 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\lwmod.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  divisor         2    0[COMMON] unsigned int 
  6116 ;;  dividend        2    2[COMMON] unsigned int 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  __lwmod         1    5[COMMON] unsigned char 
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  2    0[COMMON] unsigned int 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2, status,0
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6128 ;;      Params:         4       0       0       0
  6129 ;;      Locals:         1       0       0       0
  6130 ;;      Temps:          1       0       0       0
  6131 ;;      Totals:         6       0       0       0
  6132 ;;Total ram usage:        6 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; This function calls:
  6135 ;;		Nothing
  6136 ;; This function is called by:
  6137 ;;		i1_utoa
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           
  6142                           ;psect for function i1___lwmod
  6143  053D                     i1___lwmod:	
  6144                           
  6145                           ;incstack = 0
  6146 ;; hardware stack exceeded
  6147                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
  6148  053D  0871               	movf	i1___lwmod@divisor+1,w
  6149  053E  0470               	iorwf	i1___lwmod@divisor,w
  6150  053F  1903               	skipnz
  6151  0540  2D6A               	goto	i1l2068
  6152  0541  01F5               	clrf	i1___lwmod@counter
  6153  0542  0AF5               	incf	i1___lwmod@counter,f
  6154  0543                     i1l2058:	
  6155  0543  1BF1               	btfsc	i1___lwmod@divisor+1,7
  6156  0544  2D51               	goto	i1l2060
  6157  0545  3001               	movlw	1
  6158  0546                     u152_25:	
  6159  0546  1003               	clrc
  6160  0547  0DF0               	rlf	i1___lwmod@divisor,f
  6161  0548  0DF1               	rlf	i1___lwmod@divisor+1,f
  6162  0549  3EFF               	addlw	-1
  6163  054A  1D03               	skipz
  6164  054B  2D46               	goto	u152_25
  6165  054C  3001               	movlw	1
  6166  054D  00F4               	movwf	??i1___lwmod
  6167  054E  0874               	movf	??i1___lwmod,w
  6168  054F  07F5               	addwf	i1___lwmod@counter,f
  6169  0550  2D43               	goto	i1l2058
  6170  0551                     i1l2060:	
  6171  0551  0871               	movf	i1___lwmod@divisor+1,w
  6172  0552  0273               	subwf	i1___lwmod@dividend+1,w
  6173  0553  1D03               	skipz
  6174  0554  2D57               	goto	u154_25
  6175  0555  0870               	movf	i1___lwmod@divisor,w
  6176  0556  0272               	subwf	i1___lwmod@dividend,w
  6177  0557                     u154_25:	
  6178  0557  1C03               	skipc
  6179  0558  2D5F               	goto	i1l2064
  6180  0559  0870               	movf	i1___lwmod@divisor,w
  6181  055A  02F2               	subwf	i1___lwmod@dividend,f
  6182  055B  0871               	movf	i1___lwmod@divisor+1,w
  6183  055C  1C03               	skipc
  6184  055D  03F3               	decf	i1___lwmod@dividend+1,f
  6185  055E  02F3               	subwf	i1___lwmod@dividend+1,f
  6186  055F                     i1l2064:	
  6187  055F  3001               	movlw	1
  6188  0560                     u155_25:	
  6189  0560  1003               	clrc
  6190  0561  0CF1               	rrf	i1___lwmod@divisor+1,f
  6191  0562  0CF0               	rrf	i1___lwmod@divisor,f
  6192  0563  3EFF               	addlw	-1
  6193  0564  1D03               	skipz
  6194  0565  2D60               	goto	u155_25
  6195  0566  3001               	movlw	1
  6196  0567  02F5               	subwf	i1___lwmod@counter,f
  6197  0568  1D03               	btfss	3,2
  6198  0569  2D51               	goto	i1l2060
  6199  056A                     i1l2068:	
  6200  056A  0873               	movf	i1___lwmod@dividend+1,w
  6201  056B  01F1               	clrf	?i1___lwmod+1
  6202  056C  07F1               	addwf	?i1___lwmod+1,f
  6203  056D  0872               	movf	i1___lwmod@dividend,w
  6204  056E  01F0               	clrf	?i1___lwmod
  6205  056F  07F0               	addwf	?i1___lwmod,f
  6206  0570  0008               	return
  6207  0571                     __end_ofi1___lwmod:	
  6208                           
  6209                           	psect	text46
  6210  04C9                     __ptext46:	
  6211 ;; *************** function i1___lwdiv *****************
  6212 ;; Defined at:
  6213 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\lwdiv.c"
  6214 ;; Parameters:    Size  Location     Type
  6215 ;;  divisor         2    0[COMMON] unsigned int 
  6216 ;;  dividend        2    2[COMMON] unsigned int 
  6217 ;; Auto vars:     Size  Location     Type
  6218 ;;  __lwdiv         2    5[COMMON] unsigned int 
  6219 ;;  __lwdiv         1    7[COMMON] unsigned char 
  6220 ;; Return value:  Size  Location     Type
  6221 ;;                  2    0[COMMON] unsigned int 
  6222 ;; Registers used:
  6223 ;;		wreg, status,2, status,0
  6224 ;; Tracked objects:
  6225 ;;		On entry : 0/0
  6226 ;;		On exit  : 0/0
  6227 ;;		Unchanged: 0/0
  6228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6229 ;;      Params:         4       0       0       0
  6230 ;;      Locals:         3       0       0       0
  6231 ;;      Temps:          1       0       0       0
  6232 ;;      Totals:         8       0       0       0
  6233 ;;Total ram usage:        8 bytes
  6234 ;; Hardware stack levels used:    1
  6235 ;; This function calls:
  6236 ;;		Nothing
  6237 ;; This function is called by:
  6238 ;;		i1_utoa
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           
  6243                           ;psect for function i1___lwdiv
  6244  04C9                     i1___lwdiv:	
  6245                           
  6246                           ;incstack = 0
  6247 ;; hardware stack exceeded
  6248                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
  6249  04C9  01F5               	clrf	i1___lwdiv@quotient
  6250  04CA  01F6               	clrf	i1___lwdiv@quotient+1
  6251  04CB  0871               	movf	i1___lwdiv@divisor+1,w
  6252  04CC  0470               	iorwf	i1___lwdiv@divisor,w
  6253  04CD  1903               	skipnz
  6254  04CE  2D00               	goto	i1l2046
  6255  04CF  01F7               	clrf	i1___lwdiv@counter
  6256  04D0  0AF7               	incf	i1___lwdiv@counter,f
  6257  04D1                     i1l2034:	
  6258  04D1  1BF1               	btfsc	i1___lwdiv@divisor+1,7
  6259  04D2  2CDF               	goto	i1l2036
  6260  04D3  3001               	movlw	1
  6261  04D4                     u145_25:	
  6262  04D4  1003               	clrc
  6263  04D5  0DF0               	rlf	i1___lwdiv@divisor,f
  6264  04D6  0DF1               	rlf	i1___lwdiv@divisor+1,f
  6265  04D7  3EFF               	addlw	-1
  6266  04D8  1D03               	skipz
  6267  04D9  2CD4               	goto	u145_25
  6268  04DA  3001               	movlw	1
  6269  04DB  00F4               	movwf	??i1___lwdiv
  6270  04DC  0874               	movf	??i1___lwdiv,w
  6271  04DD  07F7               	addwf	i1___lwdiv@counter,f
  6272  04DE  2CD1               	goto	i1l2034
  6273  04DF                     i1l2036:	
  6274  04DF  3001               	movlw	1
  6275  04E0                     u147_25:	
  6276  04E0  1003               	clrc
  6277  04E1  0DF5               	rlf	i1___lwdiv@quotient,f
  6278  04E2  0DF6               	rlf	i1___lwdiv@quotient+1,f
  6279  04E3  3EFF               	addlw	-1
  6280  04E4  1D03               	skipz
  6281  04E5  2CE0               	goto	u147_25
  6282  04E6  0871               	movf	i1___lwdiv@divisor+1,w
  6283  04E7  0273               	subwf	i1___lwdiv@dividend+1,w
  6284  04E8  1D03               	skipz
  6285  04E9  2CEC               	goto	u148_25
  6286  04EA  0870               	movf	i1___lwdiv@divisor,w
  6287  04EB  0272               	subwf	i1___lwdiv@dividend,w
  6288  04EC                     u148_25:	
  6289  04EC  1C03               	skipc
  6290  04ED  2CF5               	goto	i1l2042
  6291  04EE  0870               	movf	i1___lwdiv@divisor,w
  6292  04EF  02F2               	subwf	i1___lwdiv@dividend,f
  6293  04F0  0871               	movf	i1___lwdiv@divisor+1,w
  6294  04F1  1C03               	skipc
  6295  04F2  03F3               	decf	i1___lwdiv@dividend+1,f
  6296  04F3  02F3               	subwf	i1___lwdiv@dividend+1,f
  6297  04F4  1475               	bsf	i1___lwdiv@quotient,0
  6298  04F5                     i1l2042:	
  6299  04F5  3001               	movlw	1
  6300  04F6                     u149_25:	
  6301  04F6  1003               	clrc
  6302  04F7  0CF1               	rrf	i1___lwdiv@divisor+1,f
  6303  04F8  0CF0               	rrf	i1___lwdiv@divisor,f
  6304  04F9  3EFF               	addlw	-1
  6305  04FA  1D03               	skipz
  6306  04FB  2CF6               	goto	u149_25
  6307  04FC  3001               	movlw	1
  6308  04FD  02F7               	subwf	i1___lwdiv@counter,f
  6309  04FE  1D03               	btfss	3,2
  6310  04FF  2CDF               	goto	i1l2036
  6311  0500                     i1l2046:	
  6312  0500  0876               	movf	i1___lwdiv@quotient+1,w
  6313  0501  01F1               	clrf	?i1___lwdiv+1
  6314  0502  07F1               	addwf	?i1___lwdiv+1,f
  6315  0503  0875               	movf	i1___lwdiv@quotient,w
  6316  0504  01F0               	clrf	?i1___lwdiv
  6317  0505  07F0               	addwf	?i1___lwdiv,f
  6318  0506  0008               	return
  6319  0507                     __end_ofi1___lwdiv:	
  6320                           
  6321                           	psect	text47
  6322  03F6                     __ptext47:	
  6323 ;; *************** function i1___awmod *****************
  6324 ;; Defined at:
  6325 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\awmod.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  divisor         2    0[COMMON] int 
  6328 ;;  dividend        2    2[COMMON] int 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  __awmod         1    6[COMMON] unsigned char 
  6331 ;;  __awmod         1    5[COMMON] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  2    0[COMMON] int 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6341 ;;      Params:         4       0       0       0
  6342 ;;      Locals:         2       0       0       0
  6343 ;;      Temps:          1       0       0       0
  6344 ;;      Totals:         7       0       0       0
  6345 ;;Total ram usage:        7 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_time_shapping
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           
  6355                           ;psect for function i1___awmod
  6356  03F6                     i1___awmod:	
  6357                           
  6358                           ;incstack = 0
  6359 ;; hardware stack exceeded
  6360                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  6361  03F6  01F6               	clrf	i1___awmod@sign
  6362  03F7  1FF3               	btfss	i1___awmod@dividend+1,7
  6363  03F8  2C00               	goto	i1l2208
  6364  03F9  09F2               	comf	i1___awmod@dividend,f
  6365  03FA  09F3               	comf	i1___awmod@dividend+1,f
  6366  03FB  0AF2               	incf	i1___awmod@dividend,f
  6367  03FC  1903               	skipnz
  6368  03FD  0AF3               	incf	i1___awmod@dividend+1,f
  6369  03FE  01F6               	clrf	i1___awmod@sign
  6370  03FF  0AF6               	incf	i1___awmod@sign,f
  6371  0400                     i1l2208:	
  6372  0400  1FF1               	btfss	i1___awmod@divisor+1,7
  6373  0401  2C07               	goto	i1l2212
  6374  0402  09F0               	comf	i1___awmod@divisor,f
  6375  0403  09F1               	comf	i1___awmod@divisor+1,f
  6376  0404  0AF0               	incf	i1___awmod@divisor,f
  6377  0405  1903               	skipnz
  6378  0406  0AF1               	incf	i1___awmod@divisor+1,f
  6379  0407                     i1l2212:	
  6380  0407  0871               	movf	i1___awmod@divisor+1,w
  6381  0408  0470               	iorwf	i1___awmod@divisor,w
  6382  0409  1903               	skipnz
  6383  040A  2C34               	goto	i1l2230
  6384  040B  01F5               	clrf	i1___awmod@counter
  6385  040C  0AF5               	incf	i1___awmod@counter,f
  6386  040D                     i1l2220:	
  6387  040D  1BF1               	btfsc	i1___awmod@divisor+1,7
  6388  040E  2C1B               	goto	i1l2222
  6389  040F  3001               	movlw	1
  6390  0410                     u182_25:	
  6391  0410  1003               	clrc
  6392  0411  0DF0               	rlf	i1___awmod@divisor,f
  6393  0412  0DF1               	rlf	i1___awmod@divisor+1,f
  6394  0413  3EFF               	addlw	-1
  6395  0414  1D03               	skipz
  6396  0415  2C10               	goto	u182_25
  6397  0416  3001               	movlw	1
  6398  0417  00F4               	movwf	??i1___awmod
  6399  0418  0874               	movf	??i1___awmod,w
  6400  0419  07F5               	addwf	i1___awmod@counter,f
  6401  041A  2C0D               	goto	i1l2220
  6402  041B                     i1l2222:	
  6403  041B  0871               	movf	i1___awmod@divisor+1,w
  6404  041C  0273               	subwf	i1___awmod@dividend+1,w
  6405  041D  1D03               	skipz
  6406  041E  2C21               	goto	u184_25
  6407  041F  0870               	movf	i1___awmod@divisor,w
  6408  0420  0272               	subwf	i1___awmod@dividend,w
  6409  0421                     u184_25:	
  6410  0421  1C03               	skipc
  6411  0422  2C29               	goto	i1l2226
  6412  0423  0870               	movf	i1___awmod@divisor,w
  6413  0424  02F2               	subwf	i1___awmod@dividend,f
  6414  0425  0871               	movf	i1___awmod@divisor+1,w
  6415  0426  1C03               	skipc
  6416  0427  03F3               	decf	i1___awmod@dividend+1,f
  6417  0428  02F3               	subwf	i1___awmod@dividend+1,f
  6418  0429                     i1l2226:	
  6419  0429  3001               	movlw	1
  6420  042A                     u185_25:	
  6421  042A  1003               	clrc
  6422  042B  0CF1               	rrf	i1___awmod@divisor+1,f
  6423  042C  0CF0               	rrf	i1___awmod@divisor,f
  6424  042D  3EFF               	addlw	-1
  6425  042E  1D03               	skipz
  6426  042F  2C2A               	goto	u185_25
  6427  0430  3001               	movlw	1
  6428  0431  02F5               	subwf	i1___awmod@counter,f
  6429  0432  1D03               	btfss	3,2
  6430  0433  2C1B               	goto	i1l2222
  6431  0434                     i1l2230:	
  6432  0434  0876               	movf	i1___awmod@sign,w
  6433  0435  1903               	btfsc	3,2
  6434  0436  2C3C               	goto	i1l2234
  6435  0437  09F2               	comf	i1___awmod@dividend,f
  6436  0438  09F3               	comf	i1___awmod@dividend+1,f
  6437  0439  0AF2               	incf	i1___awmod@dividend,f
  6438  043A  1903               	skipnz
  6439  043B  0AF3               	incf	i1___awmod@dividend+1,f
  6440  043C                     i1l2234:	
  6441  043C  0873               	movf	i1___awmod@dividend+1,w
  6442  043D  01F1               	clrf	?i1___awmod+1
  6443  043E  07F1               	addwf	?i1___awmod+1,f
  6444  043F  0872               	movf	i1___awmod@dividend,w
  6445  0440  01F0               	clrf	?i1___awmod
  6446  0441  07F0               	addwf	?i1___awmod,f
  6447  0442  0008               	return
  6448  0443                     __end_ofi1___awmod:	
  6449                           
  6450                           	psect	text48
  6451  02F8                     __ptext48:	
  6452 ;; *************** function ___awdiv *****************
  6453 ;; Defined at:
  6454 ;;		line 6 in file "C:\CAE_tools\Microchip\xc8\v1.31\sources\common\awdiv.c"
  6455 ;; Parameters:    Size  Location     Type
  6456 ;;  divisor         2    7[COMMON] int 
  6457 ;;  dividend        2    9[COMMON] int 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  quotient        2    2[BANK0 ] int 
  6460 ;;  sign            1    1[BANK0 ] unsigned char 
  6461 ;;  counter         1    0[BANK0 ] unsigned char 
  6462 ;; Return value:  Size  Location     Type
  6463 ;;                  2    7[COMMON] int 
  6464 ;; Registers used:
  6465 ;;		wreg, status,2, status,0
  6466 ;; Tracked objects:
  6467 ;;		On entry : 0/0
  6468 ;;		On exit  : 0/0
  6469 ;;		Unchanged: 0/0
  6470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6471 ;;      Params:         4       0       0       0
  6472 ;;      Locals:         0       4       0       0
  6473 ;;      Temps:          1       0       0       0
  6474 ;;      Totals:         5       4       0       0
  6475 ;;Total ram usage:        9 bytes
  6476 ;; Hardware stack levels used:    1
  6477 ;; This function calls:
  6478 ;;		Nothing
  6479 ;; This function is called by:
  6480 ;;		_time_shapping
  6481 ;; This function uses a non-reentrant model
  6482 ;;
  6483                           
  6484                           
  6485                           ;psect for function ___awdiv
  6486  02F8                     ___awdiv:	
  6487                           
  6488                           ;incstack = 0
  6489 ;; hardware stack exceeded
  6490                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  6491  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  6492  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  6493  02FA  01A1               	clrf	___awdiv@sign
  6494  02FB  1FF8               	btfss	___awdiv@divisor+1,7
  6495  02FC  2B04               	goto	i1l2146
  6496  02FD  09F7               	comf	___awdiv@divisor,f
  6497  02FE  09F8               	comf	___awdiv@divisor+1,f
  6498  02FF  0AF7               	incf	___awdiv@divisor,f
  6499  0300  1903               	skipnz
  6500  0301  0AF8               	incf	___awdiv@divisor+1,f
  6501  0302  01A1               	clrf	___awdiv@sign
  6502  0303  0AA1               	incf	___awdiv@sign,f
  6503  0304                     i1l2146:	
  6504  0304  1FFA               	btfss	___awdiv@dividend+1,7
  6505  0305  2B0F               	goto	i1l2152
  6506  0306  09F9               	comf	___awdiv@dividend,f
  6507  0307  09FA               	comf	___awdiv@dividend+1,f
  6508  0308  0AF9               	incf	___awdiv@dividend,f
  6509  0309  1903               	skipnz
  6510  030A  0AFA               	incf	___awdiv@dividend+1,f
  6511  030B  3001               	movlw	1
  6512  030C  00FB               	movwf	??___awdiv
  6513  030D  087B               	movf	??___awdiv,w
  6514  030E  06A1               	xorwf	___awdiv@sign,f
  6515  030F                     i1l2152:	
  6516  030F  01A2               	clrf	___awdiv@quotient
  6517  0310  01A3               	clrf	___awdiv@quotient+1
  6518  0311  0878               	movf	___awdiv@divisor+1,w
  6519  0312  0477               	iorwf	___awdiv@divisor,w
  6520  0313  1903               	skipnz
  6521  0314  2B46               	goto	i1l2174
  6522  0315  01A0               	clrf	___awdiv@counter
  6523  0316  0AA0               	incf	___awdiv@counter,f
  6524  0317                     i1l2162:	
  6525  0317  1BF8               	btfsc	___awdiv@divisor+1,7
  6526  0318  2B25               	goto	i1l2164
  6527  0319  3001               	movlw	1
  6528  031A                     u169_25:	
  6529  031A  1003               	clrc
  6530  031B  0DF7               	rlf	___awdiv@divisor,f
  6531  031C  0DF8               	rlf	___awdiv@divisor+1,f
  6532  031D  3EFF               	addlw	-1
  6533  031E  1D03               	skipz
  6534  031F  2B1A               	goto	u169_25
  6535  0320  3001               	movlw	1
  6536  0321  00FB               	movwf	??___awdiv
  6537  0322  087B               	movf	??___awdiv,w
  6538  0323  07A0               	addwf	___awdiv@counter,f
  6539  0324  2B17               	goto	i1l2162
  6540  0325                     i1l2164:	
  6541  0325  3001               	movlw	1
  6542  0326                     u171_25:	
  6543  0326  1003               	clrc
  6544  0327  0DA2               	rlf	___awdiv@quotient,f
  6545  0328  0DA3               	rlf	___awdiv@quotient+1,f
  6546  0329  3EFF               	addlw	-1
  6547  032A  1D03               	skipz
  6548  032B  2B26               	goto	u171_25
  6549  032C  0878               	movf	___awdiv@divisor+1,w
  6550  032D  027A               	subwf	___awdiv@dividend+1,w
  6551  032E  1D03               	skipz
  6552  032F  2B32               	goto	u172_25
  6553  0330  0877               	movf	___awdiv@divisor,w
  6554  0331  0279               	subwf	___awdiv@dividend,w
  6555  0332                     u172_25:	
  6556  0332  1C03               	skipc
  6557  0333  2B3B               	goto	i1l2170
  6558  0334  0877               	movf	___awdiv@divisor,w
  6559  0335  02F9               	subwf	___awdiv@dividend,f
  6560  0336  0878               	movf	___awdiv@divisor+1,w
  6561  0337  1C03               	skipc
  6562  0338  03FA               	decf	___awdiv@dividend+1,f
  6563  0339  02FA               	subwf	___awdiv@dividend+1,f
  6564  033A  1422               	bsf	___awdiv@quotient,0
  6565  033B                     i1l2170:	
  6566  033B  3001               	movlw	1
  6567  033C                     u173_25:	
  6568  033C  1003               	clrc
  6569  033D  0CF8               	rrf	___awdiv@divisor+1,f
  6570  033E  0CF7               	rrf	___awdiv@divisor,f
  6571  033F  3EFF               	addlw	-1
  6572  0340  1D03               	skipz
  6573  0341  2B3C               	goto	u173_25
  6574  0342  3001               	movlw	1
  6575  0343  02A0               	subwf	___awdiv@counter,f
  6576  0344  1D03               	btfss	3,2
  6577  0345  2B25               	goto	i1l2164
  6578  0346                     i1l2174:	
  6579  0346  0821               	movf	___awdiv@sign,w
  6580  0347  1903               	btfsc	3,2
  6581  0348  2B4E               	goto	i1l2178
  6582  0349  09A2               	comf	___awdiv@quotient,f
  6583  034A  09A3               	comf	___awdiv@quotient+1,f
  6584  034B  0AA2               	incf	___awdiv@quotient,f
  6585  034C  1903               	skipnz
  6586  034D  0AA3               	incf	___awdiv@quotient+1,f
  6587  034E                     i1l2178:	
  6588  034E  0823               	movf	___awdiv@quotient+1,w
  6589  034F  01F8               	clrf	?___awdiv+1
  6590  0350  07F8               	addwf	?___awdiv+1,f
  6591  0351  0822               	movf	___awdiv@quotient,w
  6592  0352  01F7               	clrf	?___awdiv
  6593  0353  07F7               	addwf	?___awdiv,f
  6594  0354  0008               	return
  6595  0355                     __end_of___awdiv:	
  6596  007E                     btemp	set	126	;btemp
  6597  007E                     wtemp	set	126
  6598  007E                     wtemp0	set	126
  6599  0080                     wtemp1	set	128
  6600  0082                     wtemp2	set	130
  6601  0084                     wtemp3	set	132
  6602  0086                     wtemp4	set	134
  6603  0088                     wtemp5	set	136
  6604  007F                     wtemp6	set	127
  6605  007E                     ttemp	set	126
  6606  007E                     ttemp0	set	126
  6607  0081                     ttemp1	set	129
  6608  0084                     ttemp2	set	132
  6609  0087                     ttemp3	set	135
  6610  007F                     ttemp4	set	127
  6611  007E                     ltemp	set	126
  6612  007E                     ltemp0	set	126
  6613  0082                     ltemp1	set	130
  6614  0086                     ltemp2	set	134
  6615  0080                     ltemp3	set	128


Data Sizes:
    Strings     21
    Constant    0
    Data        2
    BSS         49
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      52
    BANK1            80     54      57
    BANK2            80      0      40

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), isr@string(BANK0[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), isr@string(BANK0[8]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_2(CODE[8]), STR_1(CODE[13]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcat@from	PTR const unsigned char  size(1) Largest target is 2
		 -> display_player_nbr@string_player_number(BANK1[2]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 8
		 -> display_player_nbr@string_player_number(BANK1[2]), time_shapping@hours_buf(BANK0[2]), time_shapping@minutes_buf(BANK0[2]), time_shapping@secondes_buf(BANK0[2]), 
		 -> isr@string(BANK0[8]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    sp__strcat	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    gcurrent_player.next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 

    gcurrent_player	PTR struct player_t size(1) Largest target is 50
		 -> NULL(NULL[0]), player_array(BANK2[40]), 

    S198player_t$next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 

    player_array.next_player	PTR struct player_t size(1) Largest target is 50
		 -> player_array(BANK2[40]), 

    Lcd4_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), isr@string(BANK0[8]), 

    uart_printf@string	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), isr@string(BANK0[8]), 

    LOG@string	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), game_phase@time_str(BANK0[9]), isr@string(BANK0[8]), 

    time_shapping@buffer	PTR unsigned char  size(1) Largest target is 9
		 -> game_phase@time_str(BANK0[9]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 16
		 -> display_player_nbr@string(BANK1[16]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 8
		 -> display_player_nbr@string_player_number(BANK1[2]), time_shapping@hours_buf(BANK0[2]), time_shapping@minutes_buf(BANK0[2]), time_shapping@secondes_buf(BANK0[2]), 
		 -> isr@string(BANK0[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _game_phase->_time_shapping
    i1_Lcd4_Write_String->i1_LOG
    i1_Lcd4_Write_Char->i1_Lcd4_Port
    i1_LOG->i1_uart_printf
    i1_uart_printf->i1_strlen
    i1_Lcd4_Set_Cursor->i1_Lcd4_Cmd
    i1_Lcd4_Cmd->i1_Lcd4_Port
    _time_shapping->i1_utoa
    i1_utoa->i1___lwdiv
    ___awdiv->i1___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->_game_phase
    _switch_player->i1_display_player_nbr
    i1_display_player_nbr->i1_Lcd4_Write_String
    i1_display_player_nbr->i1_utoa
    _game_phase->_time_shapping
    _time_shapping->___awdiv
    _time_shapping->i1_utoa

Critical Paths under _main in BANK1

    _main->_initiate_game
    _system_init->_Lcd4_Init
    _Lcd4_Init->_Lcd4_Cmd
    _Lcd4_Clear->_Lcd4_Cmd
    _initiate_game->_display_player_nbr
    _display_player_nbr->_Lcd4_Write_String
    _utoa->___lwdiv
    _Lcd4_Write_String->_LOG
    _Lcd4_Write_Char->_Lcd4_Port
    _LOG->_uart_printf
    _uart_printf->_strlen
    _Lcd4_Set_Cursor->_Lcd4_Cmd
    _Lcd4_Cmd->_Lcd4_Port

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    4807
                                             50 BANK1      4     4      0
                      _initiate_game
                             _strcpy
                        _system_init
                        _uart_printf
 ---------------------------------------------------------------------------------
 (1) _system_init                                          3     3      0     220
                                              6 BANK1      3     3      0
                _ConfigureOscillator
                          _Lcd4_Init
                           _initUart
                     _init_interrupt
                       _init_timer_0
                       _init_timer_2
 ---------------------------------------------------------------------------------
 (2) _init_timer_2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_0                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initUart                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Lcd4_Init                                            2     2      0     220
                                              4 BANK1      2     2      0
                         _Lcd4_Clear
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Clear                                           0     0      0     110
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (2) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initiate_game                                       11     8      3    4024
                                             39 BANK1     11     8      3
                            ___awmod
                 _display_player_nbr
 ---------------------------------------------------------------------------------
 (2) _display_player_nbr                                  21    21      0    3186
                                             18 BANK1     21    21      0
                    _Lcd4_Set_Cursor
                  _Lcd4_Write_String
                             _strcat
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     5      4    1505
                                              8 BANK1      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4     265
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     374
                                              0 BANK1      8     4      4
 ---------------------------------------------------------------------------------
 (1) _strcpy                                               4     3      1     235
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _strcat                                               4     3      1     178
                                              0 BANK1      4     3      1
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Write_String                                    4     4      0     779
                                             14 BANK1      4     4      0
                                _LOG
                    _Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd4_Write_Char                                      5     5      0     178
                                              1 BANK1      5     5      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (4) _LOG                                                  2     1      1     408
                                             12 BANK1      2     1      1
                        _uart_printf
 ---------------------------------------------------------------------------------
 (1) _uart_printf                                          4     4      0     284
                                              8 BANK1      4     4      0
                             _strlen
                          _uart_putc
 ---------------------------------------------------------------------------------
 (2) _uart_putc                                            1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _strlen                                               8     6      2     117
                                              0 BANK1      8     6      2
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Set_Cursor                                      8     7      1     329
                                              4 BANK1      8     7      1
                           _Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd4_Cmd                                             3     3      0     110
                                              1 BANK1      3     3      0
                          _Lcd4_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd4_Port                                            1     1      0      88
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     510
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 21    21      0    8073
                                             32 BANK0     12    12      0
                         _game_phase
          _set_tick_period_timer1_us
                      _switch_player
                          _uart_getc
                  i1_Lcd4_Set_Cursor
                i1_Lcd4_Write_String
                        i1_uart_putc
                             i1_utoa
 ---------------------------------------------------------------------------------
 (8) _uart_getc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _switch_player                                        1     1      0    2259
                                             25 BANK0      1     1      0
               i1_display_player_nbr
 ---------------------------------------------------------------------------------
 (9) i1_display_player_nbr                                21    21      0    2259
                                              4 BANK0     21    21      0
                  i1_Lcd4_Set_Cursor
                i1_Lcd4_Write_String
                           i1_strcat
                           i1_strcpy
                             i1_utoa
 ---------------------------------------------------------------------------------
 (11) i1_strcpy                                            4     3      1     101
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (10) i1_strcat                                            4     3      1     124
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (8) _set_tick_period_timer1_us                            4     2      2      75
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _game_phase                                          13    13      0    3755
                                             19 BANK0     13    13      0
                      _time_shapping
                  i1_Lcd4_Set_Cursor
                i1_Lcd4_Write_String
 ---------------------------------------------------------------------------------
 (8) i1_Lcd4_Write_String                                  4     4      0     563
                                              0 BANK0      4     4      0
                              i1_LOG
                  i1_Lcd4_Write_Char
 ---------------------------------------------------------------------------------
 (9) i1_Lcd4_Write_Char                                    5     5      0     178
                                              1 COMMON     5     5      0
                        i1_Lcd4_Port
 ---------------------------------------------------------------------------------
 (9) i1_LOG                                                2     1      1     273
                                             12 COMMON     2     1      1
                      i1_uart_printf
 ---------------------------------------------------------------------------------
 (10) i1_uart_printf                                       4     4      0     203
                                              8 COMMON     4     4      0
                           i1_strlen
                        i1_uart_putc
 ---------------------------------------------------------------------------------
 (8) i1_uart_putc                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) i1_strlen                                            8     6      2      90
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (8) i1_Lcd4_Set_Cursor                                    8     7      1     300
                                              4 COMMON     8     7      1
                         i1_Lcd4_Cmd
 ---------------------------------------------------------------------------------
 (9) i1_Lcd4_Cmd                                           3     3      0     110
                                              1 COMMON     3     3      0
                        i1_Lcd4_Port
 ---------------------------------------------------------------------------------
 (10) i1_Lcd4_Port                                         1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _time_shapping                                       16    14      2    2799
                                             13 COMMON     1     1      0
                                              4 BANK0     15    13      2
                            ___awdiv
                          i1___awmod
                             i1_utoa
 ---------------------------------------------------------------------------------
 (8) i1_utoa                                               9     5      4    1039
                                              8 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___lwdiv
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (9) i1___lwmod                                            6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (9) i1___lwdiv                                            8     4      4     266
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (10) i1___awmod                                           7     3      4     400
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) ___awdiv                                             9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                          i1___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initiate_game
     ___awmod
     _display_player_nbr
       _Lcd4_Set_Cursor
         _Lcd4_Cmd
           _Lcd4_Port
       _Lcd4_Write_String
         _LOG
           _uart_printf
             _strlen
             _uart_putc
         _Lcd4_Write_Char
           _Lcd4_Port
       _strcat
       _strcpy
       _utoa
         ___lwdiv
         ___lwmod
   _strcpy
   _system_init
     _ConfigureOscillator
     _Lcd4_Init
       _Lcd4_Clear
         _Lcd4_Cmd
           _Lcd4_Port
       _Lcd4_Cmd
         _Lcd4_Port
     _initUart
     _init_interrupt
     _init_timer_0
     _init_timer_2
   _uart_printf
     _strlen
     _uart_putc

 _isr (ROOT)
   _game_phase
     _time_shapping
       ___awdiv
         i1___awmod (ARG)
       i1___awmod
       i1_utoa
         i1___lwdiv
         i1___lwmod
     i1_Lcd4_Set_Cursor
       i1_Lcd4_Cmd
         i1_Lcd4_Port
     i1_Lcd4_Write_String
       i1_LOG
         i1_uart_printf
           i1_strlen
           i1_uart_putc
       i1_Lcd4_Write_Char
         i1_Lcd4_Port
   _set_tick_period_timer1_us
   _switch_player
     i1_display_player_nbr
       i1_Lcd4_Set_Cursor
         i1_Lcd4_Cmd
           i1_Lcd4_Port
       i1_Lcd4_Write_String
         i1_LOG
           i1_uart_printf
             i1_strlen
             i1_uart_putc
         i1_Lcd4_Write_Char
           i1_Lcd4_Port
       i1_strcat
       i1_strcpy
       i1_utoa
         i1___lwdiv
         i1___lwmod
   _uart_getc
   i1_Lcd4_Set_Cursor
     i1_Lcd4_Cmd
       i1_Lcd4_Port
   i1_Lcd4_Write_String
     i1_LOG
       i1_uart_printf
         i1_strlen
         i1_uart_putc
     i1_Lcd4_Write_Char
       i1_Lcd4_Port
   i1_uart_putc
   i1_utoa
     i1___lwdiv
     i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               50      0      28       7       50.0%
BITBANK2            50      0       0       6        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     36      39       5       71.3%
BITBANK1            50      0       0       4        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      34       3       65.0%
BITBANK0            50      0       0       9        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A3      10        0.0%
ABS                  0      0      A3       8        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Tue Jun 17 00:15:31 2014

                                       pc 0002                       __end_ofi1_uart_putc 0EB9  
                             __CFG_CP$OFF 0000                         ??_Lcd4_Write_Char 00A1  
                        ??_init_interrupt 00A0                              ___awdiv@sign 0021  
                                      fsr 0004                       __end_of_system_init 06E8  
                                     l101 0EBE                                       l222 066C  
                                     l223 066F                                       l224 0677  
                                     l225 067A                                       l226 0682  
                                     l227 0685                                       l228 068D  
                                     l176 0ED6                                       l658 01F5  
                                     _RA2 002A                                       _RC0 0038  
                                     _RA5 002D                                       _RC2 003A  
                                     _RB4 0034                                       _RC3 003B  
                                     _RB6 0036                                       _RC6 003E  
                                     _LOG 0EA3                                       _PR2 0092  
                            __CFG_CPD$OFF 0000                                       _isr 0283  
                                     fsr0 0004                                       indf 0000  
                         ??_time_shapping 007D                              ___awmod@sign 00A6  
                   __end_ofi1_uart_printf 0FDC                              __CFG_IESO$ON 0000  
                              _Lcd4_Clear 0EC1                         _Lcd4_Write_String 0786  
              __size_ofi1_Lcd4_Write_Char 0046                                      ?_LOG 00AC  
            __end_ofi1_display_player_nbr 0635                        ?_Lcd4_Write_String 0070  
                     i1uart_printf@string 0079                                      l2116 078B  
                                    l2132 0767                                      l2124 0F84  
                                    l2118 07A7                                      l2134 0772  
                                    l2136 077A                                      l2402 03B3  
                                    l2074 019C                                      l2420 03DC  
                                    l2084 01C1                                      l2414 03C0  
                                    l2406 03BA                                      l2416 03CE  
                                    l2424 03E7                                      l2428 03EF  
                                    l2550 064D                                      l1850 0722  
                                    l2484 010F                                      l1950 0493  
                                    l2486 0174                                      l1848 0717  
                                    l1952 04A1                                      l1874 06EF  
                                    l1962 04C2                                      l1980 052B  
                                    l1958 04B7                                      l1974 050F  
                                    l1976 051D                                      l1984 0536  
                                    ?_isr 0070                                      STR_1 0806  
                                    STR_2 0813                                      u2015 03C3  
                                    u2105 0132                                      u2035 03D4  
                                    u1315 0496                                      u2115 0154  
                                    u2045 03DD                                      u1405 0523  
                                    u2125 0160                                      u1335 04A2  
                                    u1415 052C                                      u2135 0118  
                                    u1345 04AE                                      u1195 06FB  
                                    u2307 0387                                      u1355 04B8  
                                    u1605 0697                                      u2317 039E  
                                    u2327 0F74                                      u1615 06A2  
                                    u1295 036A                                      u2095 011F  
                                    u1385 0512                                      u2257 065B  
                                    u2267 06DE                                      u2277 05AE  
                                    u2287 05CD                                      u2297 0379  
                                    i1l40 0294                                      i1l42 02EB  
                                    i1l43 02D0                                      _RCIF 0065  
                                    _TMR0 0001                                      _TMR1 000E  
                                    _TXIF 0064                             __CFG_FCMEN$ON 0000  
                                    _main 0635                                      btemp 007E  
                                    _utoa 0193                       ??_Lcd4_Write_String 00AE  
                           __CFG_BOREN$ON 0000                                      ltemp 007E  
                                    start 0011                                      ttemp 007E  
                                    wtemp 007E                            i1uart_printf@i 007A  
                           __CFG_MCLRE$ON 0000                                     ??_LOG 00AD  
                                   ??_isr 0040                        game_phase@time_str 0035  
                             ?i1_Lcd4_Cmd 0070                                     ?_main 0070  
                         __end_of___awdiv 0355                             __CFG_WDTE$OFF 0000  
                         __end_of___awmod 03F6                 _set_tick_period_timer1_us 0EE0  
                                   _ANSEL 011E                                     ?_utoa 00A8  
                         ___awdiv@divisor 0077                           __end_of___lwdiv 04C9  
                                   i1l222 0F30                                     i1l223 0F33  
                                   i1l224 0F37                                     i1l225 0F38  
                                   i1l226 0F3C                                     i1l227 0F3D  
                                   i1l228 0F41                                     i1l176 0EB2  
                         __end_of___lwmod 053D                                     i1l189 0ECF  
                                   i1l658 026D                           ___awdiv@counter 0020  
               __end_of_Lcd4_Write_String 07AC                                     _RCREG 001A  
                                   i1_LOG 0E9E                                     _SPBRG 0099  
                                   _PORTA 0005                                     _PORTB 0006  
                                   _PORTC 0007                                     _TRISA 0085  
                                   _TRISB 0086                                     _TRISC 0087  
                                   _TXREG 0019                       _ConfigureOscillator 0EB9  
                      i1___lwmod@dividend 0072                            i1___awmod@sign 0076  
                         _timer1_tick_nbr 0050                                     pclath 000A  
                                   ltemp0 007E                                     ltemp1 0082  
                                   ltemp2 0086                                     ltemp3 0080  
                         _timer2_tick_nbr 0052                          __end_of_Lcd4_Cmd 0F7D  
                                   ttemp0 007E                                     ttemp1 0081  
                                   ttemp2 0084                                     ttemp3 0087  
                                   ttemp4 007F                                     utoa@c 00AF  
                                   utoa@v 00AD                                     status 0003  
                                   wtemp0 007E                                     wtemp1 0080  
                                   wtemp2 0082                                     wtemp3 0084  
                                   wtemp4 0086                                     wtemp5 0088  
                                   wtemp6 007F                        __size_ofi1___awmod 004D  
                      __size_ofi1___lwdiv 003E                        __size_ofi1___lwmod 0034  
                             i1_uart_putc 0EB1                      ?_ConfigureOscillator 0070  
                         i1uart_putc@data 0070                          __end_ofi1_strcat 1000  
                        __end_ofi1_strcpy 0F5F                          __end_ofi1_strlen 07F8  
                         __initialization 0013                        __size_of_Lcd4_Init 0031  
                             _system_init 06BD                        __size_of_Lcd4_Port 002E  
                            __end_of_main 0663                              __end_of_utoa 020B  
                              i1utoa@base 007A                                i1strcat@cp 0073  
                              i1strcat@to 0072                                    ??_main 00D2  
                              i1strcpy@cp 0073                                i1strlen@cp 0077  
                              i1strcpy@to 0072                                    ??_utoa 00AC  
                                  ?i1_LOG 007C                           _Lcd4_Set_Cursor 0691  
            __size_ofi1_Lcd4_Write_String 0026                               ?_Lcd4_Clear 0070  
                       time_shapping@time 0024                              ?i1_Lcd4_Port 0070  
                        ___awdiv@dividend 0079                                    _ANSELH 011F  
                        Lcd4_Write_Char@a 00A5                          Lcd4_Write_Char@y 00A4  
                                  i1l2042 04F5                                    i1l2034 04D1  
                                  i1l2220 040D                                    i1l2212 0407  
                                  i1l2036 04DF                                    i1l2060 0551  
                                  i1l2222 041B                                    i1l2230 0434  
                                  i1l2046 0500                                    i1l2152 030F  
                                  i1l2208 0400                                    i1l2064 055F  
                                  i1l2240 0214                                    i1l2170 033B  
                                  i1l2162 0317                                    i1l2146 0304  
                                  i1l2234 043C                                    i1l2226 0429  
                                  i1l2058 0543                                    i1l2250 0239  
                                  i1l2164 0325                                    i1l2068 056A  
                                  i1l2174 0346                                    i1l2502 028A  
                                  i1l2272 0FE1                                    i1l2178 034E  
                                  i1l2370 00CE                                    i1l2274 0FEC  
                                  i1l2282 0F48                                    i1l2364 00B3  
                                  i1l2196 07B1                                    i1l2276 0FF4  
                                  i1l2358 0098                                    i1l2198 07CD  
                                  i1l1862 07D7                                    i1l1864 07E2  
                                  i1l1892 0FBF                                    u124_25 0FC9  
                                  u143_25 0454                                    u152_25 0546  
                                  u145_25 04D4                                    u217_25 02AC  
                                  u233_27 0461                                    u154_25 0557  
                                  u234_27 046D                                    u171_25 0326  
                                  u147_25 04E0                                    u155_25 0560  
                                  u235_27 0480                                    u172_25 0332  
                                  u148_25 04EC                                    u236_27 0F20  
                                  u173_25 033C                                    u149_25 04F6  
                                  u182_25 0410                                    u184_25 0421  
                                  u176_25 073C                                    u169_25 031A  
                                  u185_25 042A                                    u177_25 0747  
                                  _TMR1IF 0060                                    _TMR2IF 0061  
                                  _SPBRGH 009A                                    _TMR2ON 0092  
              __end_of_display_player_nbr 0606                       __size_ofi1_Lcd4_Cmd 0018  
                   ??_ConfigureOscillator 00A0                                    i1_utoa 020B  
                          __CFG_PWRTE$OFF 0000                             ?_init_timer_0 0070  
                           ?_init_timer_2 0070                    __size_of_switch_player 0014  
                               ??___awdiv 007B                                 ??___awmod 00A4  
                               ??___lwdiv 00A4                                 ??___lwmod 00A4  
                    i1_display_player_nbr 0606                          __end_of_initUart 0FBA  
                        ___awdiv@quotient 0022                           ___awmod@divisor 00A0  
                         ___awmod@counter 00A5                                    _strcat 0760  
                                  _strcpy 0F7D                                    _strlen 0710  
                       __end_ofi1___awmod 0443                __size_of_Lcd4_Write_String 0026  
                       __end_ofi1___lwdiv 0507                         __end_ofi1___lwmod 0571  
                            ?_uart_printf 0070                                    saved_w 007E  
                  __size_of_initiate_game 0089                         __end_of_Lcd4_Init 05D5  
                       __end_of_Lcd4_Port 0691                   __end_of__initialization 002B  
                         _Lcd4_Write_Char 0355                           _gcurrent_player 00D8  
                          ??_init_timer_0 00A0                            ??_init_timer_2 00A0  
                           __end_ofi1_LOG 0EA3                            __pcstackCOMMON 0070  
                     __size_of_Lcd4_Clear 0008                              __pidataBANK1 0002  
                   ?i1_display_player_nbr 0070                   __end_of_Lcd4_Set_Cursor 06BD  
                               ?_Lcd4_Cmd 0070                                   ??i1_LOG 007D  
                          _OPTION_REGbits 0081                             _switch_player 0EFD  
                               ?i1_strcat 0070                                 ?i1_strcpy 0070  
                               ?i1_strlen 0070        __size_of_set_tick_period_timer1_us 000E  
                              __pbssBANK0 004C                                __pbssBANK1 00D8  
                              __pbssBANK2 0120                                 LOG@string 00AD  
                                 ?i1_utoa 0078                                __pmaintext 0635  
                      time_shapping@hours 002A                                _game_phase 0571  
                           _initiate_game 010A                      time_shapping@minutes 0028  
                              __pintentry 0004                                _ggame_time 004E  
                            ??i1_Lcd4_Cmd 0071                                   ?_strcat 00A0  
                                 ?_strcpy 00A0                                   ?_strlen 00A0  
                  time_shapping@hours_buf 0030                            ?_switch_player 0070  
                      __size_of_uart_getc 000A                                ??_Lcd4_Cmd 00A1  
                      __size_of_uart_putc 000D                        i1Lcd4_Write_Char@a 0075  
                      i1Lcd4_Write_Char@y 0074                                ??i1_strcat 0071  
                   __end_of_time_shapping 010A                                ??i1_strcpy 0071  
                              ??i1_strlen 0072                   __end_of_Lcd4_Write_Char 03A7  
                              __stringtab 0800                      __size_ofi1_Lcd4_Port 001A  
       __end_of_set_tick_period_timer1_us 0EEE                                 ?_initUart 0070  
                              _glog_level 00D6                              ?i1_uart_putc 0070  
                      __end_ofi1_Lcd4_Cmd 0F29                                   i1utoa@c 0023  
                                 i1utoa@v 0021                           __size_ofi1_utoa 0078  
                          ?_initiate_game 00C7                       i1_Lcd4_Write_String 07AC  
                  __size_ofi1_uart_printf 0022                              ?_system_init 0070  
                  ??i1_display_player_nbr 0024                                   ___awdiv 02F8  
                                 ___awmod 03A7                                   ___lwdiv 0489  
                                 ___lwmod 0507                          ?_Lcd4_Set_Cursor 00A4  
                                 __ptext1 06BD                                   __ptext2 0EEE  
                                 __ptext3 0EAA                                   __ptext4 0E9B  
                                 __ptext5 0F9B                                   __ptext6 05A4  
                                 __ptext7 0EC1                                   __ptext8 0EB9  
                                 __ptext9 010A                           __size_of_strcat 0026  
                               Lcd4_Cmd@a 00A3                              __size_of_LOG 0007  
                         __size_of_strcpy 001E                           __size_of_strlen 0028  
                               _T1CONbits 0010                         i1___lwdiv@divisor 0070  
                               _T2CONbits 0012                              __size_of_isr 0075  
                       i1___lwdiv@counter 0077                      __end_of_init_timer_0 0EB1  
                    __end_of_init_timer_2 0EFD                  display_player_nbr@string 00B4  
                        ___awmod@dividend 00A2                       Lcd4_Write_Char@temp 00A3  
                    ?i1_Lcd4_Write_String 0070                              ??_Lcd4_Clear 00A4  
                            _elapsed_time 004C                  i1Lcd4_Set_Cursor@lCmdLsb 007B  
                i1Lcd4_Set_Cursor@lCmdMsb 007A                   __size_of_init_interrupt 0003  
                    __size_of_uart_printf 0028                                   clrloop0 07F9  
                    end_of_initialization 002B                  time_shapping@minutes_buf 002E  
                              ??_initUart 00A0                         __end_of_uart_getc 0ED3  
                       __end_of_uart_putc 0EE0                               ?_game_phase 0070  
                               _RCSTAbits 0018                        __end_of_Lcd4_Clear 0EC9  
                                 utoa@buf 00B0                i1display_player_nbr@string 0026  
                                 utoa@val 00A8                        _display_player_nbr 05D5  
                                 strlen@s 00A6                           ??_switch_player 0039  
               time_shapping@secondes_buf 002C                   Lcd4_Set_Cursor@pixel_nb 00A4  
                   ??i1_Lcd4_Write_String 0020                       ?_display_player_nbr 0070  
                               _TRISBbits 0086                             i1_uart_printf 0FBA  
                               i1___awmod 03F6                      i1Lcd4_Write_String@a 0021  
                    i1Lcd4_Write_String@i 0022                                 i1___lwdiv 04C9  
                               i1___lwmod 053D                          ?_Lcd4_Write_Char 0070  
             __end_of_ConfigureOscillator 0EC1                 i1Lcd4_Set_Cursor@pixel_nb 0074  
                               _Lcd4_Init 05A4                                 _Lcd4_Port 0663  
                               _TXSTAbits 0098                  game_phase@remaining_time 003E  
                         ??_initiate_game 00CA                      ??_display_player_nbr 00B2  
                              main@string 00D5                            __end_ofi1_utoa 0283  
                             _BAUDCTLbits 009B                         i1___lwmod@divisor 0070  
                       i1___lwmod@counter 0075                            __end_of_strcat 0786  
                          __end_of_strcpy 0F9B                            __end_of_strlen 0738  
                     start_initialization 0013                            ?i1_uart_printf 0070  
                             __end_of_LOG 0EAA                         __size_of_Lcd4_Cmd 001E  
                             __end_of_isr 02F8                                ?i1___awmod 0070  
                              ?i1___lwdiv 0070                       __size_of_game_phase 0033  
                              ?i1___lwmod 0070                                 i1utoa@buf 0020  
                               i1utoa@val 0078                                 i1strlen@s 0076  
                       __size_ofi1_strcat 0024                         __size_ofi1_strcpy 001C  
                       __size_ofi1_strlen 0026                                ?_Lcd4_Init 0070  
                              ?_Lcd4_Port 0070                                  ??i1_utoa 007C  
                            i1strcat@from 0070                      __size_ofi1_uart_putc 0008  
                             __pdataBANK1 00D6                        i1___awmod@dividend 0072  
                    __size_of_system_init 002B                     __size_of_init_timer_0 0007  
                   __size_of_init_timer_2 000F                             _gtype_of_game 00D7  
                            i1strcpy@from 0070         i1display_player_nbr@player_number 0038  
         display_player_nbr@player_number 00C4                                  ??_strcat 00A1  
                                ??_strcpy 00A1                                  ??_strlen 00A2  
                            i1Lcd4_Port@a 0070                                 ___latbits 0001  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                          _init_interrupt 0E9B                       __end_of__stringdata 081B  
                                LOG@level 00AC                         __size_of_initUart 001F  
                            _init_timer_0 0EAA                              _init_timer_2 0EEE  
                        ___lwdiv@dividend 00A2                       time_shapping@buffer 0032  
                                ?___awdiv 0077                                  ?___awmod 00A0  
                       uart_printf@string 00AB                                  ?___lwdiv 00A0  
                                ?___lwmod 00A0                     time_shapping@secondes 0026  
                               __pstrings 0800                           ??i1_uart_printf 0078  
                  __end_of_init_interrupt 0E9E                    initiate_game@game_time 00C8  
                          __size_ofi1_LOG 0005                               i1LOG@string 007D  
                           ??i1_Lcd4_Port 0070                               ??i1___awmod 0074  
                        ___lwdiv@quotient 00A5                               ??i1___lwdiv 0074  
                             ??i1___lwmod 0074                    Lcd4_Set_Cursor@lCmdLsb 00AB  
                  Lcd4_Set_Cursor@lCmdMsb 00AA                               ??_Lcd4_Init 00A4  
                       interrupt_function 0004                               ??_Lcd4_Port 00A0  
              ?_set_tick_period_timer1_us 0070                                 clear_ram0 07F8  
                                _PIE1bits 008C                                  _PIR1bits 000C  
                            ??_game_phase 0033                                 _uart_getc 0EC9  
                  __size_of_time_shapping 00DC                                 _uart_putc 0ED3  
           __size_ofi1_display_player_nbr 002F  i1display_player_nbr@string_player_number 0036  
  display_player_nbr@string_player_number 00C5                    initiate_game@player_nb 00CF  
                             __stringbase 0805                               __stringdata 0806  
                       i1_Lcd4_Set_Cursor 0738                                  _Lcd4_Cmd 0F5F  
                         ?_init_interrupt 0070                             ??_uart_printf 00A8  
                      ?i1_Lcd4_Set_Cursor 0074                  __size_of_Lcd4_Set_Cursor 002C  
                                i1_strcat 0FDC                                  i1_strcpy 0F43  
                                i1_strlen 07D2                        Lcd4_Write_String@a 00B1  
                      Lcd4_Write_String@i 00AF                        __end_of_game_phase 05A4  
                     ??i1_Lcd4_Set_Cursor 0075                       __end_ofi1_Lcd4_Port 0F43  
                               isr@string 0044                                ?_uart_getc 0070  
                       i1___awmod@divisor 0070                               i1Lcd4_Cmd@a 0073  
                              ?_uart_putc 0070                         i1___awmod@counter 0075  
                        __size_of___awdiv 005D                          __size_of___awmod 004F  
               __end_ofi1_Lcd4_Set_Cursor 0760               __end_ofi1_Lcd4_Write_String 07D2  
                        __size_of___lwdiv 0040                          __size_of___lwmod 0036  
                      __end_of__stringtab 0806                     __end_of_switch_player 0F11  
                            _player_array 0120                                strcat@from 00A0  
                         ___lwdiv@divisor 00A0                           ___lwdiv@counter 00A7  
                                __ptext10 05D5                                  __ptext11 0193  
                                __ptext20 0ED3                                  __ptext12 0507  
                                __ptext21 0710                                  __ptext13 0489  
                                __ptext30 0F43                                  __ptext22 0691  
                                __ptext14 0F7D                                  __ptext31 0FDC  
                                __ptext23 0F5F                                  __ptext15 0760  
                                __ptext40 0738                                  __ptext32 0EE0  
                                __ptext24 0663                                  __ptext16 0786  
                                __ptext41 0F11                                  __ptext33 0571  
                                __ptext25 03A7                                  __ptext17 0355  
                                __ptext42 0F29                                  __ptext34 07AC  
                                __ptext26 0283                                  __ptext18 0EA3  
                                __ptext43 002E                                  __ptext35 0443  
                                __ptext27 0EC9                                  __ptext19 06E8  
                                __ptext44 020B                                  __ptext36 0E9E  
                                __ptext28 0EFD                                  __ptext45 053D  
                                __ptext37 0FBA                                  __ptext29 0606  
                                __ptext46 04C9                                  __ptext38 0EB1  
                                __ptext47 03F6                                  __ptext39 07D2  
                                __ptext48 02F8                             _time_shapping 002E  
                     __end_of_uart_printf 0710                         i1_Lcd4_Write_Char 0443  
                              i1LOG@level 007C                        i1___lwdiv@dividend 0072  
                              strcpy@from 00A0                                  _initUart 0F9B  
                           __size_of_main 002E                        ?i1_Lcd4_Write_Char 0070  
                           __size_of_utoa 0078                                Lcd4_Port@a 00A0  
                __size_of_Lcd4_Write_Char 0052              __size_of_ConfigureOscillator 0008  
             __size_of_display_player_nbr 0031                    i1Lcd4_Set_Cursor@ligne 0079  
                   __end_of_initiate_game 0193                       ??i1_Lcd4_Write_Char 0071  
                          initiate_game@i 00D0                        i1___lwdiv@quotient 0075  
                              _INTCONbits 000B                     i1Lcd4_Write_Char@temp 0073  
                          ?_time_shapping 0024                               i1_Lcd4_Port 0F29  
               __end_ofi1_Lcd4_Write_Char 0489                                  intlevel1 0000  
                       ??_Lcd4_Set_Cursor 00A5                          ___lwmod@dividend 00A2  
                           ??i1_uart_putc 0070                                 stringcode 0800  
                              _OSCCONbits 008F                             ??_system_init 00A6  
                    Lcd4_Set_Cursor@ligne 00A9                               ??_uart_getc 0070  
                             ??_uart_putc 00A0                __size_ofi1_Lcd4_Set_Cursor 0028  
                              i1_Lcd4_Cmd 0F11                                  utoa@base 00AA  
                                strcat@cp 00A3                                  strcat@to 00A2  
                         ___lwmod@divisor 00A0                                  strcpy@cp 00A2  
                                strlen@cp 00A7                                  strcpy@to 00A3  
                         ___lwmod@counter 00A5                               _uart_printf 06E8  
                                stringdir 0800                                  stringtab 0800  
      set_tick_period_timer1_us@period_us 0070                        __CFG_FOSC$INTRCCLK 0000  
                           uart_putc@data 00A0                 initiate_game@type_of_game 00C7  
                            uart_printf@i 00A9               ??_set_tick_period_timer1_us 0072  
